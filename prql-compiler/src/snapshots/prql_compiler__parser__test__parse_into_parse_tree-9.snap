---
source: prql-compiler/src/parser.rs
expression: "parse_tree_of_str(\"1  + 2\", Rule::expr)?"
---
[
    Pair {
        rule: expr,
        span: Span {
            str: "1  + 2",
            start: 0,
            end: 6,
        },
        inner: [
            Pair {
                rule: expr_coalesce,
                span: Span {
                    str: "1  + 2",
                    start: 0,
                    end: 6,
                },
                inner: [
                    Pair {
                        rule: expr_compare,
                        span: Span {
                            str: "1  + 2",
                            start: 0,
                            end: 6,
                        },
                        inner: [
                            Pair {
                                rule: expr_add,
                                span: Span {
                                    str: "1  + 2",
                                    start: 0,
                                    end: 6,
                                },
                                inner: [
                                    Pair {
                                        rule: expr_mul,
                                        span: Span {
                                            str: "1  ",
                                            start: 0,
                                            end: 3,
                                        },
                                        inner: [
                                            Pair {
                                                rule: number,
                                                span: Span {
                                                    str: "1",
                                                    start: 0,
                                                    end: 1,
                                                },
                                                inner: [],
                                            },
                                        ],
                                    },
                                    Pair {
                                        rule: operator_add,
                                        span: Span {
                                            str: "+",
                                            start: 3,
                                            end: 4,
                                        },
                                        inner: [],
                                    },
                                    Pair {
                                        rule: expr_add,
                                        span: Span {
                                            str: "2",
                                            start: 5,
                                            end: 6,
                                        },
                                        inner: [
                                            Pair {
                                                rule: expr_mul,
                                                span: Span {
                                                    str: "2",
                                                    start: 5,
                                                    end: 6,
                                                },
                                                inner: [
                                                    Pair {
                                                        rule: number,
                                                        span: Span {
                                                            str: "2",
                                                            start: 5,
                                                            end: 6,
                                                        },
                                                        inner: [],
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                ],
                            },
                        ],
                    },
                ],
            },
        ],
    },
]
