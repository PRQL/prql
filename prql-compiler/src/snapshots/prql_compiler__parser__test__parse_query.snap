---
source: prql-compiler/src/parser.rs
expression: "ast_of_string(r#\"\nfrom employees\nfilter country = \"USA\"                        # Each line transforms the previous result.\nderive [                                      # This adds columns / variables.\n  gross_salary: salary + payroll_tax,\n  gross_cost:   gross_salary + benefits_cost # Variables can use other variables.\n]\nfilter gross_cost > 0\ngroup [title, country] (\naggregate [               # `by` are the columns to group by.\n                   average salary,            # These are aggregation calcs run on each group.\n                   sum salary,\n                   average gross_salary,\n                   sum gross_salary,\n                   average gross_cost,\n  sum_gross_cost: sum gross_cost,\n  ct            : count,\n] )\nsort sum_gross_cost\nfilter ct > 200\ntake 20\n    \"#.trim(),\n              Rule::query)?"
---
Query:
  version: ~
  dialect: Generic
  nodes:
    - Pipeline:
        value: ~
        functions:
          - FuncCall:
              name: from
              args:
                - Ident: employees
              named_args: {}
          - FuncCall:
              name: filter
              args:
                - Expr:
                    - Ident: country
                    - Raw: "="
                    - String: USA
              named_args: {}
          - FuncCall:
              name: derive
              args:
                - List:
                    - NamedExpr:
                        name: gross_salary
                        expr:
                          Expr:
                            - Ident: salary
                            - Raw: +
                            - Ident: payroll_tax
                    - NamedExpr:
                        name: gross_cost
                        expr:
                          Expr:
                            - Ident: gross_salary
                            - Raw: +
                            - Ident: benefits_cost
              named_args: {}
          - FuncCall:
              name: filter
              args:
                - Expr:
                    - Ident: gross_cost
                    - Raw: ">"
                    - Raw: "0"
              named_args: {}
          - FuncCall:
              name: group
              args:
                - List:
                    - Ident: title
                    - Ident: country
                - Pipeline:
                    value: ~
                    functions:
                      - FuncCall:
                          name: aggregate
                          args:
                            - List:
                                - FuncCall:
                                    name: average
                                    args:
                                      - Ident: salary
                                    named_args: {}
                                - FuncCall:
                                    name: sum
                                    args:
                                      - Ident: salary
                                    named_args: {}
                                - FuncCall:
                                    name: average
                                    args:
                                      - Ident: gross_salary
                                    named_args: {}
                                - FuncCall:
                                    name: sum
                                    args:
                                      - Ident: gross_salary
                                    named_args: {}
                                - FuncCall:
                                    name: average
                                    args:
                                      - Ident: gross_cost
                                    named_args: {}
                                - NamedExpr:
                                    name: sum_gross_cost
                                    expr:
                                      FuncCall:
                                        name: sum
                                        args:
                                          - Ident: gross_cost
                                        named_args: {}
                                - NamedExpr:
                                    name: ct
                                    expr:
                                      Ident: count
                          named_args: {}
              named_args: {}
          - FuncCall:
              name: sort
              args:
                - Ident: sum_gross_cost
              named_args: {}
          - FuncCall:
              name: filter
              args:
                - Expr:
                    - Ident: ct
                    - Raw: ">"
                    - Raw: "200"
              named_args: {}
          - FuncCall:
              name: take
              args:
                - Raw: "20"
              named_args: {}

