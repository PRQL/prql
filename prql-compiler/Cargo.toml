[package]
description = "PRQL is a modern language for transforming data â€” a simple, powerful, pipelined SQL replacement."
name = "prql-compiler"

edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

# Manually updated to match the version in the root `Cargo.toml`, until
# https://github.com/foresterre/cargo-msrv/issues/590 is resolved.

metadata.msrv = "1.65.0"

[dependencies]
anyhow = {version = "1.0.57", features = ["backtrace"]}
ariadne = "0.2.0"
csv = "1.2.0"
enum-as-inner = "0.5.0"
itertools = "0.10.3"
lazy_static = "1.4.0"
log = "0.4.17"
once_cell = "1.17.0"
regex = "1.7.0"
semver = {version = "1.0.14", features = ["serde"]}
# We could put `serde` behind a feature if needed, particularly `yaml`, which
# isn't used in the main library.
serde = {version = "1.0.137", features = ["derive"]}
serde_json = "1.0.81"
serde_yaml = "0.9"
sqlformat = "0.2.0"
sqlparser = {version = "0.33.0", features = ["serde"]}
strum = {version = "0.24.0", features = ["std", "derive"]}# for converting enum variants to string
strum_macros = "0.24.0"

# Chumsky issues in wasm (though we only see it when compiling on MacOS)
[target.'cfg(not(target_family="wasm"))'.dependencies]
chumsky = "0.9.2"
[target.'cfg(target_family="wasm")'.dependencies]
chumsky = {version = "0.9.2", features = ["ahash", "std"], default-features = false}

[dev-dependencies]
cfg-if = "1.0"
insta = {version = "1.29", features = ["colors", "glob", "yaml"]}

# For integration tests
[target.'cfg(not(target_family="wasm"))'.dev-dependencies]
chrono = {version = "0.4", features = [], default-features = false}
criterion = "0.4.0"
csv = "1.2"
mysql = "23"
pg_bigdecimal = "0.1"
postgres = "0.19"
pretty_assertions = "1.3.0"
rusqlite = {version = "0.29.0", features = ["bundled", "csvtab"]}
tiberius = {version = "0.12", features = ["sql-browser-tokio", "bigdecimal", "time"]}
tokio = {version = "1", features = ["full"]}
tokio-util = {version = "0.7", features = ["compat"]}

# Re-enable on windows when duckdb supports it
# https://github.com/wangfenjin/duckdb-rs/issues/62
[target.'cfg(not(any(target_family = "windows", target_family="wasm")))'.dev-dependencies]
duckdb = {version = "0.7.0", features = ["bundled", "chrono"]}

[[bench]]
harness = false
name = "bench"

# Putting this in the workspace root causes it to refer to the path relative
# to `prql-compiler`? We can place it there when that's fixed.

[[package.metadata.release.pre-release-replacements]]
exactly = 1
file = "../web/book/src/language-features/target.md"
replace = 'prql version:"{{version}}"'
search = 'prql version:"[\d.]+"'

[features]
test-external-dbs = []
