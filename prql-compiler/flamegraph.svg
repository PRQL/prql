<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1878" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1861.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1861.00"> </text><svg id="frames" x="10" width="1180" total_samples="919"><g><title>[[stack]] (1 samples, 0.11%)</title><rect x="0.0000%" y="1797" width="0.1088%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1807.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.11%)</title><rect x="0.0000%" y="1781" width="0.1088%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1791.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.11%)</title><rect x="0.0000%" y="1765" width="0.1088%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1775.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.11%)</title><rect x="0.0000%" y="1749" width="0.1088%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1759.50"></text></g><g><title>__libc_read (1 samples, 0.11%)</title><rect x="0.0000%" y="1733" width="0.1088%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1743.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="0.0000%" y="1717" width="0.1088%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1727.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="1077" width="0.1088%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.3588%" y="1087.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="1061" width="0.1088%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="0.3588%" y="1071.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="1045" width="0.1088%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="1"/><text x="0.3588%" y="1055.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="1029" width="0.1088%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="1"/><text x="0.3588%" y="1039.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="1013" width="0.1088%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="1"/><text x="0.3588%" y="1023.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="997" width="0.1088%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="1"/><text x="0.3588%" y="1007.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="981" width="0.1088%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="1"/><text x="0.3588%" y="991.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="965" width="0.1088%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="1"/><text x="0.3588%" y="975.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="949" width="0.1088%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="1"/><text x="0.3588%" y="959.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="933" width="0.1088%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="1"/><text x="0.3588%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="917" width="0.1088%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="1"/><text x="0.3588%" y="927.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="901" width="0.1088%" height="15" fill="rgb(210,31,41)" fg:x="1" fg:w="1"/><text x="0.3588%" y="911.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="885" width="0.1088%" height="15" fill="rgb(221,200,47)" fg:x="1" fg:w="1"/><text x="0.3588%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="869" width="0.1088%" height="15" fill="rgb(226,26,5)" fg:x="1" fg:w="1"/><text x="0.3588%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="853" width="0.1088%" height="15" fill="rgb(249,33,26)" fg:x="1" fg:w="1"/><text x="0.3588%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="837" width="0.1088%" height="15" fill="rgb(235,183,28)" fg:x="1" fg:w="1"/><text x="0.3588%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="821" width="0.1088%" height="15" fill="rgb(221,5,38)" fg:x="1" fg:w="1"/><text x="0.3588%" y="831.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="805" width="0.1088%" height="15" fill="rgb(247,18,42)" fg:x="1" fg:w="1"/><text x="0.3588%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="789" width="0.1088%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="1"/><text x="0.3588%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="773" width="0.1088%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="1"/><text x="0.3588%" y="783.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (1 samples, 0.11%)</title><rect x="0.1088%" y="757" width="0.1088%" height="15" fill="rgb(225,111,53)" fg:x="1" fg:w="1"/><text x="0.3588%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (1 samples, 0.11%)</title><rect x="0.1088%" y="741" width="0.1088%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="1"/><text x="0.3588%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="0.1088%" y="725" width="0.1088%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="1"/><text x="0.3588%" y="735.50"></text></g><g><title>&lt;chumsky::primitive::NoneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="0.1088%" y="709" width="0.1088%" height="15" fill="rgb(232,36,49)" fg:x="1" fg:w="1"/><text x="0.3588%" y="719.50"></text></g><g><title>&lt;chumsky::primitive::NoneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="0.1088%" y="693" width="0.1088%" height="15" fill="rgb(209,103,24)" fg:x="1" fg:w="1"/><text x="0.3588%" y="703.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (1 samples, 0.11%)</title><rect x="0.1088%" y="677" width="0.1088%" height="15" fill="rgb(229,88,8)" fg:x="1" fg:w="1"/><text x="0.3588%" y="687.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="0.1088%" y="661" width="0.1088%" height="15" fill="rgb(213,181,19)" fg:x="1" fg:w="1"/><text x="0.3588%" y="671.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="0.2176%" y="533" width="0.4353%" height="15" fill="rgb(254,191,54)" fg:x="2" fg:w="4"/><text x="0.4676%" y="543.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (1 samples, 0.11%)</title><rect x="0.6529%" y="533" width="0.1088%" height="15" fill="rgb(241,83,37)" fg:x="6" fg:w="1"/><text x="0.9029%" y="543.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="0.6529%" y="517" width="0.1088%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="1"/><text x="0.9029%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="0.2176%" y="581" width="0.7617%" height="15" fill="rgb(226,3,54)" fg:x="2" fg:w="7"/><text x="0.4676%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="0.2176%" y="565" width="0.7617%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="7"/><text x="0.4676%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (7 samples, 0.76%)</title><rect x="0.2176%" y="549" width="0.7617%" height="15" fill="rgb(238,167,29)" fg:x="2" fg:w="7"/><text x="0.4676%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.22%)</title><rect x="0.7617%" y="533" width="0.2176%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="2"/><text x="1.0117%" y="543.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="0.7617%" y="517" width="0.2176%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="2"/><text x="1.0117%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="965" width="1.0881%" height="15" fill="rgb(208,69,12)" fg:x="2" fg:w="10"/><text x="0.4676%" y="975.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="949" width="1.0881%" height="15" fill="rgb(235,93,37)" fg:x="2" fg:w="10"/><text x="0.4676%" y="959.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="933" width="1.0881%" height="15" fill="rgb(213,116,39)" fg:x="2" fg:w="10"/><text x="0.4676%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="917" width="1.0881%" height="15" fill="rgb(222,207,29)" fg:x="2" fg:w="10"/><text x="0.4676%" y="927.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="901" width="1.0881%" height="15" fill="rgb(206,96,30)" fg:x="2" fg:w="10"/><text x="0.4676%" y="911.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="885" width="1.0881%" height="15" fill="rgb(218,138,4)" fg:x="2" fg:w="10"/><text x="0.4676%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="869" width="1.0881%" height="15" fill="rgb(250,191,14)" fg:x="2" fg:w="10"/><text x="0.4676%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="853" width="1.0881%" height="15" fill="rgb(239,60,40)" fg:x="2" fg:w="10"/><text x="0.4676%" y="863.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="837" width="1.0881%" height="15" fill="rgb(206,27,48)" fg:x="2" fg:w="10"/><text x="0.4676%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="821" width="1.0881%" height="15" fill="rgb(225,35,8)" fg:x="2" fg:w="10"/><text x="0.4676%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="805" width="1.0881%" height="15" fill="rgb(250,213,24)" fg:x="2" fg:w="10"/><text x="0.4676%" y="815.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="789" width="1.0881%" height="15" fill="rgb(247,123,22)" fg:x="2" fg:w="10"/><text x="0.4676%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="773" width="1.0881%" height="15" fill="rgb(231,138,38)" fg:x="2" fg:w="10"/><text x="0.4676%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="757" width="1.0881%" height="15" fill="rgb(231,145,46)" fg:x="2" fg:w="10"/><text x="0.4676%" y="767.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="741" width="1.0881%" height="15" fill="rgb(251,118,11)" fg:x="2" fg:w="10"/><text x="0.4676%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="725" width="1.0881%" height="15" fill="rgb(217,147,25)" fg:x="2" fg:w="10"/><text x="0.4676%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="709" width="1.0881%" height="15" fill="rgb(247,81,37)" fg:x="2" fg:w="10"/><text x="0.4676%" y="719.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="693" width="1.0881%" height="15" fill="rgb(209,12,38)" fg:x="2" fg:w="10"/><text x="0.4676%" y="703.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="677" width="1.0881%" height="15" fill="rgb(227,1,9)" fg:x="2" fg:w="10"/><text x="0.4676%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="661" width="1.0881%" height="15" fill="rgb(248,47,43)" fg:x="2" fg:w="10"/><text x="0.4676%" y="671.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="645" width="1.0881%" height="15" fill="rgb(221,10,30)" fg:x="2" fg:w="10"/><text x="0.4676%" y="655.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="0.2176%" y="629" width="1.0881%" height="15" fill="rgb(210,229,1)" fg:x="2" fg:w="10"/><text x="0.4676%" y="639.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="0.2176%" y="613" width="1.0881%" height="15" fill="rgb(222,148,37)" fg:x="2" fg:w="10"/><text x="0.4676%" y="623.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="0.2176%" y="597" width="1.0881%" height="15" fill="rgb(234,67,33)" fg:x="2" fg:w="10"/><text x="0.4676%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="0.9793%" y="581" width="0.3264%" height="15" fill="rgb(247,98,35)" fg:x="9" fg:w="3"/><text x="1.2293%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="0.9793%" y="565" width="0.3264%" height="15" fill="rgb(247,138,52)" fg:x="9" fg:w="3"/><text x="1.2293%" y="575.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (3 samples, 0.33%)</title><rect x="0.9793%" y="549" width="0.3264%" height="15" fill="rgb(213,79,30)" fg:x="9" fg:w="3"/><text x="1.2293%" y="559.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (3 samples, 0.33%)</title><rect x="0.9793%" y="533" width="0.3264%" height="15" fill="rgb(246,177,23)" fg:x="9" fg:w="3"/><text x="1.2293%" y="543.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (3 samples, 0.33%)</title><rect x="0.9793%" y="517" width="0.3264%" height="15" fill="rgb(230,62,27)" fg:x="9" fg:w="3"/><text x="1.2293%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (3 samples, 0.33%)</title><rect x="0.9793%" y="501" width="0.3264%" height="15" fill="rgb(216,154,8)" fg:x="9" fg:w="3"/><text x="1.2293%" y="511.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="0.9793%" y="485" width="0.3264%" height="15" fill="rgb(244,35,45)" fg:x="9" fg:w="3"/><text x="1.2293%" y="495.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="0.9793%" y="469" width="0.3264%" height="15" fill="rgb(251,115,12)" fg:x="9" fg:w="3"/><text x="1.2293%" y="479.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="0.9793%" y="453" width="0.3264%" height="15" fill="rgb(240,54,50)" fg:x="9" fg:w="3"/><text x="1.2293%" y="463.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (3 samples, 0.33%)</title><rect x="0.9793%" y="437" width="0.3264%" height="15" fill="rgb(233,84,52)" fg:x="9" fg:w="3"/><text x="1.2293%" y="447.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (3 samples, 0.33%)</title><rect x="0.9793%" y="421" width="0.3264%" height="15" fill="rgb(207,117,47)" fg:x="9" fg:w="3"/><text x="1.2293%" y="431.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (3 samples, 0.33%)</title><rect x="0.9793%" y="405" width="0.3264%" height="15" fill="rgb(249,43,39)" fg:x="9" fg:w="3"/><text x="1.2293%" y="415.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="917" width="0.1088%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="1.5558%" y="927.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="901" width="0.1088%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="1.5558%" y="911.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="885" width="0.1088%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="1.5558%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="869" width="0.1088%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="1.5558%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="853" width="0.1088%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="1.5558%" y="863.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="837" width="0.1088%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="1"/><text x="1.5558%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="821" width="0.1088%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="1"/><text x="1.5558%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="805" width="0.1088%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="1"/><text x="1.5558%" y="815.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="789" width="0.1088%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="1"/><text x="1.5558%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="773" width="0.1088%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="1"/><text x="1.5558%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="757" width="0.1088%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="1"/><text x="1.5558%" y="767.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="741" width="0.1088%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="1"/><text x="1.5558%" y="751.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="725" width="0.1088%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="1"/><text x="1.5558%" y="735.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="709" width="0.1088%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="1"/><text x="1.5558%" y="719.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (1 samples, 0.11%)</title><rect x="1.3058%" y="693" width="0.1088%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="1"/><text x="1.5558%" y="703.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (1 samples, 0.11%)</title><rect x="1.3058%" y="677" width="0.1088%" height="15" fill="rgb(242,216,29)" fg:x="12" fg:w="1"/><text x="1.5558%" y="687.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (1 samples, 0.11%)</title><rect x="1.3058%" y="661" width="0.1088%" height="15" fill="rgb(230,116,27)" fg:x="12" fg:w="1"/><text x="1.5558%" y="671.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (1 samples, 0.11%)</title><rect x="1.3058%" y="645" width="0.1088%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="1"/><text x="1.5558%" y="655.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="629" width="0.1088%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="1"/><text x="1.5558%" y="639.50"></text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="613" width="0.1088%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="1"/><text x="1.5558%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="597" width="0.1088%" height="15" fill="rgb(236,97,10)" fg:x="12" fg:w="1"/><text x="1.5558%" y="607.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="581" width="0.1088%" height="15" fill="rgb(233,208,19)" fg:x="12" fg:w="1"/><text x="1.5558%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="565" width="0.1088%" height="15" fill="rgb(216,164,2)" fg:x="12" fg:w="1"/><text x="1.5558%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="549" width="0.1088%" height="15" fill="rgb(220,129,5)" fg:x="12" fg:w="1"/><text x="1.5558%" y="559.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="533" width="0.1088%" height="15" fill="rgb(242,17,10)" fg:x="12" fg:w="1"/><text x="1.5558%" y="543.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="517" width="0.1088%" height="15" fill="rgb(242,107,0)" fg:x="12" fg:w="1"/><text x="1.5558%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="501" width="0.1088%" height="15" fill="rgb(251,28,31)" fg:x="12" fg:w="1"/><text x="1.5558%" y="511.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="485" width="0.1088%" height="15" fill="rgb(233,223,10)" fg:x="12" fg:w="1"/><text x="1.5558%" y="495.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="469" width="0.1088%" height="15" fill="rgb(215,21,27)" fg:x="12" fg:w="1"/><text x="1.5558%" y="479.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="453" width="0.1088%" height="15" fill="rgb(232,23,21)" fg:x="12" fg:w="1"/><text x="1.5558%" y="463.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="437" width="0.1088%" height="15" fill="rgb(244,5,23)" fg:x="12" fg:w="1"/><text x="1.5558%" y="447.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="421" width="0.1088%" height="15" fill="rgb(226,81,46)" fg:x="12" fg:w="1"/><text x="1.5558%" y="431.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="405" width="0.1088%" height="15" fill="rgb(247,70,30)" fg:x="12" fg:w="1"/><text x="1.5558%" y="415.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="1.3058%" y="389" width="0.1088%" height="15" fill="rgb(212,68,19)" fg:x="12" fg:w="1"/><text x="1.5558%" y="399.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="1.3058%" y="373" width="0.1088%" height="15" fill="rgb(240,187,13)" fg:x="12" fg:w="1"/><text x="1.5558%" y="383.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="1.3058%" y="357" width="0.1088%" height="15" fill="rgb(223,113,26)" fg:x="12" fg:w="1"/><text x="1.5558%" y="367.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (1 samples, 0.11%)</title><rect x="1.3058%" y="341" width="0.1088%" height="15" fill="rgb(206,192,2)" fg:x="12" fg:w="1"/><text x="1.5558%" y="351.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="1.3058%" y="325" width="0.1088%" height="15" fill="rgb(241,108,4)" fg:x="12" fg:w="1"/><text x="1.5558%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="1.5234%" y="677" width="0.1088%" height="15" fill="rgb(247,173,49)" fg:x="14" fg:w="1"/><text x="1.7734%" y="687.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="1.6322%" y="661" width="0.1088%" height="15" fill="rgb(224,114,35)" fg:x="15" fg:w="1"/><text x="1.8822%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="1.6322%" y="645" width="0.1088%" height="15" fill="rgb(245,159,27)" fg:x="15" fg:w="1"/><text x="1.8822%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="1.6322%" y="629" width="0.1088%" height="15" fill="rgb(245,172,44)" fg:x="15" fg:w="1"/><text x="1.8822%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="1.6322%" y="613" width="0.1088%" height="15" fill="rgb(236,23,11)" fg:x="15" fg:w="1"/><text x="1.8822%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="1.6322%" y="597" width="0.1088%" height="15" fill="rgb(205,117,38)" fg:x="15" fg:w="1"/><text x="1.8822%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="1.6322%" y="581" width="0.1088%" height="15" fill="rgb(237,72,25)" fg:x="15" fg:w="1"/><text x="1.8822%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="1.6322%" y="565" width="0.1088%" height="15" fill="rgb(244,70,9)" fg:x="15" fg:w="1"/><text x="1.8822%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="1.6322%" y="549" width="0.1088%" height="15" fill="rgb(217,125,39)" fg:x="15" fg:w="1"/><text x="1.8822%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="1.6322%" y="533" width="0.1088%" height="15" fill="rgb(235,36,10)" fg:x="15" fg:w="1"/><text x="1.8822%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.11%)</title><rect x="1.6322%" y="517" width="0.1088%" height="15" fill="rgb(251,123,47)" fg:x="15" fg:w="1"/><text x="1.8822%" y="527.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="1.6322%" y="501" width="0.1088%" height="15" fill="rgb(221,13,13)" fg:x="15" fg:w="1"/><text x="1.8822%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.11%)</title><rect x="1.6322%" y="485" width="0.1088%" height="15" fill="rgb(238,131,9)" fg:x="15" fg:w="1"/><text x="1.8822%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.11%)</title><rect x="1.6322%" y="469" width="0.1088%" height="15" fill="rgb(211,50,8)" fg:x="15" fg:w="1"/><text x="1.8822%" y="479.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (2 samples, 0.22%)</title><rect x="1.6322%" y="677" width="0.2176%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="2"/><text x="1.8822%" y="687.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="1.7410%" y="661" width="0.1088%" height="15" fill="rgb(242,14,37)" fg:x="16" fg:w="1"/><text x="1.9910%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="0.1088%" y="1397" width="2.0675%" height="15" fill="rgb(246,228,12)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1407.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="0.1088%" y="1381" width="2.0675%" height="15" fill="rgb(213,55,15)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1391.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (19 samples, 2.07%)</title><rect x="0.1088%" y="1365" width="2.0675%" height="15" fill="rgb(209,9,3)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1375.50">&lt;..</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="0.1088%" y="1349" width="2.0675%" height="15" fill="rgb(230,59,30)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1359.50">&lt;..</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="0.1088%" y="1333" width="2.0675%" height="15" fill="rgb(209,121,21)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1343.50">&lt;..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (19 samples, 2.07%)</title><rect x="0.1088%" y="1317" width="2.0675%" height="15" fill="rgb(220,109,13)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1327.50">c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (19 samples, 2.07%)</title><rect x="0.1088%" y="1301" width="2.0675%" height="15" fill="rgb(232,18,1)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1311.50">c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (19 samples, 2.07%)</title><rect x="0.1088%" y="1285" width="2.0675%" height="15" fill="rgb(215,41,42)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1295.50">c..</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (19 samples, 2.07%)</title><rect x="0.1088%" y="1269" width="2.0675%" height="15" fill="rgb(224,123,36)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1279.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (19 samples, 2.07%)</title><rect x="0.1088%" y="1253" width="2.0675%" height="15" fill="rgb(240,125,3)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1263.50">&lt;..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="0.1088%" y="1237" width="2.0675%" height="15" fill="rgb(205,98,50)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1247.50">&lt;..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="0.1088%" y="1221" width="2.0675%" height="15" fill="rgb(205,185,37)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1231.50">&lt;..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (19 samples, 2.07%)</title><rect x="0.1088%" y="1205" width="2.0675%" height="15" fill="rgb(238,207,15)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1215.50">c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (19 samples, 2.07%)</title><rect x="0.1088%" y="1189" width="2.0675%" height="15" fill="rgb(213,199,42)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1199.50">c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (19 samples, 2.07%)</title><rect x="0.1088%" y="1173" width="2.0675%" height="15" fill="rgb(235,201,11)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1183.50">c..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (19 samples, 2.07%)</title><rect x="0.1088%" y="1157" width="2.0675%" height="15" fill="rgb(207,46,11)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1167.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (19 samples, 2.07%)</title><rect x="0.1088%" y="1141" width="2.0675%" height="15" fill="rgb(241,35,35)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1151.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="0.1088%" y="1125" width="2.0675%" height="15" fill="rgb(243,32,47)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1135.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="0.1088%" y="1109" width="2.0675%" height="15" fill="rgb(247,202,23)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1119.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (19 samples, 2.07%)</title><rect x="0.1088%" y="1093" width="2.0675%" height="15" fill="rgb(219,102,11)" fg:x="1" fg:w="19"/><text x="0.3588%" y="1103.50">&lt;..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (18 samples, 1.96%)</title><rect x="0.2176%" y="1077" width="1.9587%" height="15" fill="rgb(243,110,44)" fg:x="2" fg:w="18"/><text x="0.4676%" y="1087.50">&lt;..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (18 samples, 1.96%)</title><rect x="0.2176%" y="1061" width="1.9587%" height="15" fill="rgb(222,74,54)" fg:x="2" fg:w="18"/><text x="0.4676%" y="1071.50">&lt;..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (18 samples, 1.96%)</title><rect x="0.2176%" y="1045" width="1.9587%" height="15" fill="rgb(216,99,12)" fg:x="2" fg:w="18"/><text x="0.4676%" y="1055.50">c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (18 samples, 1.96%)</title><rect x="0.2176%" y="1029" width="1.9587%" height="15" fill="rgb(226,22,26)" fg:x="2" fg:w="18"/><text x="0.4676%" y="1039.50">c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (18 samples, 1.96%)</title><rect x="0.2176%" y="1013" width="1.9587%" height="15" fill="rgb(217,163,10)" fg:x="2" fg:w="18"/><text x="0.4676%" y="1023.50">c..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (18 samples, 1.96%)</title><rect x="0.2176%" y="997" width="1.9587%" height="15" fill="rgb(213,25,53)" fg:x="2" fg:w="18"/><text x="0.4676%" y="1007.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (18 samples, 1.96%)</title><rect x="0.2176%" y="981" width="1.9587%" height="15" fill="rgb(252,105,26)" fg:x="2" fg:w="18"/><text x="0.4676%" y="991.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="1.3058%" y="965" width="0.8705%" height="15" fill="rgb(220,39,43)" fg:x="12" fg:w="8"/><text x="1.5558%" y="975.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="1.3058%" y="949" width="0.8705%" height="15" fill="rgb(229,68,48)" fg:x="12" fg:w="8"/><text x="1.5558%" y="959.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="1.3058%" y="933" width="0.8705%" height="15" fill="rgb(252,8,32)" fg:x="12" fg:w="8"/><text x="1.5558%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="1.4146%" y="917" width="0.7617%" height="15" fill="rgb(223,20,43)" fg:x="13" fg:w="7"/><text x="1.6646%" y="927.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="1.4146%" y="901" width="0.7617%" height="15" fill="rgb(229,81,49)" fg:x="13" fg:w="7"/><text x="1.6646%" y="911.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (7 samples, 0.76%)</title><rect x="1.4146%" y="885" width="0.7617%" height="15" fill="rgb(236,28,36)" fg:x="13" fg:w="7"/><text x="1.6646%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="1.4146%" y="869" width="0.7617%" height="15" fill="rgb(249,185,26)" fg:x="13" fg:w="7"/><text x="1.6646%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="1.4146%" y="853" width="0.7617%" height="15" fill="rgb(249,174,33)" fg:x="13" fg:w="7"/><text x="1.6646%" y="863.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (7 samples, 0.76%)</title><rect x="1.4146%" y="837" width="0.7617%" height="15" fill="rgb(233,201,37)" fg:x="13" fg:w="7"/><text x="1.6646%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="1.4146%" y="821" width="0.7617%" height="15" fill="rgb(221,78,26)" fg:x="13" fg:w="7"/><text x="1.6646%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="1.4146%" y="805" width="0.7617%" height="15" fill="rgb(250,127,30)" fg:x="13" fg:w="7"/><text x="1.6646%" y="815.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (7 samples, 0.76%)</title><rect x="1.4146%" y="789" width="0.7617%" height="15" fill="rgb(230,49,44)" fg:x="13" fg:w="7"/><text x="1.6646%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="1.4146%" y="773" width="0.7617%" height="15" fill="rgb(229,67,23)" fg:x="13" fg:w="7"/><text x="1.6646%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="1.4146%" y="757" width="0.7617%" height="15" fill="rgb(249,83,47)" fg:x="13" fg:w="7"/><text x="1.6646%" y="767.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (7 samples, 0.76%)</title><rect x="1.4146%" y="741" width="0.7617%" height="15" fill="rgb(215,43,3)" fg:x="13" fg:w="7"/><text x="1.6646%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="1.4146%" y="725" width="0.7617%" height="15" fill="rgb(238,154,13)" fg:x="13" fg:w="7"/><text x="1.6646%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="1.4146%" y="709" width="0.7617%" height="15" fill="rgb(219,56,2)" fg:x="13" fg:w="7"/><text x="1.6646%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (7 samples, 0.76%)</title><rect x="1.4146%" y="693" width="0.7617%" height="15" fill="rgb(233,0,4)" fg:x="13" fg:w="7"/><text x="1.6646%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.33%)</title><rect x="1.8498%" y="677" width="0.3264%" height="15" fill="rgb(235,30,7)" fg:x="17" fg:w="3"/><text x="2.0998%" y="687.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="1.9587%" y="661" width="0.2176%" height="15" fill="rgb(250,79,13)" fg:x="18" fg:w="2"/><text x="2.2087%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (1 samples, 0.11%)</title><rect x="2.1763%" y="885" width="0.1088%" height="15" fill="rgb(211,146,34)" fg:x="20" fg:w="1"/><text x="2.4263%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="2.1763%" y="869" width="0.1088%" height="15" fill="rgb(228,22,38)" fg:x="20" fg:w="1"/><text x="2.4263%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="2.1763%" y="853" width="0.1088%" height="15" fill="rgb(235,168,5)" fg:x="20" fg:w="1"/><text x="2.4263%" y="863.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="2.1763%" y="837" width="0.1088%" height="15" fill="rgb(221,155,16)" fg:x="20" fg:w="1"/><text x="2.4263%" y="847.50"></text></g><g><title>chumsky::error::merge_alts (1 samples, 0.11%)</title><rect x="2.2851%" y="885" width="0.1088%" height="15" fill="rgb(215,215,53)" fg:x="21" fg:w="1"/><text x="2.5351%" y="895.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="2.2851%" y="869" width="0.1088%" height="15" fill="rgb(223,4,10)" fg:x="21" fg:w="1"/><text x="2.5351%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1781" width="2.3939%" height="15" fill="rgb(234,103,6)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1791.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1765" width="2.3939%" height="15" fill="rgb(227,97,0)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1775.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1749" width="2.3939%" height="15" fill="rgb(234,150,53)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1759.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1733" width="2.3939%" height="15" fill="rgb(228,201,54)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1743.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1717" width="2.3939%" height="15" fill="rgb(222,22,37)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1727.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1701" width="2.3939%" height="15" fill="rgb(237,53,32)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1711.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1685" width="2.3939%" height="15" fill="rgb(233,25,53)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1695.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1669" width="2.3939%" height="15" fill="rgb(210,40,34)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1679.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1653" width="2.3939%" height="15" fill="rgb(241,220,44)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1663.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1637" width="2.3939%" height="15" fill="rgb(235,28,35)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1647.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1621" width="2.3939%" height="15" fill="rgb(210,56,17)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1631.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1605" width="2.3939%" height="15" fill="rgb(224,130,29)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1615.50">&lt;c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (22 samples, 2.39%)</title><rect x="0.1088%" y="1589" width="2.3939%" height="15" fill="rgb(235,212,8)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1599.50">ch..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (22 samples, 2.39%)</title><rect x="0.1088%" y="1573" width="2.3939%" height="15" fill="rgb(223,33,50)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1583.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1557" width="2.3939%" height="15" fill="rgb(219,149,13)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1567.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1541" width="2.3939%" height="15" fill="rgb(250,156,29)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1551.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1525" width="2.3939%" height="15" fill="rgb(216,193,19)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1535.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1509" width="2.3939%" height="15" fill="rgb(216,135,14)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1519.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1493" width="2.3939%" height="15" fill="rgb(241,47,5)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1503.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1477" width="2.3939%" height="15" fill="rgb(233,42,35)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1487.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1461" width="2.3939%" height="15" fill="rgb(231,13,6)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1471.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="0.1088%" y="1445" width="2.3939%" height="15" fill="rgb(207,181,40)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1455.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="0.1088%" y="1429" width="2.3939%" height="15" fill="rgb(254,173,49)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1439.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="0.1088%" y="1413" width="2.3939%" height="15" fill="rgb(221,1,38)" fg:x="1" fg:w="22"/><text x="0.3588%" y="1423.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="1397" width="0.3264%" height="15" fill="rgb(206,124,46)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1407.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="1381" width="0.3264%" height="15" fill="rgb(249,21,11)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1391.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (3 samples, 0.33%)</title><rect x="2.1763%" y="1365" width="0.3264%" height="15" fill="rgb(222,201,40)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1375.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (3 samples, 0.33%)</title><rect x="2.1763%" y="1349" width="0.3264%" height="15" fill="rgb(235,61,29)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1359.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="1333" width="0.3264%" height="15" fill="rgb(219,207,3)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1343.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="1317" width="0.3264%" height="15" fill="rgb(222,56,46)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1327.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="1301" width="0.3264%" height="15" fill="rgb(239,76,54)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1311.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="1285" width="0.3264%" height="15" fill="rgb(231,124,27)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1295.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="1269" width="0.3264%" height="15" fill="rgb(249,195,6)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1279.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="1253" width="0.3264%" height="15" fill="rgb(237,174,47)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1263.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="1237" width="0.3264%" height="15" fill="rgb(206,201,31)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1247.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="1221" width="0.3264%" height="15" fill="rgb(231,57,52)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1231.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="1205" width="0.3264%" height="15" fill="rgb(248,177,22)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1215.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="1189" width="0.3264%" height="15" fill="rgb(215,211,37)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1199.50"></text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="1173" width="0.3264%" height="15" fill="rgb(241,128,51)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1183.50"></text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="1157" width="0.3264%" height="15" fill="rgb(227,165,31)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1167.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="1141" width="0.3264%" height="15" fill="rgb(228,167,24)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1151.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="1125" width="0.3264%" height="15" fill="rgb(228,143,12)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1135.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="1109" width="0.3264%" height="15" fill="rgb(249,149,8)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1119.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::parse (3 samples, 0.33%)</title><rect x="2.1763%" y="1093" width="0.3264%" height="15" fill="rgb(243,35,44)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1103.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (3 samples, 0.33%)</title><rect x="2.1763%" y="1077" width="0.3264%" height="15" fill="rgb(246,89,9)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1087.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (3 samples, 0.33%)</title><rect x="2.1763%" y="1061" width="0.3264%" height="15" fill="rgb(233,213,13)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1071.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (3 samples, 0.33%)</title><rect x="2.1763%" y="1045" width="0.3264%" height="15" fill="rgb(233,141,41)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1055.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::parse::{{closure}} (3 samples, 0.33%)</title><rect x="2.1763%" y="1029" width="0.3264%" height="15" fill="rgb(239,167,4)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1039.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="1013" width="0.3264%" height="15" fill="rgb(209,217,16)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="997" width="0.3264%" height="15" fill="rgb(219,88,35)" fg:x="20" fg:w="3"/><text x="2.4263%" y="1007.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="981" width="0.3264%" height="15" fill="rgb(220,193,23)" fg:x="20" fg:w="3"/><text x="2.4263%" y="991.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="2.1763%" y="965" width="0.3264%" height="15" fill="rgb(230,90,52)" fg:x="20" fg:w="3"/><text x="2.4263%" y="975.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="2.1763%" y="949" width="0.3264%" height="15" fill="rgb(252,106,19)" fg:x="20" fg:w="3"/><text x="2.4263%" y="959.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="2.1763%" y="933" width="0.3264%" height="15" fill="rgb(206,74,20)" fg:x="20" fg:w="3"/><text x="2.4263%" y="943.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (3 samples, 0.33%)</title><rect x="2.1763%" y="917" width="0.3264%" height="15" fill="rgb(230,138,44)" fg:x="20" fg:w="3"/><text x="2.4263%" y="927.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (3 samples, 0.33%)</title><rect x="2.1763%" y="901" width="0.3264%" height="15" fill="rgb(235,182,43)" fg:x="20" fg:w="3"/><text x="2.4263%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.11%)</title><rect x="2.3939%" y="885" width="0.1088%" height="15" fill="rgb(242,16,51)" fg:x="22" fg:w="1"/><text x="2.6439%" y="895.50"></text></g><g><title>core::mem::replace (1 samples, 0.11%)</title><rect x="2.3939%" y="869" width="0.1088%" height="15" fill="rgb(248,9,4)" fg:x="22" fg:w="1"/><text x="2.6439%" y="879.50"></text></g><g><title>core::ptr::read (1 samples, 0.11%)</title><rect x="2.3939%" y="853" width="0.1088%" height="15" fill="rgb(210,31,22)" fg:x="22" fg:w="1"/><text x="2.6439%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.11%)</title><rect x="2.3939%" y="837" width="0.1088%" height="15" fill="rgb(239,54,39)" fg:x="22" fg:w="1"/><text x="2.6439%" y="847.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="2.7203%" y="469" width="0.1088%" height="15" fill="rgb(230,99,41)" fg:x="25" fg:w="1"/><text x="2.9703%" y="479.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="2.7203%" y="453" width="0.1088%" height="15" fill="rgb(253,106,12)" fg:x="25" fg:w="1"/><text x="2.9703%" y="463.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="2.7203%" y="437" width="0.1088%" height="15" fill="rgb(213,46,41)" fg:x="25" fg:w="1"/><text x="2.9703%" y="447.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.11%)</title><rect x="2.7203%" y="421" width="0.1088%" height="15" fill="rgb(215,133,35)" fg:x="25" fg:w="1"/><text x="2.9703%" y="431.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="2.7203%" y="405" width="0.1088%" height="15" fill="rgb(213,28,5)" fg:x="25" fg:w="1"/><text x="2.9703%" y="415.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="2.7203%" y="389" width="0.1088%" height="15" fill="rgb(215,77,49)" fg:x="25" fg:w="1"/><text x="2.9703%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="3.0468%" y="309" width="0.1088%" height="15" fill="rgb(248,100,22)" fg:x="28" fg:w="1"/><text x="3.2968%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="3.0468%" y="293" width="0.1088%" height="15" fill="rgb(208,67,9)" fg:x="28" fg:w="1"/><text x="3.2968%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="3.0468%" y="277" width="0.1088%" height="15" fill="rgb(219,133,21)" fg:x="28" fg:w="1"/><text x="3.2968%" y="287.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="3.0468%" y="261" width="0.1088%" height="15" fill="rgb(246,46,29)" fg:x="28" fg:w="1"/><text x="3.2968%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="3.0468%" y="245" width="0.1088%" height="15" fill="rgb(246,185,52)" fg:x="28" fg:w="1"/><text x="3.2968%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.33%)</title><rect x="2.9380%" y="421" width="0.3264%" height="15" fill="rgb(252,136,11)" fg:x="27" fg:w="3"/><text x="3.1880%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.33%)</title><rect x="2.9380%" y="405" width="0.3264%" height="15" fill="rgb(219,138,53)" fg:x="27" fg:w="3"/><text x="3.1880%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.33%)</title><rect x="2.9380%" y="389" width="0.3264%" height="15" fill="rgb(211,51,23)" fg:x="27" fg:w="3"/><text x="3.1880%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.33%)</title><rect x="2.9380%" y="373" width="0.3264%" height="15" fill="rgb(247,221,28)" fg:x="27" fg:w="3"/><text x="3.1880%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.33%)</title><rect x="2.9380%" y="357" width="0.3264%" height="15" fill="rgb(251,222,45)" fg:x="27" fg:w="3"/><text x="3.1880%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (3 samples, 0.33%)</title><rect x="2.9380%" y="341" width="0.3264%" height="15" fill="rgb(217,162,53)" fg:x="27" fg:w="3"/><text x="3.1880%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.33%)</title><rect x="2.9380%" y="325" width="0.3264%" height="15" fill="rgb(229,93,14)" fg:x="27" fg:w="3"/><text x="3.1880%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="3.1556%" y="309" width="0.1088%" height="15" fill="rgb(209,67,49)" fg:x="29" fg:w="1"/><text x="3.4056%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.11%)</title><rect x="3.1556%" y="293" width="0.1088%" height="15" fill="rgb(213,87,29)" fg:x="29" fg:w="1"/><text x="3.4056%" y="303.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.11%)</title><rect x="3.1556%" y="277" width="0.1088%" height="15" fill="rgb(205,151,52)" fg:x="29" fg:w="1"/><text x="3.4056%" y="287.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (7 samples, 0.76%)</title><rect x="2.6115%" y="517" width="0.7617%" height="15" fill="rgb(253,215,39)" fg:x="24" fg:w="7"/><text x="2.8615%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.65%)</title><rect x="2.7203%" y="501" width="0.6529%" height="15" fill="rgb(221,220,41)" fg:x="25" fg:w="6"/><text x="2.9703%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.65%)</title><rect x="2.7203%" y="485" width="0.6529%" height="15" fill="rgb(218,133,21)" fg:x="25" fg:w="6"/><text x="2.9703%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.54%)</title><rect x="2.8292%" y="469" width="0.5441%" height="15" fill="rgb(221,193,43)" fg:x="26" fg:w="5"/><text x="3.0792%" y="479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.54%)</title><rect x="2.8292%" y="453" width="0.5441%" height="15" fill="rgb(240,128,52)" fg:x="26" fg:w="5"/><text x="3.0792%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (5 samples, 0.54%)</title><rect x="2.8292%" y="437" width="0.5441%" height="15" fill="rgb(253,114,12)" fg:x="26" fg:w="5"/><text x="3.0792%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="3.2644%" y="421" width="0.1088%" height="15" fill="rgb(215,223,47)" fg:x="30" fg:w="1"/><text x="3.5144%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="3.2644%" y="405" width="0.1088%" height="15" fill="rgb(248,225,23)" fg:x="30" fg:w="1"/><text x="3.5144%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="3.2644%" y="389" width="0.1088%" height="15" fill="rgb(250,108,0)" fg:x="30" fg:w="1"/><text x="3.5144%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="3.2644%" y="373" width="0.1088%" height="15" fill="rgb(228,208,7)" fg:x="30" fg:w="1"/><text x="3.5144%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="3.2644%" y="357" width="0.1088%" height="15" fill="rgb(244,45,10)" fg:x="30" fg:w="1"/><text x="3.5144%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="3.2644%" y="341" width="0.1088%" height="15" fill="rgb(207,125,25)" fg:x="30" fg:w="1"/><text x="3.5144%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="3.2644%" y="325" width="0.1088%" height="15" fill="rgb(210,195,18)" fg:x="30" fg:w="1"/><text x="3.5144%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="3.2644%" y="309" width="0.1088%" height="15" fill="rgb(249,80,12)" fg:x="30" fg:w="1"/><text x="3.5144%" y="319.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.11%)</title><rect x="3.2644%" y="293" width="0.1088%" height="15" fill="rgb(221,65,9)" fg:x="30" fg:w="1"/><text x="3.5144%" y="303.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (1 samples, 0.11%)</title><rect x="3.3732%" y="517" width="0.1088%" height="15" fill="rgb(235,49,36)" fg:x="31" fg:w="1"/><text x="3.6232%" y="527.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="3.3732%" y="501" width="0.1088%" height="15" fill="rgb(225,32,20)" fg:x="31" fg:w="1"/><text x="3.6232%" y="511.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="1045" width="1.3058%" height="15" fill="rgb(215,141,46)" fg:x="23" fg:w="12"/><text x="2.7527%" y="1055.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="1029" width="1.3058%" height="15" fill="rgb(250,160,47)" fg:x="23" fg:w="12"/><text x="2.7527%" y="1039.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="1013" width="1.3058%" height="15" fill="rgb(216,222,40)" fg:x="23" fg:w="12"/><text x="2.7527%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="997" width="1.3058%" height="15" fill="rgb(234,217,39)" fg:x="23" fg:w="12"/><text x="2.7527%" y="1007.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="981" width="1.3058%" height="15" fill="rgb(207,178,40)" fg:x="23" fg:w="12"/><text x="2.7527%" y="991.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="965" width="1.3058%" height="15" fill="rgb(221,136,13)" fg:x="23" fg:w="12"/><text x="2.7527%" y="975.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="949" width="1.3058%" height="15" fill="rgb(249,199,10)" fg:x="23" fg:w="12"/><text x="2.7527%" y="959.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="933" width="1.3058%" height="15" fill="rgb(249,222,13)" fg:x="23" fg:w="12"/><text x="2.7527%" y="943.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="917" width="1.3058%" height="15" fill="rgb(244,185,38)" fg:x="23" fg:w="12"/><text x="2.7527%" y="927.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="901" width="1.3058%" height="15" fill="rgb(236,202,9)" fg:x="23" fg:w="12"/><text x="2.7527%" y="911.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="885" width="1.3058%" height="15" fill="rgb(250,229,37)" fg:x="23" fg:w="12"/><text x="2.7527%" y="895.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (12 samples, 1.31%)</title><rect x="2.5027%" y="869" width="1.3058%" height="15" fill="rgb(206,174,23)" fg:x="23" fg:w="12"/><text x="2.7527%" y="879.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (12 samples, 1.31%)</title><rect x="2.5027%" y="853" width="1.3058%" height="15" fill="rgb(211,33,43)" fg:x="23" fg:w="12"/><text x="2.7527%" y="863.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (12 samples, 1.31%)</title><rect x="2.5027%" y="837" width="1.3058%" height="15" fill="rgb(245,58,50)" fg:x="23" fg:w="12"/><text x="2.7527%" y="847.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (12 samples, 1.31%)</title><rect x="2.5027%" y="821" width="1.3058%" height="15" fill="rgb(244,68,36)" fg:x="23" fg:w="12"/><text x="2.7527%" y="831.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="805" width="1.3058%" height="15" fill="rgb(232,229,15)" fg:x="23" fg:w="12"/><text x="2.7527%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="789" width="1.3058%" height="15" fill="rgb(254,30,23)" fg:x="23" fg:w="12"/><text x="2.7527%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="773" width="1.3058%" height="15" fill="rgb(235,160,14)" fg:x="23" fg:w="12"/><text x="2.7527%" y="783.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="757" width="1.3058%" height="15" fill="rgb(212,155,44)" fg:x="23" fg:w="12"/><text x="2.7527%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="741" width="1.3058%" height="15" fill="rgb(226,2,50)" fg:x="23" fg:w="12"/><text x="2.7527%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="725" width="1.3058%" height="15" fill="rgb(234,177,6)" fg:x="23" fg:w="12"/><text x="2.7527%" y="735.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="709" width="1.3058%" height="15" fill="rgb(217,24,9)" fg:x="23" fg:w="12"/><text x="2.7527%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="693" width="1.3058%" height="15" fill="rgb(220,13,46)" fg:x="23" fg:w="12"/><text x="2.7527%" y="703.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="677" width="1.3058%" height="15" fill="rgb(239,221,27)" fg:x="23" fg:w="12"/><text x="2.7527%" y="687.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="2.5027%" y="661" width="1.3058%" height="15" fill="rgb(222,198,25)" fg:x="23" fg:w="12"/><text x="2.7527%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="2.5027%" y="645" width="1.3058%" height="15" fill="rgb(211,99,13)" fg:x="23" fg:w="12"/><text x="2.7527%" y="655.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="2.5027%" y="629" width="1.3058%" height="15" fill="rgb(232,111,31)" fg:x="23" fg:w="12"/><text x="2.7527%" y="639.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (11 samples, 1.20%)</title><rect x="2.6115%" y="613" width="1.1970%" height="15" fill="rgb(245,82,37)" fg:x="24" fg:w="11"/><text x="2.8615%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (11 samples, 1.20%)</title><rect x="2.6115%" y="597" width="1.1970%" height="15" fill="rgb(227,149,46)" fg:x="24" fg:w="11"/><text x="2.8615%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (11 samples, 1.20%)</title><rect x="2.6115%" y="581" width="1.1970%" height="15" fill="rgb(218,36,50)" fg:x="24" fg:w="11"/><text x="2.8615%" y="591.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (11 samples, 1.20%)</title><rect x="2.6115%" y="565" width="1.1970%" height="15" fill="rgb(226,80,48)" fg:x="24" fg:w="11"/><text x="2.8615%" y="575.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (11 samples, 1.20%)</title><rect x="2.6115%" y="549" width="1.1970%" height="15" fill="rgb(238,224,15)" fg:x="24" fg:w="11"/><text x="2.8615%" y="559.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (11 samples, 1.20%)</title><rect x="2.6115%" y="533" width="1.1970%" height="15" fill="rgb(241,136,10)" fg:x="24" fg:w="11"/><text x="2.8615%" y="543.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (3 samples, 0.33%)</title><rect x="3.4820%" y="517" width="0.3264%" height="15" fill="rgb(208,32,45)" fg:x="32" fg:w="3"/><text x="3.7320%" y="527.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (2 samples, 0.22%)</title><rect x="3.5909%" y="501" width="0.2176%" height="15" fill="rgb(207,135,9)" fg:x="33" fg:w="2"/><text x="3.8409%" y="511.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="3.5909%" y="485" width="0.2176%" height="15" fill="rgb(206,86,44)" fg:x="33" fg:w="2"/><text x="3.8409%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="3.5909%" y="469" width="0.2176%" height="15" fill="rgb(245,177,15)" fg:x="33" fg:w="2"/><text x="3.8409%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.22%)</title><rect x="3.5909%" y="453" width="0.2176%" height="15" fill="rgb(206,64,50)" fg:x="33" fg:w="2"/><text x="3.8409%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.22%)</title><rect x="3.5909%" y="437" width="0.2176%" height="15" fill="rgb(234,36,40)" fg:x="33" fg:w="2"/><text x="3.8409%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="3.5909%" y="421" width="0.2176%" height="15" fill="rgb(213,64,8)" fg:x="33" fg:w="2"/><text x="3.8409%" y="431.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="3.5909%" y="405" width="0.2176%" height="15" fill="rgb(210,75,36)" fg:x="33" fg:w="2"/><text x="3.8409%" y="415.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="3.5909%" y="389" width="0.2176%" height="15" fill="rgb(229,88,21)" fg:x="33" fg:w="2"/><text x="3.8409%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="3.5909%" y="373" width="0.2176%" height="15" fill="rgb(252,204,47)" fg:x="33" fg:w="2"/><text x="3.8409%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="3.6997%" y="357" width="0.1088%" height="15" fill="rgb(208,77,27)" fg:x="34" fg:w="1"/><text x="3.9497%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="3.6997%" y="341" width="0.1088%" height="15" fill="rgb(221,76,26)" fg:x="34" fg:w="1"/><text x="3.9497%" y="351.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="3.6997%" y="325" width="0.1088%" height="15" fill="rgb(225,139,18)" fg:x="34" fg:w="1"/><text x="3.9497%" y="335.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.11%)</title><rect x="3.6997%" y="309" width="0.1088%" height="15" fill="rgb(230,137,11)" fg:x="34" fg:w="1"/><text x="3.9497%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="3.6997%" y="293" width="0.1088%" height="15" fill="rgb(212,28,1)" fg:x="34" fg:w="1"/><text x="3.9497%" y="303.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (2 samples, 0.22%)</title><rect x="3.8085%" y="453" width="0.2176%" height="15" fill="rgb(248,164,17)" fg:x="35" fg:w="2"/><text x="4.0585%" y="463.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (2 samples, 0.22%)</title><rect x="3.8085%" y="437" width="0.2176%" height="15" fill="rgb(222,171,42)" fg:x="35" fg:w="2"/><text x="4.0585%" y="447.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (2 samples, 0.22%)</title><rect x="3.8085%" y="421" width="0.2176%" height="15" fill="rgb(243,84,45)" fg:x="35" fg:w="2"/><text x="4.0585%" y="431.50"></text></g><g><title>&lt;chumsky::primitive::Filter&lt;F,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner_silent (2 samples, 0.22%)</title><rect x="3.8085%" y="405" width="0.2176%" height="15" fill="rgb(252,49,23)" fg:x="35" fg:w="2"/><text x="4.0585%" y="415.50"></text></g><g><title>&lt;chumsky::primitive::Filter&lt;F,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner (2 samples, 0.22%)</title><rect x="3.8085%" y="389" width="0.2176%" height="15" fill="rgb(215,19,7)" fg:x="35" fg:w="2"/><text x="4.0585%" y="399.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (2 samples, 0.22%)</title><rect x="3.8085%" y="373" width="0.2176%" height="15" fill="rgb(238,81,41)" fg:x="35" fg:w="2"/><text x="4.0585%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="3.8085%" y="357" width="0.2176%" height="15" fill="rgb(210,199,37)" fg:x="35" fg:w="2"/><text x="4.0585%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="3.8085%" y="341" width="0.2176%" height="15" fill="rgb(244,192,49)" fg:x="35" fg:w="2"/><text x="4.0585%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (2 samples, 0.22%)</title><rect x="3.8085%" y="325" width="0.2176%" height="15" fill="rgb(226,211,11)" fg:x="35" fg:w="2"/><text x="4.0585%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="4.0261%" y="325" width="0.1088%" height="15" fill="rgb(236,162,54)" fg:x="37" fg:w="1"/><text x="4.2761%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="4.0261%" y="309" width="0.1088%" height="15" fill="rgb(220,229,9)" fg:x="37" fg:w="1"/><text x="4.2761%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="4.0261%" y="293" width="0.1088%" height="15" fill="rgb(250,87,22)" fg:x="37" fg:w="1"/><text x="4.2761%" y="303.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="4.0261%" y="277" width="0.1088%" height="15" fill="rgb(239,43,17)" fg:x="37" fg:w="1"/><text x="4.2761%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="4.0261%" y="261" width="0.1088%" height="15" fill="rgb(231,177,25)" fg:x="37" fg:w="1"/><text x="4.2761%" y="271.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.11%)</title><rect x="4.0261%" y="245" width="0.1088%" height="15" fill="rgb(219,179,1)" fg:x="37" fg:w="1"/><text x="4.2761%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="4.0261%" y="229" width="0.1088%" height="15" fill="rgb(238,219,53)" fg:x="37" fg:w="1"/><text x="4.2761%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="4.0261%" y="213" width="0.1088%" height="15" fill="rgb(232,167,36)" fg:x="37" fg:w="1"/><text x="4.2761%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="4.0261%" y="197" width="0.1088%" height="15" fill="rgb(244,19,51)" fg:x="37" fg:w="1"/><text x="4.2761%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="4.0261%" y="181" width="0.1088%" height="15" fill="rgb(224,6,22)" fg:x="37" fg:w="1"/><text x="4.2761%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="4.0261%" y="165" width="0.1088%" height="15" fill="rgb(224,145,5)" fg:x="37" fg:w="1"/><text x="4.2761%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="4.0261%" y="149" width="0.1088%" height="15" fill="rgb(234,130,49)" fg:x="37" fg:w="1"/><text x="4.2761%" y="159.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (2 samples, 0.22%)</title><rect x="4.0261%" y="421" width="0.2176%" height="15" fill="rgb(254,6,2)" fg:x="37" fg:w="2"/><text x="4.2761%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="4.0261%" y="405" width="0.2176%" height="15" fill="rgb(208,96,46)" fg:x="37" fg:w="2"/><text x="4.2761%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="4.0261%" y="389" width="0.2176%" height="15" fill="rgb(239,3,39)" fg:x="37" fg:w="2"/><text x="4.2761%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="4.0261%" y="373" width="0.2176%" height="15" fill="rgb(233,210,1)" fg:x="37" fg:w="2"/><text x="4.2761%" y="383.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="4.0261%" y="357" width="0.2176%" height="15" fill="rgb(244,137,37)" fg:x="37" fg:w="2"/><text x="4.2761%" y="367.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="4.0261%" y="341" width="0.2176%" height="15" fill="rgb(240,136,2)" fg:x="37" fg:w="2"/><text x="4.2761%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="4.1349%" y="325" width="0.1088%" height="15" fill="rgb(239,18,37)" fg:x="38" fg:w="1"/><text x="4.3849%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="4.1349%" y="309" width="0.1088%" height="15" fill="rgb(218,185,22)" fg:x="38" fg:w="1"/><text x="4.3849%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="4.1349%" y="293" width="0.1088%" height="15" fill="rgb(225,218,4)" fg:x="38" fg:w="1"/><text x="4.3849%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="4.1349%" y="277" width="0.1088%" height="15" fill="rgb(230,182,32)" fg:x="38" fg:w="1"/><text x="4.3849%" y="287.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="3.8085%" y="549" width="0.6529%" height="15" fill="rgb(242,56,43)" fg:x="35" fg:w="6"/><text x="4.0585%" y="559.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="3.8085%" y="533" width="0.6529%" height="15" fill="rgb(233,99,24)" fg:x="35" fg:w="6"/><text x="4.0585%" y="543.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (6 samples, 0.65%)</title><rect x="3.8085%" y="517" width="0.6529%" height="15" fill="rgb(234,209,42)" fg:x="35" fg:w="6"/><text x="4.0585%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="3.8085%" y="501" width="0.6529%" height="15" fill="rgb(227,7,12)" fg:x="35" fg:w="6"/><text x="4.0585%" y="511.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="3.8085%" y="485" width="0.6529%" height="15" fill="rgb(245,203,43)" fg:x="35" fg:w="6"/><text x="4.0585%" y="495.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (6 samples, 0.65%)</title><rect x="3.8085%" y="469" width="0.6529%" height="15" fill="rgb(238,205,33)" fg:x="35" fg:w="6"/><text x="4.0585%" y="479.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="4.0261%" y="453" width="0.4353%" height="15" fill="rgb(231,56,7)" fg:x="37" fg:w="4"/><text x="4.2761%" y="463.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="4.0261%" y="437" width="0.4353%" height="15" fill="rgb(244,186,29)" fg:x="37" fg:w="4"/><text x="4.2761%" y="447.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (2 samples, 0.22%)</title><rect x="4.2437%" y="421" width="0.2176%" height="15" fill="rgb(234,111,31)" fg:x="39" fg:w="2"/><text x="4.4937%" y="431.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (2 samples, 0.22%)</title><rect x="4.2437%" y="405" width="0.2176%" height="15" fill="rgb(241,149,10)" fg:x="39" fg:w="2"/><text x="4.4937%" y="415.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="4.2437%" y="389" width="0.2176%" height="15" fill="rgb(249,206,44)" fg:x="39" fg:w="2"/><text x="4.4937%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="4.2437%" y="373" width="0.2176%" height="15" fill="rgb(251,153,30)" fg:x="39" fg:w="2"/><text x="4.4937%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.22%)</title><rect x="4.2437%" y="357" width="0.2176%" height="15" fill="rgb(239,152,38)" fg:x="39" fg:w="2"/><text x="4.4937%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.22%)</title><rect x="4.2437%" y="341" width="0.2176%" height="15" fill="rgb(249,139,47)" fg:x="39" fg:w="2"/><text x="4.4937%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="4.2437%" y="325" width="0.2176%" height="15" fill="rgb(244,64,35)" fg:x="39" fg:w="2"/><text x="4.4937%" y="335.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="4.2437%" y="309" width="0.2176%" height="15" fill="rgb(216,46,15)" fg:x="39" fg:w="2"/><text x="4.4937%" y="319.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="4.2437%" y="293" width="0.2176%" height="15" fill="rgb(250,74,19)" fg:x="39" fg:w="2"/><text x="4.4937%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="4.2437%" y="277" width="0.2176%" height="15" fill="rgb(249,42,33)" fg:x="39" fg:w="2"/><text x="4.4937%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="4.3526%" y="261" width="0.1088%" height="15" fill="rgb(242,149,17)" fg:x="40" fg:w="1"/><text x="4.6026%" y="271.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="933" width="0.9793%" height="15" fill="rgb(244,29,21)" fg:x="35" fg:w="9"/><text x="4.0585%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="917" width="0.9793%" height="15" fill="rgb(220,130,37)" fg:x="35" fg:w="9"/><text x="4.0585%" y="927.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="901" width="0.9793%" height="15" fill="rgb(211,67,2)" fg:x="35" fg:w="9"/><text x="4.0585%" y="911.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="885" width="0.9793%" height="15" fill="rgb(235,68,52)" fg:x="35" fg:w="9"/><text x="4.0585%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="869" width="0.9793%" height="15" fill="rgb(246,142,3)" fg:x="35" fg:w="9"/><text x="4.0585%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="853" width="0.9793%" height="15" fill="rgb(241,25,7)" fg:x="35" fg:w="9"/><text x="4.0585%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="837" width="0.9793%" height="15" fill="rgb(242,119,39)" fg:x="35" fg:w="9"/><text x="4.0585%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="821" width="0.9793%" height="15" fill="rgb(241,98,45)" fg:x="35" fg:w="9"/><text x="4.0585%" y="831.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="805" width="0.9793%" height="15" fill="rgb(254,28,30)" fg:x="35" fg:w="9"/><text x="4.0585%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="789" width="0.9793%" height="15" fill="rgb(241,142,54)" fg:x="35" fg:w="9"/><text x="4.0585%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="773" width="0.9793%" height="15" fill="rgb(222,85,15)" fg:x="35" fg:w="9"/><text x="4.0585%" y="783.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="757" width="0.9793%" height="15" fill="rgb(210,85,47)" fg:x="35" fg:w="9"/><text x="4.0585%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="741" width="0.9793%" height="15" fill="rgb(224,206,25)" fg:x="35" fg:w="9"/><text x="4.0585%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="725" width="0.9793%" height="15" fill="rgb(243,201,19)" fg:x="35" fg:w="9"/><text x="4.0585%" y="735.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="709" width="0.9793%" height="15" fill="rgb(236,59,4)" fg:x="35" fg:w="9"/><text x="4.0585%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="693" width="0.9793%" height="15" fill="rgb(254,179,45)" fg:x="35" fg:w="9"/><text x="4.0585%" y="703.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="677" width="0.9793%" height="15" fill="rgb(226,14,10)" fg:x="35" fg:w="9"/><text x="4.0585%" y="687.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="661" width="0.9793%" height="15" fill="rgb(244,27,41)" fg:x="35" fg:w="9"/><text x="4.0585%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="645" width="0.9793%" height="15" fill="rgb(235,35,32)" fg:x="35" fg:w="9"/><text x="4.0585%" y="655.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="629" width="0.9793%" height="15" fill="rgb(218,68,31)" fg:x="35" fg:w="9"/><text x="4.0585%" y="639.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="613" width="0.9793%" height="15" fill="rgb(207,120,37)" fg:x="35" fg:w="9"/><text x="4.0585%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="3.8085%" y="597" width="0.9793%" height="15" fill="rgb(227,98,0)" fg:x="35" fg:w="9"/><text x="4.0585%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="3.8085%" y="581" width="0.9793%" height="15" fill="rgb(207,7,3)" fg:x="35" fg:w="9"/><text x="4.0585%" y="591.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (9 samples, 0.98%)</title><rect x="3.8085%" y="565" width="0.9793%" height="15" fill="rgb(206,98,19)" fg:x="35" fg:w="9"/><text x="4.0585%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="4.4614%" y="549" width="0.3264%" height="15" fill="rgb(217,5,26)" fg:x="41" fg:w="3"/><text x="4.7114%" y="559.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="4.4614%" y="533" width="0.3264%" height="15" fill="rgb(235,190,38)" fg:x="41" fg:w="3"/><text x="4.7114%" y="543.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (3 samples, 0.33%)</title><rect x="4.4614%" y="517" width="0.3264%" height="15" fill="rgb(247,86,24)" fg:x="41" fg:w="3"/><text x="4.7114%" y="527.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (3 samples, 0.33%)</title><rect x="4.4614%" y="501" width="0.3264%" height="15" fill="rgb(205,101,16)" fg:x="41" fg:w="3"/><text x="4.7114%" y="511.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (3 samples, 0.33%)</title><rect x="4.4614%" y="485" width="0.3264%" height="15" fill="rgb(246,168,33)" fg:x="41" fg:w="3"/><text x="4.7114%" y="495.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (3 samples, 0.33%)</title><rect x="4.4614%" y="469" width="0.3264%" height="15" fill="rgb(231,114,1)" fg:x="41" fg:w="3"/><text x="4.7114%" y="479.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="4.4614%" y="453" width="0.3264%" height="15" fill="rgb(207,184,53)" fg:x="41" fg:w="3"/><text x="4.7114%" y="463.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="4.4614%" y="437" width="0.3264%" height="15" fill="rgb(224,95,51)" fg:x="41" fg:w="3"/><text x="4.7114%" y="447.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="4.4614%" y="421" width="0.3264%" height="15" fill="rgb(212,188,45)" fg:x="41" fg:w="3"/><text x="4.7114%" y="431.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (3 samples, 0.33%)</title><rect x="4.4614%" y="405" width="0.3264%" height="15" fill="rgb(223,154,38)" fg:x="41" fg:w="3"/><text x="4.7114%" y="415.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (2 samples, 0.22%)</title><rect x="4.5702%" y="389" width="0.2176%" height="15" fill="rgb(251,22,52)" fg:x="42" fg:w="2"/><text x="4.8202%" y="399.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="4.5702%" y="373" width="0.2176%" height="15" fill="rgb(229,209,22)" fg:x="42" fg:w="2"/><text x="4.8202%" y="383.50"></text></g><g><title>&lt;&amp;str as chumsky::primitive::Container&lt;char&gt;&gt;::get_iter (1 samples, 0.11%)</title><rect x="5.2231%" y="405" width="0.1088%" height="15" fill="rgb(234,138,34)" fg:x="48" fg:w="1"/><text x="5.4731%" y="415.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.11%)</title><rect x="5.2231%" y="389" width="0.1088%" height="15" fill="rgb(212,95,11)" fg:x="48" fg:w="1"/><text x="5.4731%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.11%)</title><rect x="5.2231%" y="373" width="0.1088%" height="15" fill="rgb(240,179,47)" fg:x="48" fg:w="1"/><text x="5.4731%" y="383.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="5.2231%" y="357" width="0.1088%" height="15" fill="rgb(240,163,11)" fg:x="48" fg:w="1"/><text x="5.4731%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.11%)</title><rect x="5.2231%" y="341" width="0.1088%" height="15" fill="rgb(236,37,12)" fg:x="48" fg:w="1"/><text x="5.4731%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.11%)</title><rect x="5.2231%" y="325" width="0.1088%" height="15" fill="rgb(232,164,16)" fg:x="48" fg:w="1"/><text x="5.4731%" y="335.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (3 samples, 0.33%)</title><rect x="5.4407%" y="325" width="0.3264%" height="15" fill="rgb(244,205,15)" fg:x="50" fg:w="3"/><text x="5.6907%" y="335.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::get_fixed_seeds (1 samples, 0.11%)</title><rect x="5.7671%" y="325" width="0.1088%" height="15" fill="rgb(223,117,47)" fg:x="53" fg:w="1"/><text x="6.0171%" y="335.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (2 samples, 0.22%)</title><rect x="5.8760%" y="325" width="0.2176%" height="15" fill="rgb(244,107,35)" fg:x="54" fg:w="2"/><text x="6.1260%" y="335.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (2 samples, 0.22%)</title><rect x="5.8760%" y="309" width="0.2176%" height="15" fill="rgb(205,140,8)" fg:x="54" fg:w="2"/><text x="6.1260%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.22%)</title><rect x="5.8760%" y="293" width="0.2176%" height="15" fill="rgb(228,84,46)" fg:x="54" fg:w="2"/><text x="6.1260%" y="303.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.22%)</title><rect x="5.8760%" y="277" width="0.2176%" height="15" fill="rgb(254,188,9)" fg:x="54" fg:w="2"/><text x="6.1260%" y="287.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.22%)</title><rect x="5.8760%" y="261" width="0.2176%" height="15" fill="rgb(206,112,54)" fg:x="54" fg:w="2"/><text x="6.1260%" y="271.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.11%)</title><rect x="5.9848%" y="245" width="0.1088%" height="15" fill="rgb(216,84,49)" fg:x="55" fg:w="1"/><text x="6.2348%" y="255.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.11%)</title><rect x="6.0936%" y="325" width="0.1088%" height="15" fill="rgb(214,194,35)" fg:x="56" fg:w="1"/><text x="6.3436%" y="335.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="6.0936%" y="309" width="0.1088%" height="15" fill="rgb(249,28,3)" fg:x="56" fg:w="1"/><text x="6.3436%" y="319.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (8 samples, 0.87%)</title><rect x="5.4407%" y="357" width="0.8705%" height="15" fill="rgb(222,56,52)" fg:x="50" fg:w="8"/><text x="5.6907%" y="367.50"></text></g><g><title>ahash::random_state::RandomState::new (8 samples, 0.87%)</title><rect x="5.4407%" y="341" width="0.8705%" height="15" fill="rgb(245,217,50)" fg:x="50" fg:w="8"/><text x="5.6907%" y="351.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="6.2024%" y="325" width="0.1088%" height="15" fill="rgb(213,201,24)" fg:x="57" fg:w="1"/><text x="6.4524%" y="335.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="6.4200%" y="149" width="0.1088%" height="15" fill="rgb(248,116,28)" fg:x="59" fg:w="1"/><text x="6.6700%" y="159.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.22%)</title><rect x="6.4200%" y="165" width="0.2176%" height="15" fill="rgb(219,72,43)" fg:x="59" fg:w="2"/><text x="6.6700%" y="175.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="6.5288%" y="149" width="0.1088%" height="15" fill="rgb(209,138,14)" fg:x="60" fg:w="1"/><text x="6.7788%" y="159.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.33%)</title><rect x="6.4200%" y="197" width="0.3264%" height="15" fill="rgb(222,18,33)" fg:x="59" fg:w="3"/><text x="6.6700%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.33%)</title><rect x="6.4200%" y="181" width="0.3264%" height="15" fill="rgb(213,199,7)" fg:x="59" fg:w="3"/><text x="6.6700%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="6.6376%" y="165" width="0.1088%" height="15" fill="rgb(250,110,10)" fg:x="61" fg:w="1"/><text x="6.8876%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="6.6376%" y="149" width="0.1088%" height="15" fill="rgb(248,123,6)" fg:x="61" fg:w="1"/><text x="6.8876%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.11%)</title><rect x="6.6376%" y="133" width="0.1088%" height="15" fill="rgb(206,91,31)" fg:x="61" fg:w="1"/><text x="6.8876%" y="143.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.11%)</title><rect x="6.6376%" y="117" width="0.1088%" height="15" fill="rgb(211,154,13)" fg:x="61" fg:w="1"/><text x="6.8876%" y="127.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.11%)</title><rect x="6.6376%" y="101" width="0.1088%" height="15" fill="rgb(225,148,7)" fg:x="61" fg:w="1"/><text x="6.8876%" y="111.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="6.6376%" y="85" width="0.1088%" height="15" fill="rgb(220,160,43)" fg:x="61" fg:w="1"/><text x="6.8876%" y="95.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="6.6376%" y="69" width="0.1088%" height="15" fill="rgb(213,52,39)" fg:x="61" fg:w="1"/><text x="6.8876%" y="79.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="6.6376%" y="53" width="0.1088%" height="15" fill="rgb(243,137,7)" fg:x="61" fg:w="1"/><text x="6.8876%" y="63.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.11%)</title><rect x="6.6376%" y="37" width="0.1088%" height="15" fill="rgb(230,79,13)" fg:x="61" fg:w="1"/><text x="6.8876%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.54%)</title><rect x="6.3112%" y="309" width="0.5441%" height="15" fill="rgb(247,105,23)" fg:x="58" fg:w="5"/><text x="6.5612%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.54%)</title><rect x="6.3112%" y="293" width="0.5441%" height="15" fill="rgb(223,179,41)" fg:x="58" fg:w="5"/><text x="6.5612%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.54%)</title><rect x="6.3112%" y="277" width="0.5441%" height="15" fill="rgb(218,9,34)" fg:x="58" fg:w="5"/><text x="6.5612%" y="287.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.54%)</title><rect x="6.3112%" y="261" width="0.5441%" height="15" fill="rgb(222,106,8)" fg:x="58" fg:w="5"/><text x="6.5612%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.54%)</title><rect x="6.3112%" y="245" width="0.5441%" height="15" fill="rgb(211,220,0)" fg:x="58" fg:w="5"/><text x="6.5612%" y="255.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5 samples, 0.54%)</title><rect x="6.3112%" y="229" width="0.5441%" height="15" fill="rgb(229,52,16)" fg:x="58" fg:w="5"/><text x="6.5612%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.54%)</title><rect x="6.3112%" y="213" width="0.5441%" height="15" fill="rgb(212,155,18)" fg:x="58" fg:w="5"/><text x="6.5612%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="6.7465%" y="197" width="0.1088%" height="15" fill="rgb(242,21,14)" fg:x="62" fg:w="1"/><text x="6.9965%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="6.7465%" y="181" width="0.1088%" height="15" fill="rgb(222,19,48)" fg:x="62" fg:w="1"/><text x="6.9965%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="6.7465%" y="165" width="0.1088%" height="15" fill="rgb(232,45,27)" fg:x="62" fg:w="1"/><text x="6.9965%" y="175.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="6.7465%" y="149" width="0.1088%" height="15" fill="rgb(249,103,42)" fg:x="62" fg:w="1"/><text x="6.9965%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="6.7465%" y="133" width="0.1088%" height="15" fill="rgb(246,81,33)" fg:x="62" fg:w="1"/><text x="6.9965%" y="143.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="6.8553%" y="197" width="0.1088%" height="15" fill="rgb(252,33,42)" fg:x="63" fg:w="1"/><text x="7.1053%" y="207.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="6.8553%" y="181" width="0.1088%" height="15" fill="rgb(209,212,41)" fg:x="63" fg:w="1"/><text x="7.1053%" y="191.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="6.8553%" y="165" width="0.1088%" height="15" fill="rgb(207,154,6)" fg:x="63" fg:w="1"/><text x="7.1053%" y="175.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.76%)</title><rect x="6.3112%" y="357" width="0.7617%" height="15" fill="rgb(223,64,47)" fg:x="58" fg:w="7"/><text x="6.5612%" y="367.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (7 samples, 0.76%)</title><rect x="6.3112%" y="341" width="0.7617%" height="15" fill="rgb(211,161,38)" fg:x="58" fg:w="7"/><text x="6.5612%" y="351.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (7 samples, 0.76%)</title><rect x="6.3112%" y="325" width="0.7617%" height="15" fill="rgb(219,138,40)" fg:x="58" fg:w="7"/><text x="6.5612%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.22%)</title><rect x="6.8553%" y="309" width="0.2176%" height="15" fill="rgb(241,228,46)" fg:x="63" fg:w="2"/><text x="7.1053%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="6.8553%" y="293" width="0.2176%" height="15" fill="rgb(223,209,38)" fg:x="63" fg:w="2"/><text x="7.1053%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.22%)</title><rect x="6.8553%" y="277" width="0.2176%" height="15" fill="rgb(236,164,45)" fg:x="63" fg:w="2"/><text x="7.1053%" y="287.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.22%)</title><rect x="6.8553%" y="261" width="0.2176%" height="15" fill="rgb(231,15,5)" fg:x="63" fg:w="2"/><text x="7.1053%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.22%)</title><rect x="6.8553%" y="245" width="0.2176%" height="15" fill="rgb(252,35,15)" fg:x="63" fg:w="2"/><text x="7.1053%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.22%)</title><rect x="6.8553%" y="229" width="0.2176%" height="15" fill="rgb(248,181,18)" fg:x="63" fg:w="2"/><text x="7.1053%" y="239.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.22%)</title><rect x="6.8553%" y="213" width="0.2176%" height="15" fill="rgb(233,39,42)" fg:x="63" fg:w="2"/><text x="7.1053%" y="223.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="6.9641%" y="197" width="0.1088%" height="15" fill="rgb(238,110,33)" fg:x="64" fg:w="1"/><text x="7.2141%" y="207.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.11%)</title><rect x="6.9641%" y="181" width="0.1088%" height="15" fill="rgb(233,195,10)" fg:x="64" fg:w="1"/><text x="7.2141%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="6.9641%" y="165" width="0.1088%" height="15" fill="rgb(254,105,3)" fg:x="64" fg:w="1"/><text x="7.2141%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="6.9641%" y="149" width="0.1088%" height="15" fill="rgb(221,225,9)" fg:x="64" fg:w="1"/><text x="7.2141%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="6.9641%" y="133" width="0.1088%" height="15" fill="rgb(224,227,45)" fg:x="64" fg:w="1"/><text x="7.2141%" y="143.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="6.9641%" y="117" width="0.1088%" height="15" fill="rgb(229,198,43)" fg:x="64" fg:w="1"/><text x="7.2141%" y="127.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (18 samples, 1.96%)</title><rect x="5.3319%" y="405" width="1.9587%" height="15" fill="rgb(206,209,35)" fg:x="49" fg:w="18"/><text x="5.5819%" y="415.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 1.85%)</title><rect x="5.4407%" y="389" width="1.8498%" height="15" fill="rgb(245,195,53)" fg:x="50" fg:w="17"/><text x="5.6907%" y="399.50">c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 1.85%)</title><rect x="5.4407%" y="373" width="1.8498%" height="15" fill="rgb(240,92,26)" fg:x="50" fg:w="17"/><text x="5.6907%" y="383.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (2 samples, 0.22%)</title><rect x="7.0729%" y="357" width="0.2176%" height="15" fill="rgb(207,40,23)" fg:x="65" fg:w="2"/><text x="7.3229%" y="367.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (30 samples, 3.26%)</title><rect x="4.7878%" y="885" width="3.2644%" height="15" fill="rgb(223,111,35)" fg:x="44" fg:w="30"/><text x="5.0378%" y="895.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (30 samples, 3.26%)</title><rect x="4.7878%" y="869" width="3.2644%" height="15" fill="rgb(229,147,28)" fg:x="44" fg:w="30"/><text x="5.0378%" y="879.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (30 samples, 3.26%)</title><rect x="4.7878%" y="853" width="3.2644%" height="15" fill="rgb(211,29,28)" fg:x="44" fg:w="30"/><text x="5.0378%" y="863.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (30 samples, 3.26%)</title><rect x="4.7878%" y="837" width="3.2644%" height="15" fill="rgb(228,72,33)" fg:x="44" fg:w="30"/><text x="5.0378%" y="847.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (30 samples, 3.26%)</title><rect x="4.7878%" y="821" width="3.2644%" height="15" fill="rgb(205,214,31)" fg:x="44" fg:w="30"/><text x="5.0378%" y="831.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (30 samples, 3.26%)</title><rect x="4.7878%" y="805" width="3.2644%" height="15" fill="rgb(224,111,15)" fg:x="44" fg:w="30"/><text x="5.0378%" y="815.50">&lt;ch..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (30 samples, 3.26%)</title><rect x="4.7878%" y="789" width="3.2644%" height="15" fill="rgb(253,21,26)" fg:x="44" fg:w="30"/><text x="5.0378%" y="799.50">&lt;ch..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (30 samples, 3.26%)</title><rect x="4.7878%" y="773" width="3.2644%" height="15" fill="rgb(245,139,43)" fg:x="44" fg:w="30"/><text x="5.0378%" y="783.50">&lt;ch..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (30 samples, 3.26%)</title><rect x="4.7878%" y="757" width="3.2644%" height="15" fill="rgb(252,170,7)" fg:x="44" fg:w="30"/><text x="5.0378%" y="767.50">chu..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (30 samples, 3.26%)</title><rect x="4.7878%" y="741" width="3.2644%" height="15" fill="rgb(231,118,14)" fg:x="44" fg:w="30"/><text x="5.0378%" y="751.50">chu..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (30 samples, 3.26%)</title><rect x="4.7878%" y="725" width="3.2644%" height="15" fill="rgb(238,83,0)" fg:x="44" fg:w="30"/><text x="5.0378%" y="735.50">chu..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (30 samples, 3.26%)</title><rect x="4.7878%" y="709" width="3.2644%" height="15" fill="rgb(221,39,39)" fg:x="44" fg:w="30"/><text x="5.0378%" y="719.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (30 samples, 3.26%)</title><rect x="4.7878%" y="693" width="3.2644%" height="15" fill="rgb(222,119,46)" fg:x="44" fg:w="30"/><text x="5.0378%" y="703.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (30 samples, 3.26%)</title><rect x="4.7878%" y="677" width="3.2644%" height="15" fill="rgb(222,165,49)" fg:x="44" fg:w="30"/><text x="5.0378%" y="687.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (30 samples, 3.26%)</title><rect x="4.7878%" y="661" width="3.2644%" height="15" fill="rgb(219,113,52)" fg:x="44" fg:w="30"/><text x="5.0378%" y="671.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (30 samples, 3.26%)</title><rect x="4.7878%" y="645" width="3.2644%" height="15" fill="rgb(214,7,15)" fg:x="44" fg:w="30"/><text x="5.0378%" y="655.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (30 samples, 3.26%)</title><rect x="4.7878%" y="629" width="3.2644%" height="15" fill="rgb(235,32,4)" fg:x="44" fg:w="30"/><text x="5.0378%" y="639.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (30 samples, 3.26%)</title><rect x="4.7878%" y="613" width="3.2644%" height="15" fill="rgb(238,90,54)" fg:x="44" fg:w="30"/><text x="5.0378%" y="623.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (28 samples, 3.05%)</title><rect x="5.0054%" y="597" width="3.0468%" height="15" fill="rgb(213,208,19)" fg:x="46" fg:w="28"/><text x="5.2554%" y="607.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (28 samples, 3.05%)</title><rect x="5.0054%" y="581" width="3.0468%" height="15" fill="rgb(233,156,4)" fg:x="46" fg:w="28"/><text x="5.2554%" y="591.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (28 samples, 3.05%)</title><rect x="5.0054%" y="565" width="3.0468%" height="15" fill="rgb(207,194,5)" fg:x="46" fg:w="28"/><text x="5.2554%" y="575.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (28 samples, 3.05%)</title><rect x="5.0054%" y="549" width="3.0468%" height="15" fill="rgb(206,111,30)" fg:x="46" fg:w="28"/><text x="5.2554%" y="559.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (28 samples, 3.05%)</title><rect x="5.0054%" y="533" width="3.0468%" height="15" fill="rgb(243,70,54)" fg:x="46" fg:w="28"/><text x="5.2554%" y="543.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (28 samples, 3.05%)</title><rect x="5.0054%" y="517" width="3.0468%" height="15" fill="rgb(242,28,8)" fg:x="46" fg:w="28"/><text x="5.2554%" y="527.50">&lt;ch..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (27 samples, 2.94%)</title><rect x="5.1143%" y="501" width="2.9380%" height="15" fill="rgb(219,106,18)" fg:x="47" fg:w="27"/><text x="5.3643%" y="511.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (27 samples, 2.94%)</title><rect x="5.1143%" y="485" width="2.9380%" height="15" fill="rgb(244,222,10)" fg:x="47" fg:w="27"/><text x="5.3643%" y="495.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (27 samples, 2.94%)</title><rect x="5.1143%" y="469" width="2.9380%" height="15" fill="rgb(236,179,52)" fg:x="47" fg:w="27"/><text x="5.3643%" y="479.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (27 samples, 2.94%)</title><rect x="5.1143%" y="453" width="2.9380%" height="15" fill="rgb(213,23,39)" fg:x="47" fg:w="27"/><text x="5.3643%" y="463.50">&lt;c..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (27 samples, 2.94%)</title><rect x="5.1143%" y="437" width="2.9380%" height="15" fill="rgb(238,48,10)" fg:x="47" fg:w="27"/><text x="5.3643%" y="447.50">&lt;c..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (27 samples, 2.94%)</title><rect x="5.1143%" y="421" width="2.9380%" height="15" fill="rgb(251,196,23)" fg:x="47" fg:w="27"/><text x="5.3643%" y="431.50">&lt;c..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (7 samples, 0.76%)</title><rect x="7.2905%" y="405" width="0.7617%" height="15" fill="rgb(250,152,24)" fg:x="67" fg:w="7"/><text x="7.5405%" y="415.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.76%)</title><rect x="7.2905%" y="389" width="0.7617%" height="15" fill="rgb(209,150,17)" fg:x="67" fg:w="7"/><text x="7.5405%" y="399.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="8.1610%" y="645" width="0.1088%" height="15" fill="rgb(234,202,34)" fg:x="75" fg:w="1"/><text x="8.4110%" y="655.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="8.1610%" y="629" width="0.1088%" height="15" fill="rgb(253,148,53)" fg:x="75" fg:w="1"/><text x="8.4110%" y="639.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="8.1610%" y="613" width="0.1088%" height="15" fill="rgb(218,129,16)" fg:x="75" fg:w="1"/><text x="8.4110%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="8.1610%" y="597" width="0.1088%" height="15" fill="rgb(216,85,19)" fg:x="75" fg:w="1"/><text x="8.4110%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="8.1610%" y="581" width="0.1088%" height="15" fill="rgb(235,228,7)" fg:x="75" fg:w="1"/><text x="8.4110%" y="591.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="8.1610%" y="565" width="0.1088%" height="15" fill="rgb(245,175,0)" fg:x="75" fg:w="1"/><text x="8.4110%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="8.1610%" y="549" width="0.1088%" height="15" fill="rgb(208,168,36)" fg:x="75" fg:w="1"/><text x="8.4110%" y="559.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="8.1610%" y="533" width="0.1088%" height="15" fill="rgb(246,171,24)" fg:x="75" fg:w="1"/><text x="8.4110%" y="543.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="8.1610%" y="517" width="0.1088%" height="15" fill="rgb(215,142,24)" fg:x="75" fg:w="1"/><text x="8.4110%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="8.1610%" y="501" width="0.1088%" height="15" fill="rgb(250,187,7)" fg:x="75" fg:w="1"/><text x="8.4110%" y="511.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="8.1610%" y="485" width="0.1088%" height="15" fill="rgb(228,66,33)" fg:x="75" fg:w="1"/><text x="8.4110%" y="495.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="8.1610%" y="469" width="0.1088%" height="15" fill="rgb(234,215,21)" fg:x="75" fg:w="1"/><text x="8.4110%" y="479.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="8.1610%" y="453" width="0.1088%" height="15" fill="rgb(222,191,20)" fg:x="75" fg:w="1"/><text x="8.4110%" y="463.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="8.1610%" y="437" width="0.1088%" height="15" fill="rgb(245,79,54)" fg:x="75" fg:w="1"/><text x="8.4110%" y="447.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (1 samples, 0.11%)</title><rect x="8.1610%" y="421" width="0.1088%" height="15" fill="rgb(240,10,37)" fg:x="75" fg:w="1"/><text x="8.4110%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="8.1610%" y="405" width="0.1088%" height="15" fill="rgb(214,192,32)" fg:x="75" fg:w="1"/><text x="8.4110%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="8.1610%" y="389" width="0.1088%" height="15" fill="rgb(209,36,54)" fg:x="75" fg:w="1"/><text x="8.4110%" y="399.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="8.1610%" y="373" width="0.1088%" height="15" fill="rgb(220,10,11)" fg:x="75" fg:w="1"/><text x="8.4110%" y="383.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="8.1610%" y="357" width="0.1088%" height="15" fill="rgb(221,106,17)" fg:x="75" fg:w="1"/><text x="8.4110%" y="367.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.11%)</title><rect x="8.1610%" y="341" width="0.1088%" height="15" fill="rgb(251,142,44)" fg:x="75" fg:w="1"/><text x="8.4110%" y="351.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="8.1610%" y="325" width="0.1088%" height="15" fill="rgb(238,13,15)" fg:x="75" fg:w="1"/><text x="8.4110%" y="335.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.11%)</title><rect x="8.5963%" y="533" width="0.1088%" height="15" fill="rgb(208,107,27)" fg:x="79" fg:w="1"/><text x="8.8463%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="8.7051%" y="501" width="0.1088%" height="15" fill="rgb(205,136,37)" fg:x="80" fg:w="1"/><text x="8.9551%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="8.7051%" y="485" width="0.1088%" height="15" fill="rgb(250,205,27)" fg:x="80" fg:w="1"/><text x="8.9551%" y="495.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (3 samples, 0.33%)</title><rect x="8.5963%" y="565" width="0.3264%" height="15" fill="rgb(210,80,43)" fg:x="79" fg:w="3"/><text x="8.8463%" y="575.50"></text></g><g><title>ahash::random_state::RandomState::new (3 samples, 0.33%)</title><rect x="8.5963%" y="549" width="0.3264%" height="15" fill="rgb(247,160,36)" fg:x="79" fg:w="3"/><text x="8.8463%" y="559.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (2 samples, 0.22%)</title><rect x="8.7051%" y="533" width="0.2176%" height="15" fill="rgb(234,13,49)" fg:x="80" fg:w="2"/><text x="8.9551%" y="543.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (2 samples, 0.22%)</title><rect x="8.7051%" y="517" width="0.2176%" height="15" fill="rgb(234,122,0)" fg:x="80" fg:w="2"/><text x="8.9551%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="8.8139%" y="501" width="0.1088%" height="15" fill="rgb(207,146,38)" fg:x="81" fg:w="1"/><text x="9.0639%" y="511.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="8.8139%" y="485" width="0.1088%" height="15" fill="rgb(207,177,25)" fg:x="81" fg:w="1"/><text x="9.0639%" y="495.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="8.8139%" y="469" width="0.1088%" height="15" fill="rgb(211,178,42)" fg:x="81" fg:w="1"/><text x="9.0639%" y="479.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (7 samples, 0.76%)</title><rect x="8.2699%" y="613" width="0.7617%" height="15" fill="rgb(230,69,54)" fg:x="76" fg:w="7"/><text x="8.5199%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.44%)</title><rect x="8.5963%" y="597" width="0.4353%" height="15" fill="rgb(214,135,41)" fg:x="79" fg:w="4"/><text x="8.8463%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.44%)</title><rect x="8.5963%" y="581" width="0.4353%" height="15" fill="rgb(237,67,25)" fg:x="79" fg:w="4"/><text x="8.8463%" y="591.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="8.9227%" y="565" width="0.1088%" height="15" fill="rgb(222,189,50)" fg:x="82" fg:w="1"/><text x="9.1727%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="8.9227%" y="549" width="0.1088%" height="15" fill="rgb(245,148,34)" fg:x="82" fg:w="1"/><text x="9.1727%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="8.9227%" y="533" width="0.1088%" height="15" fill="rgb(222,29,6)" fg:x="82" fg:w="1"/><text x="9.1727%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="8.9227%" y="517" width="0.1088%" height="15" fill="rgb(221,189,43)" fg:x="82" fg:w="1"/><text x="9.1727%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="8.9227%" y="501" width="0.1088%" height="15" fill="rgb(207,36,27)" fg:x="82" fg:w="1"/><text x="9.1727%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="8.9227%" y="485" width="0.1088%" height="15" fill="rgb(217,90,24)" fg:x="82" fg:w="1"/><text x="9.1727%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="8.9227%" y="469" width="0.1088%" height="15" fill="rgb(224,66,35)" fg:x="82" fg:w="1"/><text x="9.1727%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="8.9227%" y="453" width="0.1088%" height="15" fill="rgb(221,13,50)" fg:x="82" fg:w="1"/><text x="9.1727%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.11%)</title><rect x="8.9227%" y="437" width="0.1088%" height="15" fill="rgb(236,68,49)" fg:x="82" fg:w="1"/><text x="9.1727%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="8.9227%" y="421" width="0.1088%" height="15" fill="rgb(229,146,28)" fg:x="82" fg:w="1"/><text x="9.1727%" y="431.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.11%)</title><rect x="8.9227%" y="405" width="0.1088%" height="15" fill="rgb(225,31,38)" fg:x="82" fg:w="1"/><text x="9.1727%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="8.9227%" y="389" width="0.1088%" height="15" fill="rgb(250,208,3)" fg:x="82" fg:w="1"/><text x="9.1727%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="8.9227%" y="373" width="0.1088%" height="15" fill="rgb(246,54,23)" fg:x="82" fg:w="1"/><text x="9.1727%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="8.9227%" y="357" width="0.1088%" height="15" fill="rgb(243,76,11)" fg:x="82" fg:w="1"/><text x="9.1727%" y="367.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (4 samples, 0.44%)</title><rect x="9.0316%" y="613" width="0.4353%" height="15" fill="rgb(245,21,50)" fg:x="83" fg:w="4"/><text x="9.2816%" y="623.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="9.0316%" y="597" width="0.4353%" height="15" fill="rgb(228,9,43)" fg:x="83" fg:w="4"/><text x="9.2816%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (14 samples, 1.52%)</title><rect x="8.0522%" y="885" width="1.5234%" height="15" fill="rgb(208,100,47)" fg:x="74" fg:w="14"/><text x="8.3022%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (14 samples, 1.52%)</title><rect x="8.0522%" y="869" width="1.5234%" height="15" fill="rgb(232,26,8)" fg:x="74" fg:w="14"/><text x="8.3022%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (14 samples, 1.52%)</title><rect x="8.0522%" y="853" width="1.5234%" height="15" fill="rgb(216,166,38)" fg:x="74" fg:w="14"/><text x="8.3022%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (14 samples, 1.52%)</title><rect x="8.0522%" y="837" width="1.5234%" height="15" fill="rgb(251,202,51)" fg:x="74" fg:w="14"/><text x="8.3022%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (14 samples, 1.52%)</title><rect x="8.0522%" y="821" width="1.5234%" height="15" fill="rgb(254,216,34)" fg:x="74" fg:w="14"/><text x="8.3022%" y="831.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (14 samples, 1.52%)</title><rect x="8.0522%" y="805" width="1.5234%" height="15" fill="rgb(251,32,27)" fg:x="74" fg:w="14"/><text x="8.3022%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (14 samples, 1.52%)</title><rect x="8.0522%" y="789" width="1.5234%" height="15" fill="rgb(208,127,28)" fg:x="74" fg:w="14"/><text x="8.3022%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (14 samples, 1.52%)</title><rect x="8.0522%" y="773" width="1.5234%" height="15" fill="rgb(224,137,22)" fg:x="74" fg:w="14"/><text x="8.3022%" y="783.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (14 samples, 1.52%)</title><rect x="8.0522%" y="757" width="1.5234%" height="15" fill="rgb(254,70,32)" fg:x="74" fg:w="14"/><text x="8.3022%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (14 samples, 1.52%)</title><rect x="8.0522%" y="741" width="1.5234%" height="15" fill="rgb(229,75,37)" fg:x="74" fg:w="14"/><text x="8.3022%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (14 samples, 1.52%)</title><rect x="8.0522%" y="725" width="1.5234%" height="15" fill="rgb(252,64,23)" fg:x="74" fg:w="14"/><text x="8.3022%" y="735.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (13 samples, 1.41%)</title><rect x="8.1610%" y="709" width="1.4146%" height="15" fill="rgb(232,162,48)" fg:x="75" fg:w="13"/><text x="8.4110%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (13 samples, 1.41%)</title><rect x="8.1610%" y="693" width="1.4146%" height="15" fill="rgb(246,160,12)" fg:x="75" fg:w="13"/><text x="8.4110%" y="703.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (13 samples, 1.41%)</title><rect x="8.1610%" y="677" width="1.4146%" height="15" fill="rgb(247,166,0)" fg:x="75" fg:w="13"/><text x="8.4110%" y="687.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (13 samples, 1.41%)</title><rect x="8.1610%" y="661" width="1.4146%" height="15" fill="rgb(249,219,21)" fg:x="75" fg:w="13"/><text x="8.4110%" y="671.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="8.2699%" y="645" width="1.3058%" height="15" fill="rgb(205,209,3)" fg:x="76" fg:w="12"/><text x="8.5199%" y="655.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="8.2699%" y="629" width="1.3058%" height="15" fill="rgb(243,44,1)" fg:x="76" fg:w="12"/><text x="8.5199%" y="639.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="9.4668%" y="613" width="0.1088%" height="15" fill="rgb(206,159,16)" fg:x="87" fg:w="1"/><text x="9.7168%" y="623.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="9.4668%" y="597" width="0.1088%" height="15" fill="rgb(244,77,30)" fg:x="87" fg:w="1"/><text x="9.7168%" y="607.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="9.4668%" y="581" width="0.1088%" height="15" fill="rgb(218,69,12)" fg:x="87" fg:w="1"/><text x="9.7168%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="9.4668%" y="565" width="0.1088%" height="15" fill="rgb(212,87,7)" fg:x="87" fg:w="1"/><text x="9.7168%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="9.4668%" y="549" width="0.1088%" height="15" fill="rgb(245,114,25)" fg:x="87" fg:w="1"/><text x="9.7168%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="9.4668%" y="533" width="0.1088%" height="15" fill="rgb(210,61,42)" fg:x="87" fg:w="1"/><text x="9.7168%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.4668%" y="517" width="0.1088%" height="15" fill="rgb(211,52,33)" fg:x="87" fg:w="1"/><text x="9.7168%" y="527.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.4668%" y="501" width="0.1088%" height="15" fill="rgb(234,58,33)" fg:x="87" fg:w="1"/><text x="9.7168%" y="511.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.4668%" y="485" width="0.1088%" height="15" fill="rgb(220,115,36)" fg:x="87" fg:w="1"/><text x="9.7168%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.4668%" y="469" width="0.1088%" height="15" fill="rgb(243,153,54)" fg:x="87" fg:w="1"/><text x="9.7168%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="9.4668%" y="453" width="0.1088%" height="15" fill="rgb(251,47,18)" fg:x="87" fg:w="1"/><text x="9.7168%" y="463.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="9.5756%" y="597" width="0.1088%" height="15" fill="rgb(242,102,42)" fg:x="88" fg:w="1"/><text x="9.8256%" y="607.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="9.5756%" y="581" width="0.1088%" height="15" fill="rgb(234,31,38)" fg:x="88" fg:w="1"/><text x="9.8256%" y="591.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="9.5756%" y="565" width="0.1088%" height="15" fill="rgb(221,117,51)" fg:x="88" fg:w="1"/><text x="9.8256%" y="575.50"></text></g><g><title>&lt;chumsky::primitive::Filter&lt;F,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="9.5756%" y="549" width="0.1088%" height="15" fill="rgb(212,20,18)" fg:x="88" fg:w="1"/><text x="9.8256%" y="559.50"></text></g><g><title>&lt;chumsky::primitive::Filter&lt;F,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="9.5756%" y="533" width="0.1088%" height="15" fill="rgb(245,133,36)" fg:x="88" fg:w="1"/><text x="9.8256%" y="543.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (1 samples, 0.11%)</title><rect x="9.5756%" y="517" width="0.1088%" height="15" fill="rgb(212,6,19)" fg:x="88" fg:w="1"/><text x="9.8256%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="9.5756%" y="501" width="0.1088%" height="15" fill="rgb(218,1,36)" fg:x="88" fg:w="1"/><text x="9.8256%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="9.5756%" y="485" width="0.1088%" height="15" fill="rgb(246,84,54)" fg:x="88" fg:w="1"/><text x="9.8256%" y="495.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="9.5756%" y="469" width="0.1088%" height="15" fill="rgb(242,110,6)" fg:x="88" fg:w="1"/><text x="9.8256%" y="479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="9.5756%" y="453" width="0.1088%" height="15" fill="rgb(214,47,5)" fg:x="88" fg:w="1"/><text x="9.8256%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="9.5756%" y="437" width="0.1088%" height="15" fill="rgb(218,159,25)" fg:x="88" fg:w="1"/><text x="9.8256%" y="447.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="9.6844%" y="517" width="0.1088%" height="15" fill="rgb(215,211,28)" fg:x="89" fg:w="1"/><text x="9.9344%" y="527.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="9.6844%" y="501" width="0.1088%" height="15" fill="rgb(238,59,32)" fg:x="89" fg:w="1"/><text x="9.9344%" y="511.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="9.6844%" y="485" width="0.1088%" height="15" fill="rgb(226,82,3)" fg:x="89" fg:w="1"/><text x="9.9344%" y="495.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="9.6844%" y="469" width="0.1088%" height="15" fill="rgb(240,164,32)" fg:x="89" fg:w="1"/><text x="9.9344%" y="479.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="9.6844%" y="453" width="0.1088%" height="15" fill="rgb(232,46,7)" fg:x="89" fg:w="1"/><text x="9.9344%" y="463.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="9.6844%" y="437" width="0.1088%" height="15" fill="rgb(229,129,53)" fg:x="89" fg:w="1"/><text x="9.9344%" y="447.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="9.6844%" y="421" width="0.1088%" height="15" fill="rgb(234,188,29)" fg:x="89" fg:w="1"/><text x="9.9344%" y="431.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (3 samples, 0.33%)</title><rect x="9.6844%" y="565" width="0.3264%" height="15" fill="rgb(246,141,4)" fg:x="89" fg:w="3"/><text x="9.9344%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.33%)</title><rect x="9.6844%" y="549" width="0.3264%" height="15" fill="rgb(229,23,39)" fg:x="89" fg:w="3"/><text x="9.9344%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.33%)</title><rect x="9.6844%" y="533" width="0.3264%" height="15" fill="rgb(206,12,3)" fg:x="89" fg:w="3"/><text x="9.9344%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (2 samples, 0.22%)</title><rect x="9.7933%" y="517" width="0.2176%" height="15" fill="rgb(252,226,20)" fg:x="90" fg:w="2"/><text x="10.0433%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (70 samples, 7.62%)</title><rect x="2.5027%" y="1365" width="7.6170%" height="15" fill="rgb(216,123,35)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1375.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (70 samples, 7.62%)</title><rect x="2.5027%" y="1349" width="7.6170%" height="15" fill="rgb(212,68,40)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1359.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (70 samples, 7.62%)</title><rect x="2.5027%" y="1333" width="7.6170%" height="15" fill="rgb(254,125,32)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1343.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (70 samples, 7.62%)</title><rect x="2.5027%" y="1317" width="7.6170%" height="15" fill="rgb(253,97,22)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1327.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (70 samples, 7.62%)</title><rect x="2.5027%" y="1301" width="7.6170%" height="15" fill="rgb(241,101,14)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1311.50">&lt;chumsky::..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (70 samples, 7.62%)</title><rect x="2.5027%" y="1285" width="7.6170%" height="15" fill="rgb(238,103,29)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1295.50">chumsky::s..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (70 samples, 7.62%)</title><rect x="2.5027%" y="1269" width="7.6170%" height="15" fill="rgb(233,195,47)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1279.50">chumsky::s..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (70 samples, 7.62%)</title><rect x="2.5027%" y="1253" width="7.6170%" height="15" fill="rgb(246,218,30)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1263.50">chumsky::s..</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (70 samples, 7.62%)</title><rect x="2.5027%" y="1237" width="7.6170%" height="15" fill="rgb(219,145,47)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1247.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (70 samples, 7.62%)</title><rect x="2.5027%" y="1221" width="7.6170%" height="15" fill="rgb(243,12,26)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1231.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (70 samples, 7.62%)</title><rect x="2.5027%" y="1205" width="7.6170%" height="15" fill="rgb(214,87,16)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1215.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (70 samples, 7.62%)</title><rect x="2.5027%" y="1189" width="7.6170%" height="15" fill="rgb(208,99,42)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1199.50">&lt;chumsky::..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (70 samples, 7.62%)</title><rect x="2.5027%" y="1173" width="7.6170%" height="15" fill="rgb(253,99,2)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1183.50">chumsky::s..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (70 samples, 7.62%)</title><rect x="2.5027%" y="1157" width="7.6170%" height="15" fill="rgb(220,168,23)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1167.50">chumsky::s..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (70 samples, 7.62%)</title><rect x="2.5027%" y="1141" width="7.6170%" height="15" fill="rgb(242,38,24)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1151.50">chumsky::s..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (70 samples, 7.62%)</title><rect x="2.5027%" y="1125" width="7.6170%" height="15" fill="rgb(225,182,9)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1135.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (70 samples, 7.62%)</title><rect x="2.5027%" y="1109" width="7.6170%" height="15" fill="rgb(243,178,37)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1119.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (70 samples, 7.62%)</title><rect x="2.5027%" y="1093" width="7.6170%" height="15" fill="rgb(232,139,19)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1103.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (70 samples, 7.62%)</title><rect x="2.5027%" y="1077" width="7.6170%" height="15" fill="rgb(225,201,24)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1087.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (70 samples, 7.62%)</title><rect x="2.5027%" y="1061" width="7.6170%" height="15" fill="rgb(221,47,46)" fg:x="23" fg:w="70"/><text x="2.7527%" y="1071.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (58 samples, 6.31%)</title><rect x="3.8085%" y="1045" width="6.3112%" height="15" fill="rgb(249,23,13)" fg:x="35" fg:w="58"/><text x="4.0585%" y="1055.50">&lt;chumsky..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (58 samples, 6.31%)</title><rect x="3.8085%" y="1029" width="6.3112%" height="15" fill="rgb(219,9,5)" fg:x="35" fg:w="58"/><text x="4.0585%" y="1039.50">&lt;chumsky..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (58 samples, 6.31%)</title><rect x="3.8085%" y="1013" width="6.3112%" height="15" fill="rgb(254,171,16)" fg:x="35" fg:w="58"/><text x="4.0585%" y="1023.50">chumsky:..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (58 samples, 6.31%)</title><rect x="3.8085%" y="997" width="6.3112%" height="15" fill="rgb(230,171,20)" fg:x="35" fg:w="58"/><text x="4.0585%" y="1007.50">chumsky:..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (58 samples, 6.31%)</title><rect x="3.8085%" y="981" width="6.3112%" height="15" fill="rgb(210,71,41)" fg:x="35" fg:w="58"/><text x="4.0585%" y="991.50">chumsky:..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (58 samples, 6.31%)</title><rect x="3.8085%" y="965" width="6.3112%" height="15" fill="rgb(206,173,20)" fg:x="35" fg:w="58"/><text x="4.0585%" y="975.50">&lt;chumsky..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (58 samples, 6.31%)</title><rect x="3.8085%" y="949" width="6.3112%" height="15" fill="rgb(233,88,34)" fg:x="35" fg:w="58"/><text x="4.0585%" y="959.50">&lt;chumsky..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (49 samples, 5.33%)</title><rect x="4.7878%" y="933" width="5.3319%" height="15" fill="rgb(223,209,46)" fg:x="44" fg:w="49"/><text x="5.0378%" y="943.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (49 samples, 5.33%)</title><rect x="4.7878%" y="917" width="5.3319%" height="15" fill="rgb(250,43,18)" fg:x="44" fg:w="49"/><text x="5.0378%" y="927.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (49 samples, 5.33%)</title><rect x="4.7878%" y="901" width="5.3319%" height="15" fill="rgb(208,13,10)" fg:x="44" fg:w="49"/><text x="5.0378%" y="911.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="9.5756%" y="885" width="0.5441%" height="15" fill="rgb(212,200,36)" fg:x="88" fg:w="5"/><text x="9.8256%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="9.5756%" y="869" width="0.5441%" height="15" fill="rgb(225,90,30)" fg:x="88" fg:w="5"/><text x="9.8256%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="9.5756%" y="853" width="0.5441%" height="15" fill="rgb(236,182,39)" fg:x="88" fg:w="5"/><text x="9.8256%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="9.5756%" y="837" width="0.5441%" height="15" fill="rgb(212,144,35)" fg:x="88" fg:w="5"/><text x="9.8256%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="9.5756%" y="821" width="0.5441%" height="15" fill="rgb(228,63,44)" fg:x="88" fg:w="5"/><text x="9.8256%" y="831.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="9.5756%" y="805" width="0.5441%" height="15" fill="rgb(228,109,6)" fg:x="88" fg:w="5"/><text x="9.8256%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="9.5756%" y="789" width="0.5441%" height="15" fill="rgb(238,117,24)" fg:x="88" fg:w="5"/><text x="9.8256%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="9.5756%" y="773" width="0.5441%" height="15" fill="rgb(242,26,26)" fg:x="88" fg:w="5"/><text x="9.8256%" y="783.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="9.5756%" y="757" width="0.5441%" height="15" fill="rgb(221,92,48)" fg:x="88" fg:w="5"/><text x="9.8256%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="9.5756%" y="741" width="0.5441%" height="15" fill="rgb(209,209,32)" fg:x="88" fg:w="5"/><text x="9.8256%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="9.5756%" y="725" width="0.5441%" height="15" fill="rgb(221,70,22)" fg:x="88" fg:w="5"/><text x="9.8256%" y="735.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="9.5756%" y="709" width="0.5441%" height="15" fill="rgb(248,145,5)" fg:x="88" fg:w="5"/><text x="9.8256%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="9.5756%" y="693" width="0.5441%" height="15" fill="rgb(226,116,26)" fg:x="88" fg:w="5"/><text x="9.8256%" y="703.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="9.5756%" y="677" width="0.5441%" height="15" fill="rgb(244,5,17)" fg:x="88" fg:w="5"/><text x="9.8256%" y="687.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="9.5756%" y="661" width="0.5441%" height="15" fill="rgb(252,159,33)" fg:x="88" fg:w="5"/><text x="9.8256%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="9.5756%" y="645" width="0.5441%" height="15" fill="rgb(206,71,0)" fg:x="88" fg:w="5"/><text x="9.8256%" y="655.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="9.5756%" y="629" width="0.5441%" height="15" fill="rgb(233,118,54)" fg:x="88" fg:w="5"/><text x="9.8256%" y="639.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="9.5756%" y="613" width="0.5441%" height="15" fill="rgb(234,83,48)" fg:x="88" fg:w="5"/><text x="9.8256%" y="623.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="9.6844%" y="597" width="0.4353%" height="15" fill="rgb(228,3,54)" fg:x="89" fg:w="4"/><text x="9.9344%" y="607.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="9.6844%" y="581" width="0.4353%" height="15" fill="rgb(226,155,13)" fg:x="89" fg:w="4"/><text x="9.9344%" y="591.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="10.0109%" y="565" width="0.1088%" height="15" fill="rgb(241,28,37)" fg:x="92" fg:w="1"/><text x="10.2609%" y="575.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="10.0109%" y="549" width="0.1088%" height="15" fill="rgb(233,93,10)" fg:x="92" fg:w="1"/><text x="10.2609%" y="559.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="10.0109%" y="533" width="0.1088%" height="15" fill="rgb(225,113,19)" fg:x="92" fg:w="1"/><text x="10.2609%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="10.0109%" y="517" width="0.1088%" height="15" fill="rgb(241,2,18)" fg:x="92" fg:w="1"/><text x="10.2609%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="10.0109%" y="501" width="0.1088%" height="15" fill="rgb(228,207,21)" fg:x="92" fg:w="1"/><text x="10.2609%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="10.0109%" y="485" width="0.1088%" height="15" fill="rgb(213,211,35)" fg:x="92" fg:w="1"/><text x="10.2609%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="10.0109%" y="469" width="0.1088%" height="15" fill="rgb(209,83,10)" fg:x="92" fg:w="1"/><text x="10.2609%" y="479.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (3 samples, 0.33%)</title><rect x="10.1197%" y="949" width="0.3264%" height="15" fill="rgb(209,164,1)" fg:x="93" fg:w="3"/><text x="10.3697%" y="959.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="10.2285%" y="933" width="0.2176%" height="15" fill="rgb(213,184,43)" fg:x="94" fg:w="2"/><text x="10.4785%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="10.1197%" y="1093" width="0.5441%" height="15" fill="rgb(231,61,34)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1103.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="10.1197%" y="1077" width="0.5441%" height="15" fill="rgb(235,75,3)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1087.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (5 samples, 0.54%)</title><rect x="10.1197%" y="1061" width="0.5441%" height="15" fill="rgb(220,106,47)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1071.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (5 samples, 0.54%)</title><rect x="10.1197%" y="1045" width="0.5441%" height="15" fill="rgb(210,196,33)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1055.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="10.1197%" y="1029" width="0.5441%" height="15" fill="rgb(229,154,42)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1039.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="10.1197%" y="1013" width="0.5441%" height="15" fill="rgb(228,114,26)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="10.1197%" y="997" width="0.5441%" height="15" fill="rgb(208,144,1)" fg:x="93" fg:w="5"/><text x="10.3697%" y="1007.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (5 samples, 0.54%)</title><rect x="10.1197%" y="981" width="0.5441%" height="15" fill="rgb(239,112,37)" fg:x="93" fg:w="5"/><text x="10.3697%" y="991.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (5 samples, 0.54%)</title><rect x="10.1197%" y="965" width="0.5441%" height="15" fill="rgb(210,96,50)" fg:x="93" fg:w="5"/><text x="10.3697%" y="975.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="10.4461%" y="949" width="0.2176%" height="15" fill="rgb(222,178,2)" fg:x="96" fg:w="2"/><text x="10.6961%" y="959.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="10.9902%" y="837" width="0.1088%" height="15" fill="rgb(226,74,18)" fg:x="101" fg:w="1"/><text x="11.2402%" y="847.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="10.9902%" y="821" width="0.1088%" height="15" fill="rgb(225,67,54)" fg:x="101" fg:w="1"/><text x="11.2402%" y="831.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.11%)</title><rect x="10.9902%" y="805" width="0.1088%" height="15" fill="rgb(251,92,32)" fg:x="101" fg:w="1"/><text x="11.2402%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="11.0990%" y="837" width="0.1088%" height="15" fill="rgb(228,149,22)" fg:x="102" fg:w="1"/><text x="11.3490%" y="847.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="11.0990%" y="821" width="0.1088%" height="15" fill="rgb(243,54,13)" fg:x="102" fg:w="1"/><text x="11.3490%" y="831.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="11.0990%" y="805" width="0.1088%" height="15" fill="rgb(243,180,28)" fg:x="102" fg:w="1"/><text x="11.3490%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="11.0990%" y="789" width="0.1088%" height="15" fill="rgb(208,167,24)" fg:x="102" fg:w="1"/><text x="11.3490%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="11.0990%" y="773" width="0.1088%" height="15" fill="rgb(245,73,45)" fg:x="102" fg:w="1"/><text x="11.3490%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="11.0990%" y="757" width="0.1088%" height="15" fill="rgb(237,203,48)" fg:x="102" fg:w="1"/><text x="11.3490%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="11.0990%" y="741" width="0.1088%" height="15" fill="rgb(211,197,16)" fg:x="102" fg:w="1"/><text x="11.3490%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="11.0990%" y="725" width="0.1088%" height="15" fill="rgb(243,99,51)" fg:x="102" fg:w="1"/><text x="11.3490%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="11.0990%" y="709" width="0.1088%" height="15" fill="rgb(215,123,29)" fg:x="102" fg:w="1"/><text x="11.3490%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="11.0990%" y="693" width="0.1088%" height="15" fill="rgb(239,186,37)" fg:x="102" fg:w="1"/><text x="11.3490%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="11.0990%" y="677" width="0.1088%" height="15" fill="rgb(252,136,39)" fg:x="102" fg:w="1"/><text x="11.3490%" y="687.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.11%)</title><rect x="11.0990%" y="661" width="0.1088%" height="15" fill="rgb(223,213,32)" fg:x="102" fg:w="1"/><text x="11.3490%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="11.0990%" y="645" width="0.1088%" height="15" fill="rgb(233,115,5)" fg:x="102" fg:w="1"/><text x="11.3490%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="11.0990%" y="629" width="0.1088%" height="15" fill="rgb(207,226,44)" fg:x="102" fg:w="1"/><text x="11.3490%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="11.0990%" y="613" width="0.1088%" height="15" fill="rgb(208,126,0)" fg:x="102" fg:w="1"/><text x="11.3490%" y="623.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (7 samples, 0.76%)</title><rect x="10.6638%" y="885" width="0.7617%" height="15" fill="rgb(244,66,21)" fg:x="98" fg:w="7"/><text x="10.9138%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.44%)</title><rect x="10.9902%" y="869" width="0.4353%" height="15" fill="rgb(222,97,12)" fg:x="101" fg:w="4"/><text x="11.2402%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.44%)</title><rect x="10.9902%" y="853" width="0.4353%" height="15" fill="rgb(219,213,19)" fg:x="101" fg:w="4"/><text x="11.2402%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (2 samples, 0.22%)</title><rect x="11.2078%" y="837" width="0.2176%" height="15" fill="rgb(252,169,30)" fg:x="103" fg:w="2"/><text x="11.4578%" y="847.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (3 samples, 0.33%)</title><rect x="11.4255%" y="885" width="0.3264%" height="15" fill="rgb(206,32,51)" fg:x="105" fg:w="3"/><text x="11.6755%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="11.5343%" y="869" width="0.2176%" height="15" fill="rgb(250,172,42)" fg:x="106" fg:w="2"/><text x="11.7843%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (11 samples, 1.20%)</title><rect x="10.6638%" y="933" width="1.1970%" height="15" fill="rgb(209,34,43)" fg:x="98" fg:w="11"/><text x="10.9138%" y="943.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (11 samples, 1.20%)</title><rect x="10.6638%" y="917" width="1.1970%" height="15" fill="rgb(223,11,35)" fg:x="98" fg:w="11"/><text x="10.9138%" y="927.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (11 samples, 1.20%)</title><rect x="10.6638%" y="901" width="1.1970%" height="15" fill="rgb(251,219,26)" fg:x="98" fg:w="11"/><text x="10.9138%" y="911.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="11.7519%" y="885" width="0.1088%" height="15" fill="rgb(231,119,3)" fg:x="108" fg:w="1"/><text x="12.0019%" y="895.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="11.7519%" y="869" width="0.1088%" height="15" fill="rgb(216,97,11)" fg:x="108" fg:w="1"/><text x="12.0019%" y="879.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="11.7519%" y="853" width="0.1088%" height="15" fill="rgb(223,59,9)" fg:x="108" fg:w="1"/><text x="12.0019%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="11.7519%" y="837" width="0.1088%" height="15" fill="rgb(233,93,31)" fg:x="108" fg:w="1"/><text x="12.0019%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="11.7519%" y="821" width="0.1088%" height="15" fill="rgb(239,81,33)" fg:x="108" fg:w="1"/><text x="12.0019%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="11.7519%" y="805" width="0.1088%" height="15" fill="rgb(213,120,34)" fg:x="108" fg:w="1"/><text x="12.0019%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="11.7519%" y="789" width="0.1088%" height="15" fill="rgb(243,49,53)" fg:x="108" fg:w="1"/><text x="12.0019%" y="799.50"></text></g><g><title>chumsky::parse_recovery_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1781" width="9.4668%" height="15" fill="rgb(247,216,33)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1791.50">chumsky::parse..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1765" width="9.4668%" height="15" fill="rgb(226,26,14)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1775.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1749" width="9.4668%" height="15" fill="rgb(215,49,53)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1759.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1733" width="9.4668%" height="15" fill="rgb(245,162,40)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1743.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1717" width="9.4668%" height="15" fill="rgb(229,68,17)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1727.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1701" width="9.4668%" height="15" fill="rgb(213,182,10)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1711.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1685" width="9.4668%" height="15" fill="rgb(245,125,30)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1695.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1669" width="9.4668%" height="15" fill="rgb(232,202,2)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1679.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1653" width="9.4668%" height="15" fill="rgb(237,140,51)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1663.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1637" width="9.4668%" height="15" fill="rgb(236,157,25)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1647.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1621" width="9.4668%" height="15" fill="rgb(219,209,0)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1631.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1605" width="9.4668%" height="15" fill="rgb(240,116,54)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1615.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1589" width="9.4668%" height="15" fill="rgb(216,10,36)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1599.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1573" width="9.4668%" height="15" fill="rgb(222,72,44)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1583.50">&lt;chumsky::comb..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (87 samples, 9.47%)</title><rect x="2.5027%" y="1557" width="9.4668%" height="15" fill="rgb(232,159,9)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1567.50">chumsky::strea..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (87 samples, 9.47%)</title><rect x="2.5027%" y="1541" width="9.4668%" height="15" fill="rgb(210,39,32)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1551.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1525" width="9.4668%" height="15" fill="rgb(216,194,45)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1535.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1509" width="9.4668%" height="15" fill="rgb(218,18,35)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1519.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1493" width="9.4668%" height="15" fill="rgb(207,83,51)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1503.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1477" width="9.4668%" height="15" fill="rgb(225,63,43)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1487.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1461" width="9.4668%" height="15" fill="rgb(207,57,36)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1471.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1445" width="9.4668%" height="15" fill="rgb(216,99,33)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1455.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1429" width="9.4668%" height="15" fill="rgb(225,42,16)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1439.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (87 samples, 9.47%)</title><rect x="2.5027%" y="1413" width="9.4668%" height="15" fill="rgb(220,201,45)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1423.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (87 samples, 9.47%)</title><rect x="2.5027%" y="1397" width="9.4668%" height="15" fill="rgb(225,33,4)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1407.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="2.5027%" y="1381" width="9.4668%" height="15" fill="rgb(224,33,50)" fg:x="23" fg:w="87"/><text x="2.7527%" y="1391.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (17 samples, 1.85%)</title><rect x="10.1197%" y="1365" width="1.8498%" height="15" fill="rgb(246,198,51)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1375.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (17 samples, 1.85%)</title><rect x="10.1197%" y="1349" width="1.8498%" height="15" fill="rgb(205,22,4)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1359.50">&lt;..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (17 samples, 1.85%)</title><rect x="10.1197%" y="1333" width="1.8498%" height="15" fill="rgb(206,3,8)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1343.50">c..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (17 samples, 1.85%)</title><rect x="10.1197%" y="1317" width="1.8498%" height="15" fill="rgb(251,23,15)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1327.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (17 samples, 1.85%)</title><rect x="10.1197%" y="1301" width="1.8498%" height="15" fill="rgb(252,88,28)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1311.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (17 samples, 1.85%)</title><rect x="10.1197%" y="1285" width="1.8498%" height="15" fill="rgb(212,127,14)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1295.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (17 samples, 1.85%)</title><rect x="10.1197%" y="1269" width="1.8498%" height="15" fill="rgb(247,145,37)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1279.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (17 samples, 1.85%)</title><rect x="10.1197%" y="1253" width="1.8498%" height="15" fill="rgb(209,117,53)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1263.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (17 samples, 1.85%)</title><rect x="10.1197%" y="1237" width="1.8498%" height="15" fill="rgb(212,90,42)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1247.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (17 samples, 1.85%)</title><rect x="10.1197%" y="1221" width="1.8498%" height="15" fill="rgb(218,164,37)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1231.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (17 samples, 1.85%)</title><rect x="10.1197%" y="1205" width="1.8498%" height="15" fill="rgb(246,65,34)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1215.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (17 samples, 1.85%)</title><rect x="10.1197%" y="1189" width="1.8498%" height="15" fill="rgb(231,100,33)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1199.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (17 samples, 1.85%)</title><rect x="10.1197%" y="1173" width="1.8498%" height="15" fill="rgb(228,126,14)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1183.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (17 samples, 1.85%)</title><rect x="10.1197%" y="1157" width="1.8498%" height="15" fill="rgb(215,173,21)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1167.50">&lt;..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (17 samples, 1.85%)</title><rect x="10.1197%" y="1141" width="1.8498%" height="15" fill="rgb(210,6,40)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1151.50">&lt;..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (17 samples, 1.85%)</title><rect x="10.1197%" y="1125" width="1.8498%" height="15" fill="rgb(212,48,18)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1135.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (17 samples, 1.85%)</title><rect x="10.1197%" y="1109" width="1.8498%" height="15" fill="rgb(230,214,11)" fg:x="93" fg:w="17"/><text x="10.3697%" y="1119.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="10.6638%" y="1093" width="1.3058%" height="15" fill="rgb(254,105,39)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1103.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="10.6638%" y="1077" width="1.3058%" height="15" fill="rgb(245,158,5)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1087.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::parse (12 samples, 1.31%)</title><rect x="10.6638%" y="1061" width="1.3058%" height="15" fill="rgb(249,208,11)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1071.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (12 samples, 1.31%)</title><rect x="10.6638%" y="1045" width="1.3058%" height="15" fill="rgb(210,39,28)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1055.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (12 samples, 1.31%)</title><rect x="10.6638%" y="1029" width="1.3058%" height="15" fill="rgb(211,56,53)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1039.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (12 samples, 1.31%)</title><rect x="10.6638%" y="1013" width="1.3058%" height="15" fill="rgb(226,201,30)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::parse::{{closure}} (12 samples, 1.31%)</title><rect x="10.6638%" y="997" width="1.3058%" height="15" fill="rgb(239,101,34)" fg:x="98" fg:w="12"/><text x="10.9138%" y="1007.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="10.6638%" y="981" width="1.3058%" height="15" fill="rgb(226,209,5)" fg:x="98" fg:w="12"/><text x="10.9138%" y="991.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="10.6638%" y="965" width="1.3058%" height="15" fill="rgb(250,105,47)" fg:x="98" fg:w="12"/><text x="10.9138%" y="975.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="10.6638%" y="949" width="1.3058%" height="15" fill="rgb(230,72,3)" fg:x="98" fg:w="12"/><text x="10.9138%" y="959.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="11.8607%" y="933" width="0.1088%" height="15" fill="rgb(232,218,39)" fg:x="109" fg:w="1"/><text x="12.1107%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="11.9695%" y="1781" width="0.1088%" height="15" fill="rgb(248,166,6)" fg:x="110" fg:w="1"/><text x="12.2195%" y="1791.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.11%)</title><rect x="11.9695%" y="1765" width="0.1088%" height="15" fill="rgb(247,89,20)" fg:x="110" fg:w="1"/><text x="12.2195%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="11.9695%" y="1749" width="0.1088%" height="15" fill="rgb(248,130,54)" fg:x="110" fg:w="1"/><text x="12.2195%" y="1759.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="12.5136%" y="1221" width="0.3264%" height="15" fill="rgb(234,196,4)" fg:x="115" fg:w="3"/><text x="12.7636%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="12.9489%" y="1141" width="0.2176%" height="15" fill="rgb(250,143,31)" fg:x="119" fg:w="2"/><text x="13.1989%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="13.1665%" y="1141" width="0.1088%" height="15" fill="rgb(211,110,34)" fg:x="121" fg:w="1"/><text x="13.4165%" y="1151.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.65%)</title><rect x="13.7106%" y="1125" width="0.6529%" height="15" fill="rgb(215,124,48)" fg:x="126" fg:w="6"/><text x="13.9606%" y="1135.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.22%)</title><rect x="15.1251%" y="1045" width="0.2176%" height="15" fill="rgb(216,46,13)" fg:x="139" fg:w="2"/><text x="15.3751%" y="1055.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.22%)</title><rect x="15.1251%" y="1029" width="0.2176%" height="15" fill="rgb(205,184,25)" fg:x="139" fg:w="2"/><text x="15.3751%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.22%)</title><rect x="15.1251%" y="1013" width="0.2176%" height="15" fill="rgb(228,1,10)" fg:x="139" fg:w="2"/><text x="15.3751%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (2 samples, 0.22%)</title><rect x="15.1251%" y="997" width="0.2176%" height="15" fill="rgb(213,116,27)" fg:x="139" fg:w="2"/><text x="15.3751%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="15.8868%" y="997" width="0.1088%" height="15" fill="rgb(241,95,50)" fg:x="146" fg:w="1"/><text x="16.1368%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="15.8868%" y="981" width="0.1088%" height="15" fill="rgb(238,48,32)" fg:x="146" fg:w="1"/><text x="16.1368%" y="991.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.11%)</title><rect x="15.9956%" y="997" width="0.1088%" height="15" fill="rgb(235,113,49)" fg:x="147" fg:w="1"/><text x="16.2456%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 1.09%)</title><rect x="15.3428%" y="1045" width="1.0881%" height="15" fill="rgb(205,127,43)" fg:x="141" fg:w="10"/><text x="15.5928%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 1.09%)</title><rect x="15.3428%" y="1029" width="1.0881%" height="15" fill="rgb(250,162,2)" fg:x="141" fg:w="10"/><text x="15.5928%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 1.09%)</title><rect x="15.3428%" y="1013" width="1.0881%" height="15" fill="rgb(220,13,41)" fg:x="141" fg:w="10"/><text x="15.5928%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.33%)</title><rect x="16.1045%" y="997" width="0.3264%" height="15" fill="rgb(249,221,25)" fg:x="148" fg:w="3"/><text x="16.3545%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.33%)</title><rect x="16.1045%" y="981" width="0.3264%" height="15" fill="rgb(215,208,19)" fg:x="148" fg:w="3"/><text x="16.3545%" y="991.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.22%)</title><rect x="16.7573%" y="901" width="0.2176%" height="15" fill="rgb(236,175,2)" fg:x="154" fg:w="2"/><text x="17.0073%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.22%)</title><rect x="16.7573%" y="885" width="0.2176%" height="15" fill="rgb(241,52,2)" fg:x="154" fg:w="2"/><text x="17.0073%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (1 samples, 0.11%)</title><rect x="17.0838%" y="869" width="0.1088%" height="15" fill="rgb(248,140,14)" fg:x="157" fg:w="1"/><text x="17.3338%" y="879.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.11%)</title><rect x="17.0838%" y="853" width="0.1088%" height="15" fill="rgb(253,22,42)" fg:x="157" fg:w="1"/><text x="17.3338%" y="863.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="17.0838%" y="837" width="0.1088%" height="15" fill="rgb(234,61,47)" fg:x="157" fg:w="1"/><text x="17.3338%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="17.0838%" y="821" width="0.1088%" height="15" fill="rgb(208,226,15)" fg:x="157" fg:w="1"/><text x="17.3338%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.11%)</title><rect x="17.0838%" y="805" width="0.1088%" height="15" fill="rgb(217,221,4)" fg:x="157" fg:w="1"/><text x="17.3338%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (5 samples, 0.54%)</title><rect x="16.7573%" y="965" width="0.5441%" height="15" fill="rgb(212,174,34)" fg:x="154" fg:w="5"/><text x="17.0073%" y="975.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (5 samples, 0.54%)</title><rect x="16.7573%" y="949" width="0.5441%" height="15" fill="rgb(253,83,4)" fg:x="154" fg:w="5"/><text x="17.0073%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.54%)</title><rect x="16.7573%" y="933" width="0.5441%" height="15" fill="rgb(250,195,49)" fg:x="154" fg:w="5"/><text x="17.0073%" y="943.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.54%)</title><rect x="16.7573%" y="917" width="0.5441%" height="15" fill="rgb(241,192,25)" fg:x="154" fg:w="5"/><text x="17.0073%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.33%)</title><rect x="16.9750%" y="901" width="0.3264%" height="15" fill="rgb(208,124,10)" fg:x="156" fg:w="3"/><text x="17.2250%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (3 samples, 0.33%)</title><rect x="16.9750%" y="885" width="0.3264%" height="15" fill="rgb(222,33,0)" fg:x="156" fg:w="3"/><text x="17.2250%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.11%)</title><rect x="17.1926%" y="869" width="0.1088%" height="15" fill="rgb(234,209,28)" fg:x="158" fg:w="1"/><text x="17.4426%" y="879.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.11%)</title><rect x="17.1926%" y="853" width="0.1088%" height="15" fill="rgb(224,11,23)" fg:x="158" fg:w="1"/><text x="17.4426%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.11%)</title><rect x="17.1926%" y="837" width="0.1088%" height="15" fill="rgb(232,99,1)" fg:x="158" fg:w="1"/><text x="17.4426%" y="847.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="17.1926%" y="821" width="0.1088%" height="15" fill="rgb(237,95,45)" fg:x="158" fg:w="1"/><text x="17.4426%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="17.1926%" y="805" width="0.1088%" height="15" fill="rgb(208,109,11)" fg:x="158" fg:w="1"/><text x="17.4426%" y="815.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="17.1926%" y="789" width="0.1088%" height="15" fill="rgb(216,190,48)" fg:x="158" fg:w="1"/><text x="17.4426%" y="799.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.11%)</title><rect x="17.1926%" y="773" width="0.1088%" height="15" fill="rgb(251,171,36)" fg:x="158" fg:w="1"/><text x="17.4426%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="17.9543%" y="933" width="0.1088%" height="15" fill="rgb(230,62,22)" fg:x="165" fg:w="1"/><text x="18.2043%" y="943.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.11%)</title><rect x="18.0631%" y="933" width="0.1088%" height="15" fill="rgb(225,114,35)" fg:x="166" fg:w="1"/><text x="18.3131%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (15 samples, 1.63%)</title><rect x="17.3014%" y="965" width="1.6322%" height="15" fill="rgb(215,118,42)" fg:x="159" fg:w="15"/><text x="17.5514%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (15 samples, 1.63%)</title><rect x="17.3014%" y="949" width="1.6322%" height="15" fill="rgb(243,119,21)" fg:x="159" fg:w="15"/><text x="17.5514%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.76%)</title><rect x="18.1719%" y="933" width="0.7617%" height="15" fill="rgb(252,177,53)" fg:x="167" fg:w="7"/><text x="18.4219%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.76%)</title><rect x="18.1719%" y="917" width="0.7617%" height="15" fill="rgb(237,209,29)" fg:x="167" fg:w="7"/><text x="18.4219%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (21 samples, 2.29%)</title><rect x="16.7573%" y="1029" width="2.2851%" height="15" fill="rgb(212,65,23)" fg:x="154" fg:w="21"/><text x="17.0073%" y="1039.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 2.29%)</title><rect x="16.7573%" y="1013" width="2.2851%" height="15" fill="rgb(230,222,46)" fg:x="154" fg:w="21"/><text x="17.0073%" y="1023.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (21 samples, 2.29%)</title><rect x="16.7573%" y="997" width="2.2851%" height="15" fill="rgb(215,135,32)" fg:x="154" fg:w="21"/><text x="17.0073%" y="1007.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (21 samples, 2.29%)</title><rect x="16.7573%" y="981" width="2.2851%" height="15" fill="rgb(246,101,22)" fg:x="154" fg:w="21"/><text x="17.0073%" y="991.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="18.9336%" y="965" width="0.1088%" height="15" fill="rgb(206,107,13)" fg:x="174" fg:w="1"/><text x="19.1836%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="18.9336%" y="949" width="0.1088%" height="15" fill="rgb(250,100,44)" fg:x="174" fg:w="1"/><text x="19.1836%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="18.9336%" y="933" width="0.1088%" height="15" fill="rgb(231,147,38)" fg:x="174" fg:w="1"/><text x="19.1836%" y="943.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="18.9336%" y="917" width="0.1088%" height="15" fill="rgb(229,8,40)" fg:x="174" fg:w="1"/><text x="19.1836%" y="927.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="18.9336%" y="901" width="0.1088%" height="15" fill="rgb(221,135,30)" fg:x="174" fg:w="1"/><text x="19.1836%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.11%)</title><rect x="19.2601%" y="1013" width="0.1088%" height="15" fill="rgb(249,193,18)" fg:x="177" fg:w="1"/><text x="19.5101%" y="1023.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="19.3689%" y="1013" width="0.1088%" height="15" fill="rgb(209,133,39)" fg:x="178" fg:w="1"/><text x="19.6189%" y="1023.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.11%)</title><rect x="19.4777%" y="1013" width="0.1088%" height="15" fill="rgb(232,100,14)" fg:x="179" fg:w="1"/><text x="19.7277%" y="1023.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (49 samples, 5.33%)</title><rect x="14.3634%" y="1109" width="5.3319%" height="15" fill="rgb(224,185,1)" fg:x="132" fg:w="49"/><text x="14.6134%" y="1119.50">&lt;chumsk..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (46 samples, 5.01%)</title><rect x="14.6899%" y="1093" width="5.0054%" height="15" fill="rgb(223,139,8)" fg:x="135" fg:w="46"/><text x="14.9399%" y="1103.50">std::c..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (46 samples, 5.01%)</title><rect x="14.6899%" y="1077" width="5.0054%" height="15" fill="rgb(232,213,38)" fg:x="135" fg:w="46"/><text x="14.9399%" y="1087.50">hashbr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 5.01%)</title><rect x="14.6899%" y="1061" width="5.0054%" height="15" fill="rgb(207,94,22)" fg:x="135" fg:w="46"/><text x="14.9399%" y="1071.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (30 samples, 3.26%)</title><rect x="16.4309%" y="1045" width="3.2644%" height="15" fill="rgb(219,183,54)" fg:x="151" fg:w="30"/><text x="16.6809%" y="1055.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (6 samples, 0.65%)</title><rect x="19.0424%" y="1029" width="0.6529%" height="15" fill="rgb(216,185,54)" fg:x="175" fg:w="6"/><text x="19.2924%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.11%)</title><rect x="19.5865%" y="1013" width="0.1088%" height="15" fill="rgb(254,217,39)" fg:x="180" fg:w="1"/><text x="19.8365%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="19.5865%" y="997" width="0.1088%" height="15" fill="rgb(240,178,23)" fg:x="180" fg:w="1"/><text x="19.8365%" y="1007.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.65%)</title><rect x="19.6953%" y="1109" width="0.6529%" height="15" fill="rgb(218,11,47)" fg:x="181" fg:w="6"/><text x="19.9453%" y="1119.50"></text></g><g><title>chumsky::error::merge_alts (66 samples, 7.18%)</title><rect x="13.2753%" y="1141" width="7.1817%" height="15" fill="rgb(218,51,51)" fg:x="122" fg:w="66"/><text x="13.5253%" y="1151.50">chumsky::e..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (56 samples, 6.09%)</title><rect x="14.3634%" y="1125" width="6.0936%" height="15" fill="rgb(238,126,27)" fg:x="132" fg:w="56"/><text x="14.6134%" y="1135.50">chumsky:..</text></g><g><title>core::ptr::drop_in_place&lt;chumsky::error::Simple&lt;char&gt;&gt; (1 samples, 0.11%)</title><rect x="20.3482%" y="1109" width="0.1088%" height="15" fill="rgb(249,202,22)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;core::option::Option&lt;char&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="20.3482%" y="1093" width="0.1088%" height="15" fill="rgb(254,195,49)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;core::option::Option&lt;char&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="20.3482%" y="1077" width="0.1088%" height="15" fill="rgb(208,123,14)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::option::Option&lt;char&gt;,(),ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="20.3482%" y="1061" width="0.1088%" height="15" fill="rgb(224,200,8)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (1 samples, 0.11%)</title><rect x="20.3482%" y="1045" width="0.1088%" height="15" fill="rgb(217,61,36)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="20.3482%" y="1029" width="0.1088%" height="15" fill="rgb(206,35,45)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.11%)</title><rect x="20.3482%" y="1013" width="0.1088%" height="15" fill="rgb(217,65,33)" fg:x="187" fg:w="1"/><text x="20.5982%" y="1023.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="20.5658%" y="1109" width="0.4353%" height="15" fill="rgb(222,158,48)" fg:x="189" fg:w="4"/><text x="20.8158%" y="1119.50"></text></g><g><title>&lt;chumsky::combinator::Rewind&lt;A&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="21.6540%" y="869" width="0.1088%" height="15" fill="rgb(254,2,54)" fg:x="199" fg:w="1"/><text x="21.9040%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::Rewind&lt;A&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="21.6540%" y="853" width="0.1088%" height="15" fill="rgb(250,143,38)" fg:x="199" fg:w="1"/><text x="21.9040%" y="863.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="21.6540%" y="837" width="0.1088%" height="15" fill="rgb(248,25,0)" fg:x="199" fg:w="1"/><text x="21.9040%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="21.6540%" y="821" width="0.1088%" height="15" fill="rgb(206,152,27)" fg:x="199" fg:w="1"/><text x="21.9040%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="21.6540%" y="805" width="0.1088%" height="15" fill="rgb(240,77,30)" fg:x="199" fg:w="1"/><text x="21.9040%" y="815.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="21.6540%" y="789" width="0.1088%" height="15" fill="rgb(231,5,3)" fg:x="199" fg:w="1"/><text x="21.9040%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="21.6540%" y="773" width="0.1088%" height="15" fill="rgb(207,226,32)" fg:x="199" fg:w="1"/><text x="21.9040%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="21.6540%" y="757" width="0.1088%" height="15" fill="rgb(222,207,47)" fg:x="199" fg:w="1"/><text x="21.9040%" y="767.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="21.6540%" y="741" width="0.1088%" height="15" fill="rgb(229,115,45)" fg:x="199" fg:w="1"/><text x="21.9040%" y="751.50"></text></g><g><title>&lt;chumsky::primitive::End&lt;E&gt; as chumsky::Parser&lt;I,()&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="21.6540%" y="725" width="0.1088%" height="15" fill="rgb(224,191,6)" fg:x="199" fg:w="1"/><text x="21.9040%" y="735.50"></text></g><g><title>&lt;chumsky::primitive::End&lt;E&gt; as chumsky::Parser&lt;I,()&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="21.6540%" y="709" width="0.1088%" height="15" fill="rgb(230,227,24)" fg:x="199" fg:w="1"/><text x="21.9040%" y="719.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (1 samples, 0.11%)</title><rect x="21.6540%" y="693" width="0.1088%" height="15" fill="rgb(228,80,19)" fg:x="199" fg:w="1"/><text x="21.9040%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="21.6540%" y="677" width="0.1088%" height="15" fill="rgb(247,229,0)" fg:x="199" fg:w="1"/><text x="21.9040%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="21.6540%" y="661" width="0.1088%" height="15" fill="rgb(237,194,15)" fg:x="199" fg:w="1"/><text x="21.9040%" y="671.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="21.6540%" y="645" width="0.1088%" height="15" fill="rgb(219,203,20)" fg:x="199" fg:w="1"/><text x="21.9040%" y="655.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="21.7628%" y="821" width="0.2176%" height="15" fill="rgb(234,128,8)" fg:x="200" fg:w="2"/><text x="22.0128%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="22.0892%" y="741" width="0.1088%" height="15" fill="rgb(248,202,8)" fg:x="203" fg:w="1"/><text x="22.3392%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="22.0892%" y="725" width="0.1088%" height="15" fill="rgb(206,104,37)" fg:x="203" fg:w="1"/><text x="22.3392%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="22.0892%" y="709" width="0.1088%" height="15" fill="rgb(223,8,27)" fg:x="203" fg:w="1"/><text x="22.3392%" y="719.50"></text></g><g><title>chumsky::error::merge_alts (5 samples, 0.54%)</title><rect x="21.7628%" y="837" width="0.5441%" height="15" fill="rgb(216,217,28)" fg:x="200" fg:w="5"/><text x="22.0128%" y="847.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (3 samples, 0.33%)</title><rect x="21.9804%" y="821" width="0.3264%" height="15" fill="rgb(249,199,1)" fg:x="202" fg:w="3"/><text x="22.2304%" y="831.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (3 samples, 0.33%)</title><rect x="21.9804%" y="805" width="0.3264%" height="15" fill="rgb(240,85,17)" fg:x="202" fg:w="3"/><text x="22.2304%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.22%)</title><rect x="22.0892%" y="789" width="0.2176%" height="15" fill="rgb(206,108,45)" fg:x="203" fg:w="2"/><text x="22.3392%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="22.0892%" y="773" width="0.2176%" height="15" fill="rgb(245,210,41)" fg:x="203" fg:w="2"/><text x="22.3392%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="22.0892%" y="757" width="0.2176%" height="15" fill="rgb(206,13,37)" fg:x="203" fg:w="2"/><text x="22.3392%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="22.1980%" y="741" width="0.1088%" height="15" fill="rgb(250,61,18)" fg:x="204" fg:w="1"/><text x="22.4480%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.11%)</title><rect x="22.1980%" y="725" width="0.1088%" height="15" fill="rgb(235,172,48)" fg:x="204" fg:w="1"/><text x="22.4480%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.11%)</title><rect x="22.1980%" y="709" width="0.1088%" height="15" fill="rgb(249,201,17)" fg:x="204" fg:w="1"/><text x="22.4480%" y="719.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="22.4157%" y="677" width="0.1088%" height="15" fill="rgb(219,208,6)" fg:x="206" fg:w="1"/><text x="22.6657%" y="687.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="22.4157%" y="661" width="0.1088%" height="15" fill="rgb(248,31,23)" fg:x="206" fg:w="1"/><text x="22.6657%" y="671.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="22.4157%" y="645" width="0.1088%" height="15" fill="rgb(245,15,42)" fg:x="206" fg:w="1"/><text x="22.6657%" y="655.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="22.4157%" y="629" width="0.1088%" height="15" fill="rgb(222,217,39)" fg:x="206" fg:w="1"/><text x="22.6657%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="22.4157%" y="613" width="0.1088%" height="15" fill="rgb(210,219,27)" fg:x="206" fg:w="1"/><text x="22.6657%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="22.4157%" y="597" width="0.1088%" height="15" fill="rgb(252,166,36)" fg:x="206" fg:w="1"/><text x="22.6657%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="22.5245%" y="629" width="0.2176%" height="15" fill="rgb(245,132,34)" fg:x="207" fg:w="2"/><text x="22.7745%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="22.5245%" y="613" width="0.2176%" height="15" fill="rgb(236,54,3)" fg:x="207" fg:w="2"/><text x="22.7745%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="22.5245%" y="597" width="0.2176%" height="15" fill="rgb(241,173,43)" fg:x="207" fg:w="2"/><text x="22.7745%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="22.5245%" y="581" width="0.2176%" height="15" fill="rgb(215,190,9)" fg:x="207" fg:w="2"/><text x="22.7745%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.22%)</title><rect x="22.5245%" y="565" width="0.2176%" height="15" fill="rgb(242,101,16)" fg:x="207" fg:w="2"/><text x="22.7745%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.22%)</title><rect x="22.5245%" y="549" width="0.2176%" height="15" fill="rgb(223,190,21)" fg:x="207" fg:w="2"/><text x="22.7745%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="22.5245%" y="533" width="0.2176%" height="15" fill="rgb(215,228,25)" fg:x="207" fg:w="2"/><text x="22.7745%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="22.5245%" y="517" width="0.2176%" height="15" fill="rgb(225,36,22)" fg:x="207" fg:w="2"/><text x="22.7745%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="22.5245%" y="501" width="0.2176%" height="15" fill="rgb(251,106,46)" fg:x="207" fg:w="2"/><text x="22.7745%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="22.5245%" y="485" width="0.2176%" height="15" fill="rgb(208,90,1)" fg:x="207" fg:w="2"/><text x="22.7745%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="22.6333%" y="469" width="0.1088%" height="15" fill="rgb(243,10,4)" fg:x="208" fg:w="1"/><text x="22.8833%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="22.6333%" y="453" width="0.1088%" height="15" fill="rgb(212,137,27)" fg:x="208" fg:w="1"/><text x="22.8833%" y="463.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="22.5245%" y="677" width="0.3264%" height="15" fill="rgb(231,220,49)" fg:x="207" fg:w="3"/><text x="22.7745%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="22.5245%" y="661" width="0.3264%" height="15" fill="rgb(237,96,20)" fg:x="207" fg:w="3"/><text x="22.7745%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="22.5245%" y="645" width="0.3264%" height="15" fill="rgb(239,229,30)" fg:x="207" fg:w="3"/><text x="22.7745%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="22.7421%" y="629" width="0.1088%" height="15" fill="rgb(219,65,33)" fg:x="209" fg:w="1"/><text x="22.9921%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="22.7421%" y="613" width="0.1088%" height="15" fill="rgb(243,134,7)" fg:x="209" fg:w="1"/><text x="22.9921%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="22.7421%" y="597" width="0.1088%" height="15" fill="rgb(216,177,54)" fg:x="209" fg:w="1"/><text x="22.9921%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="22.7421%" y="581" width="0.1088%" height="15" fill="rgb(211,160,20)" fg:x="209" fg:w="1"/><text x="22.9921%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="22.7421%" y="565" width="0.1088%" height="15" fill="rgb(239,85,39)" fg:x="209" fg:w="1"/><text x="22.9921%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="22.7421%" y="549" width="0.1088%" height="15" fill="rgb(232,125,22)" fg:x="209" fg:w="1"/><text x="22.9921%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="22.7421%" y="533" width="0.1088%" height="15" fill="rgb(244,57,34)" fg:x="209" fg:w="1"/><text x="22.9921%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="22.7421%" y="517" width="0.1088%" height="15" fill="rgb(214,203,32)" fg:x="209" fg:w="1"/><text x="22.9921%" y="527.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="22.7421%" y="501" width="0.1088%" height="15" fill="rgb(207,58,43)" fg:x="209" fg:w="1"/><text x="22.9921%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="22.7421%" y="485" width="0.1088%" height="15" fill="rgb(215,193,15)" fg:x="209" fg:w="1"/><text x="22.9921%" y="495.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (6 samples, 0.65%)</title><rect x="22.3069%" y="725" width="0.6529%" height="15" fill="rgb(232,15,44)" fg:x="205" fg:w="6"/><text x="22.5569%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.54%)</title><rect x="22.4157%" y="709" width="0.5441%" height="15" fill="rgb(212,3,48)" fg:x="206" fg:w="5"/><text x="22.6657%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.54%)</title><rect x="22.4157%" y="693" width="0.5441%" height="15" fill="rgb(218,128,7)" fg:x="206" fg:w="5"/><text x="22.6657%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="22.8509%" y="677" width="0.1088%" height="15" fill="rgb(226,216,39)" fg:x="210" fg:w="1"/><text x="23.1009%" y="687.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (3 samples, 0.33%)</title><rect x="22.9597%" y="725" width="0.3264%" height="15" fill="rgb(243,47,51)" fg:x="211" fg:w="3"/><text x="23.2097%" y="735.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="23.0686%" y="709" width="0.2176%" height="15" fill="rgb(241,183,40)" fg:x="212" fg:w="2"/><text x="23.3186%" y="719.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (10 samples, 1.09%)</title><rect x="22.3069%" y="789" width="1.0881%" height="15" fill="rgb(231,217,32)" fg:x="205" fg:w="10"/><text x="22.5569%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="22.3069%" y="773" width="1.0881%" height="15" fill="rgb(229,61,38)" fg:x="205" fg:w="10"/><text x="22.5569%" y="783.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="22.3069%" y="757" width="1.0881%" height="15" fill="rgb(225,210,5)" fg:x="205" fg:w="10"/><text x="22.5569%" y="767.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="22.3069%" y="741" width="1.0881%" height="15" fill="rgb(231,79,45)" fg:x="205" fg:w="10"/><text x="22.5569%" y="751.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="23.2862%" y="725" width="0.1088%" height="15" fill="rgb(224,100,7)" fg:x="214" fg:w="1"/><text x="23.5362%" y="735.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="23.2862%" y="709" width="0.1088%" height="15" fill="rgb(241,198,18)" fg:x="214" fg:w="1"/><text x="23.5362%" y="719.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (18 samples, 1.96%)</title><rect x="21.6540%" y="885" width="1.9587%" height="15" fill="rgb(252,97,53)" fg:x="199" fg:w="18"/><text x="21.9040%" y="895.50">&lt;..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (17 samples, 1.85%)</title><rect x="21.7628%" y="869" width="1.8498%" height="15" fill="rgb(220,88,7)" fg:x="200" fg:w="17"/><text x="22.0128%" y="879.50">&lt;..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (17 samples, 1.85%)</title><rect x="21.7628%" y="853" width="1.8498%" height="15" fill="rgb(213,176,14)" fg:x="200" fg:w="17"/><text x="22.0128%" y="863.50">&lt;..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (12 samples, 1.31%)</title><rect x="22.3069%" y="837" width="1.3058%" height="15" fill="rgb(246,73,7)" fg:x="205" fg:w="12"/><text x="22.5569%" y="847.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (12 samples, 1.31%)</title><rect x="22.3069%" y="821" width="1.3058%" height="15" fill="rgb(245,64,36)" fg:x="205" fg:w="12"/><text x="22.5569%" y="831.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (12 samples, 1.31%)</title><rect x="22.3069%" y="805" width="1.3058%" height="15" fill="rgb(245,80,10)" fg:x="205" fg:w="12"/><text x="22.5569%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="23.3950%" y="789" width="0.2176%" height="15" fill="rgb(232,107,50)" fg:x="215" fg:w="2"/><text x="23.6450%" y="799.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="21.6540%" y="965" width="2.0675%" height="15" fill="rgb(253,3,0)" fg:x="199" fg:w="19"/><text x="21.9040%" y="975.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="21.6540%" y="949" width="2.0675%" height="15" fill="rgb(212,99,53)" fg:x="199" fg:w="19"/><text x="21.9040%" y="959.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (19 samples, 2.07%)</title><rect x="21.6540%" y="933" width="2.0675%" height="15" fill="rgb(249,111,54)" fg:x="199" fg:w="19"/><text x="21.9040%" y="943.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="21.6540%" y="917" width="2.0675%" height="15" fill="rgb(249,55,30)" fg:x="199" fg:w="19"/><text x="21.9040%" y="927.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="21.6540%" y="901" width="2.0675%" height="15" fill="rgb(237,47,42)" fg:x="199" fg:w="19"/><text x="21.9040%" y="911.50">&lt;..</text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="23.6126%" y="885" width="0.1088%" height="15" fill="rgb(211,20,18)" fg:x="217" fg:w="1"/><text x="23.8626%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="23.7214%" y="933" width="0.2176%" height="15" fill="rgb(231,203,46)" fg:x="218" fg:w="2"/><text x="23.9714%" y="943.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="24.8096%" y="917" width="0.1088%" height="15" fill="rgb(237,142,3)" fg:x="228" fg:w="1"/><text x="25.0596%" y="927.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="24.8096%" y="901" width="0.1088%" height="15" fill="rgb(241,107,1)" fg:x="228" fg:w="1"/><text x="25.0596%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.11%)</title><rect x="24.8096%" y="885" width="0.1088%" height="15" fill="rgb(229,83,13)" fg:x="228" fg:w="1"/><text x="25.0596%" y="895.50"></text></g><g><title>core::mem::replace (1 samples, 0.11%)</title><rect x="24.8096%" y="869" width="0.1088%" height="15" fill="rgb(241,91,40)" fg:x="228" fg:w="1"/><text x="25.0596%" y="879.50"></text></g><g><title>[libc-2.31.so] (20 samples, 2.18%)</title><rect x="24.9184%" y="917" width="2.1763%" height="15" fill="rgb(225,3,45)" fg:x="229" fg:w="20"/><text x="25.1684%" y="927.50">[..</text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="27.8564%" y="885" width="0.1088%" height="15" fill="rgb(244,223,14)" fg:x="256" fg:w="1"/><text x="28.1064%" y="895.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="27.8564%" y="869" width="0.1088%" height="15" fill="rgb(224,124,37)" fg:x="256" fg:w="1"/><text x="28.1064%" y="879.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="27.8564%" y="853" width="0.1088%" height="15" fill="rgb(251,171,30)" fg:x="256" fg:w="1"/><text x="28.1064%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="27.8564%" y="837" width="0.1088%" height="15" fill="rgb(236,46,54)" fg:x="256" fg:w="1"/><text x="28.1064%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="27.8564%" y="821" width="0.1088%" height="15" fill="rgb(245,213,5)" fg:x="256" fg:w="1"/><text x="28.1064%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.11%)</title><rect x="27.8564%" y="805" width="0.1088%" height="15" fill="rgb(230,144,27)" fg:x="256" fg:w="1"/><text x="28.1064%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.11%)</title><rect x="27.8564%" y="789" width="0.1088%" height="15" fill="rgb(220,86,6)" fg:x="256" fg:w="1"/><text x="28.1064%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.11%)</title><rect x="27.8564%" y="773" width="0.1088%" height="15" fill="rgb(240,20,13)" fg:x="256" fg:w="1"/><text x="28.1064%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.11%)</title><rect x="27.8564%" y="757" width="0.1088%" height="15" fill="rgb(217,89,34)" fg:x="256" fg:w="1"/><text x="28.1064%" y="767.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="27.9652%" y="885" width="0.2176%" height="15" fill="rgb(229,13,5)" fg:x="257" fg:w="2"/><text x="28.2152%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (3 samples, 0.33%)</title><rect x="28.1828%" y="885" width="0.3264%" height="15" fill="rgb(244,67,35)" fg:x="259" fg:w="3"/><text x="28.4328%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (3 samples, 0.33%)</title><rect x="28.1828%" y="869" width="0.3264%" height="15" fill="rgb(221,40,2)" fg:x="259" fg:w="3"/><text x="28.4328%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;core::option::Option&lt;char&gt;,()&gt;&gt; (3 samples, 0.33%)</title><rect x="28.1828%" y="853" width="0.3264%" height="15" fill="rgb(237,157,21)" fg:x="259" fg:w="3"/><text x="28.4328%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (3 samples, 0.33%)</title><rect x="28.1828%" y="837" width="0.3264%" height="15" fill="rgb(222,94,11)" fg:x="259" fg:w="3"/><text x="28.4328%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.33%)</title><rect x="28.1828%" y="821" width="0.3264%" height="15" fill="rgb(249,113,6)" fg:x="259" fg:w="3"/><text x="28.4328%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.33%)</title><rect x="28.1828%" y="805" width="0.3264%" height="15" fill="rgb(238,137,36)" fg:x="259" fg:w="3"/><text x="28.4328%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.33%)</title><rect x="28.1828%" y="789" width="0.3264%" height="15" fill="rgb(210,102,26)" fg:x="259" fg:w="3"/><text x="28.4328%" y="799.50"></text></g><g><title>_int_free (3 samples, 0.33%)</title><rect x="28.1828%" y="773" width="0.3264%" height="15" fill="rgb(218,30,30)" fg:x="259" fg:w="3"/><text x="28.4328%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="29.0533%" y="805" width="0.1088%" height="15" fill="rgb(214,67,26)" fg:x="267" fg:w="1"/><text x="29.3033%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="29.0533%" y="789" width="0.1088%" height="15" fill="rgb(251,9,53)" fg:x="267" fg:w="1"/><text x="29.3033%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.22%)</title><rect x="29.0533%" y="837" width="0.2176%" height="15" fill="rgb(228,204,25)" fg:x="267" fg:w="2"/><text x="29.3033%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.22%)</title><rect x="29.0533%" y="821" width="0.2176%" height="15" fill="rgb(207,153,8)" fg:x="267" fg:w="2"/><text x="29.3033%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="29.1621%" y="805" width="0.1088%" height="15" fill="rgb(242,9,16)" fg:x="268" fg:w="1"/><text x="29.4121%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="29.1621%" y="789" width="0.1088%" height="15" fill="rgb(217,211,10)" fg:x="268" fg:w="1"/><text x="29.4121%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.11%)</title><rect x="29.9238%" y="789" width="0.1088%" height="15" fill="rgb(219,228,52)" fg:x="275" fg:w="1"/><text x="30.1738%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.11%)</title><rect x="29.9238%" y="773" width="0.1088%" height="15" fill="rgb(231,92,29)" fg:x="275" fg:w="1"/><text x="30.1738%" y="783.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.11%)</title><rect x="30.0326%" y="789" width="0.1088%" height="15" fill="rgb(232,8,23)" fg:x="276" fg:w="1"/><text x="30.2826%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.54%)</title><rect x="30.1415%" y="789" width="0.5441%" height="15" fill="rgb(216,211,34)" fg:x="277" fg:w="5"/><text x="30.3915%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.54%)</title><rect x="30.1415%" y="773" width="0.5441%" height="15" fill="rgb(236,151,0)" fg:x="277" fg:w="5"/><text x="30.3915%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (14 samples, 1.52%)</title><rect x="29.2709%" y="837" width="1.5234%" height="15" fill="rgb(209,168,3)" fg:x="269" fg:w="14"/><text x="29.5209%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 1.52%)</title><rect x="29.2709%" y="821" width="1.5234%" height="15" fill="rgb(208,129,28)" fg:x="269" fg:w="14"/><text x="29.5209%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 1.52%)</title><rect x="29.2709%" y="805" width="1.5234%" height="15" fill="rgb(229,78,22)" fg:x="269" fg:w="14"/><text x="29.5209%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.11%)</title><rect x="30.6855%" y="789" width="0.1088%" height="15" fill="rgb(228,187,13)" fg:x="282" fg:w="1"/><text x="30.9355%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="30.6855%" y="773" width="0.1088%" height="15" fill="rgb(240,119,24)" fg:x="282" fg:w="1"/><text x="30.9355%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="30.6855%" y="757" width="0.1088%" height="15" fill="rgb(209,194,42)" fg:x="282" fg:w="1"/><text x="30.9355%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.33%)</title><rect x="31.0120%" y="757" width="0.3264%" height="15" fill="rgb(247,200,46)" fg:x="285" fg:w="3"/><text x="31.2620%" y="767.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.33%)</title><rect x="31.0120%" y="741" width="0.3264%" height="15" fill="rgb(218,76,16)" fg:x="285" fg:w="3"/><text x="31.2620%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.33%)</title><rect x="31.0120%" y="725" width="0.3264%" height="15" fill="rgb(225,21,48)" fg:x="285" fg:w="3"/><text x="31.2620%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (2 samples, 0.22%)</title><rect x="31.1208%" y="709" width="0.2176%" height="15" fill="rgb(239,223,50)" fg:x="286" fg:w="2"/><text x="31.3708%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.22%)</title><rect x="31.1208%" y="693" width="0.2176%" height="15" fill="rgb(244,45,21)" fg:x="286" fg:w="2"/><text x="31.3708%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.22%)</title><rect x="31.1208%" y="677" width="0.2176%" height="15" fill="rgb(232,33,43)" fg:x="286" fg:w="2"/><text x="31.3708%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.22%)</title><rect x="31.1208%" y="661" width="0.2176%" height="15" fill="rgb(209,8,3)" fg:x="286" fg:w="2"/><text x="31.3708%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.11%)</title><rect x="31.3384%" y="757" width="0.1088%" height="15" fill="rgb(214,25,53)" fg:x="288" fg:w="1"/><text x="31.5884%" y="767.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.11%)</title><rect x="31.3384%" y="741" width="0.1088%" height="15" fill="rgb(254,186,54)" fg:x="288" fg:w="1"/><text x="31.5884%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.11%)</title><rect x="31.3384%" y="725" width="0.1088%" height="15" fill="rgb(208,174,49)" fg:x="288" fg:w="1"/><text x="31.5884%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="31.3384%" y="709" width="0.1088%" height="15" fill="rgb(233,191,51)" fg:x="288" fg:w="1"/><text x="31.5884%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="31.3384%" y="693" width="0.1088%" height="15" fill="rgb(222,134,10)" fg:x="288" fg:w="1"/><text x="31.5884%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="31.3384%" y="677" width="0.1088%" height="15" fill="rgb(230,226,20)" fg:x="288" fg:w="1"/><text x="31.5884%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (15 samples, 1.63%)</title><rect x="31.4472%" y="757" width="1.6322%" height="15" fill="rgb(251,111,25)" fg:x="289" fg:w="15"/><text x="31.6972%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (15 samples, 1.63%)</title><rect x="31.4472%" y="741" width="1.6322%" height="15" fill="rgb(224,40,46)" fg:x="289" fg:w="15"/><text x="31.6972%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (4 samples, 0.44%)</title><rect x="32.6442%" y="725" width="0.4353%" height="15" fill="rgb(236,108,47)" fg:x="300" fg:w="4"/><text x="32.8942%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.44%)</title><rect x="32.6442%" y="709" width="0.4353%" height="15" fill="rgb(234,93,0)" fg:x="300" fg:w="4"/><text x="32.8942%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (21 samples, 2.29%)</title><rect x="31.0120%" y="821" width="2.2851%" height="15" fill="rgb(224,213,32)" fg:x="285" fg:w="21"/><text x="31.2620%" y="831.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 2.29%)</title><rect x="31.0120%" y="805" width="2.2851%" height="15" fill="rgb(251,11,48)" fg:x="285" fg:w="21"/><text x="31.2620%" y="815.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (21 samples, 2.29%)</title><rect x="31.0120%" y="789" width="2.2851%" height="15" fill="rgb(236,173,5)" fg:x="285" fg:w="21"/><text x="31.2620%" y="799.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (21 samples, 2.29%)</title><rect x="31.0120%" y="773" width="2.2851%" height="15" fill="rgb(230,95,12)" fg:x="285" fg:w="21"/><text x="31.2620%" y="783.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.22%)</title><rect x="33.0794%" y="757" width="0.2176%" height="15" fill="rgb(232,209,1)" fg:x="304" fg:w="2"/><text x="33.3294%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.22%)</title><rect x="33.0794%" y="741" width="0.2176%" height="15" fill="rgb(232,6,1)" fg:x="304" fg:w="2"/><text x="33.3294%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.22%)</title><rect x="33.0794%" y="725" width="0.2176%" height="15" fill="rgb(210,224,50)" fg:x="304" fg:w="2"/><text x="33.3294%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.11%)</title><rect x="33.1882%" y="709" width="0.1088%" height="15" fill="rgb(228,127,35)" fg:x="305" fg:w="1"/><text x="33.4382%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="33.1882%" y="693" width="0.1088%" height="15" fill="rgb(245,102,45)" fg:x="305" fg:w="1"/><text x="33.4382%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="33.1882%" y="677" width="0.1088%" height="15" fill="rgb(214,1,49)" fg:x="305" fg:w="1"/><text x="33.4382%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="33.1882%" y="661" width="0.1088%" height="15" fill="rgb(226,163,40)" fg:x="305" fg:w="1"/><text x="33.4382%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="33.1882%" y="645" width="0.1088%" height="15" fill="rgb(239,212,28)" fg:x="305" fg:w="1"/><text x="33.4382%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.11%)</title><rect x="33.9499%" y="805" width="0.1088%" height="15" fill="rgb(220,20,13)" fg:x="312" fg:w="1"/><text x="34.1999%" y="815.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.22%)</title><rect x="34.0588%" y="805" width="0.2176%" height="15" fill="rgb(210,164,35)" fg:x="313" fg:w="2"/><text x="34.3088%" y="815.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (65 samples, 7.07%)</title><rect x="27.3123%" y="901" width="7.0729%" height="15" fill="rgb(248,109,41)" fg:x="251" fg:w="65"/><text x="27.5623%" y="911.50">&lt;chumsky:..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (54 samples, 5.88%)</title><rect x="28.5092%" y="885" width="5.8760%" height="15" fill="rgb(238,23,50)" fg:x="262" fg:w="54"/><text x="28.7592%" y="895.50">std::co..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (54 samples, 5.88%)</title><rect x="28.5092%" y="869" width="5.8760%" height="15" fill="rgb(211,48,49)" fg:x="262" fg:w="54"/><text x="28.7592%" y="879.50">hashbro..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (54 samples, 5.88%)</title><rect x="28.5092%" y="853" width="5.8760%" height="15" fill="rgb(223,36,21)" fg:x="262" fg:w="54"/><text x="28.7592%" y="863.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (33 samples, 3.59%)</title><rect x="30.7943%" y="837" width="3.5909%" height="15" fill="rgb(207,123,46)" fg:x="283" fg:w="33"/><text x="31.0443%" y="847.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (10 samples, 1.09%)</title><rect x="33.2971%" y="821" width="1.0881%" height="15" fill="rgb(240,218,32)" fg:x="306" fg:w="10"/><text x="33.5471%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.11%)</title><rect x="34.2764%" y="805" width="0.1088%" height="15" fill="rgb(252,5,43)" fg:x="315" fg:w="1"/><text x="34.5264%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="34.2764%" y="789" width="0.1088%" height="15" fill="rgb(252,84,19)" fg:x="315" fg:w="1"/><text x="34.5264%" y="799.50"></text></g><g><title>chumsky::error::merge_alts (104 samples, 11.32%)</title><rect x="23.9391%" y="933" width="11.3166%" height="15" fill="rgb(243,152,39)" fg:x="220" fg:w="104"/><text x="24.1891%" y="943.50">chumsky::error::m..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (75 samples, 8.16%)</title><rect x="27.0947%" y="917" width="8.1610%" height="15" fill="rgb(234,160,15)" fg:x="249" fg:w="75"/><text x="27.3447%" y="927.50">chumsky::er..</text></g><g><title>[libc-2.31.so] (8 samples, 0.87%)</title><rect x="34.3852%" y="901" width="0.8705%" height="15" fill="rgb(237,34,20)" fg:x="316" fg:w="8"/><text x="34.6352%" y="911.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::get_fixed_seeds (1 samples, 0.11%)</title><rect x="35.6910%" y="645" width="0.1088%" height="15" fill="rgb(229,97,13)" fg:x="328" fg:w="1"/><text x="35.9410%" y="655.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (2 samples, 0.22%)</title><rect x="35.6910%" y="677" width="0.2176%" height="15" fill="rgb(234,71,50)" fg:x="328" fg:w="2"/><text x="35.9410%" y="687.50"></text></g><g><title>ahash::random_state::RandomState::new (2 samples, 0.22%)</title><rect x="35.6910%" y="661" width="0.2176%" height="15" fill="rgb(253,155,4)" fg:x="328" fg:w="2"/><text x="35.9410%" y="671.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="35.7998%" y="645" width="0.1088%" height="15" fill="rgb(222,185,37)" fg:x="329" fg:w="1"/><text x="36.0498%" y="655.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="35.7998%" y="629" width="0.1088%" height="15" fill="rgb(251,177,13)" fg:x="329" fg:w="1"/><text x="36.0498%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="35.7998%" y="613" width="0.1088%" height="15" fill="rgb(250,179,40)" fg:x="329" fg:w="1"/><text x="36.0498%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="35.7998%" y="597" width="0.1088%" height="15" fill="rgb(242,44,2)" fg:x="329" fg:w="1"/><text x="36.0498%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="35.9086%" y="517" width="0.1088%" height="15" fill="rgb(216,177,13)" fg:x="330" fg:w="1"/><text x="36.1586%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="35.9086%" y="501" width="0.1088%" height="15" fill="rgb(216,106,43)" fg:x="330" fg:w="1"/><text x="36.1586%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="35.9086%" y="485" width="0.1088%" height="15" fill="rgb(216,183,2)" fg:x="330" fg:w="1"/><text x="36.1586%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="35.9086%" y="629" width="0.2176%" height="15" fill="rgb(249,75,3)" fg:x="330" fg:w="2"/><text x="36.1586%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="35.9086%" y="613" width="0.2176%" height="15" fill="rgb(219,67,39)" fg:x="330" fg:w="2"/><text x="36.1586%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="35.9086%" y="597" width="0.2176%" height="15" fill="rgb(253,228,2)" fg:x="330" fg:w="2"/><text x="36.1586%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="35.9086%" y="581" width="0.2176%" height="15" fill="rgb(235,138,27)" fg:x="330" fg:w="2"/><text x="36.1586%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.22%)</title><rect x="35.9086%" y="565" width="0.2176%" height="15" fill="rgb(236,97,51)" fg:x="330" fg:w="2"/><text x="36.1586%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.22%)</title><rect x="35.9086%" y="549" width="0.2176%" height="15" fill="rgb(240,80,30)" fg:x="330" fg:w="2"/><text x="36.1586%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="35.9086%" y="533" width="0.2176%" height="15" fill="rgb(230,178,19)" fg:x="330" fg:w="2"/><text x="36.1586%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="36.0174%" y="517" width="0.1088%" height="15" fill="rgb(210,190,27)" fg:x="331" fg:w="1"/><text x="36.2674%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.11%)</title><rect x="36.0174%" y="501" width="0.1088%" height="15" fill="rgb(222,107,31)" fg:x="331" fg:w="1"/><text x="36.2674%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.11%)</title><rect x="36.0174%" y="485" width="0.1088%" height="15" fill="rgb(216,127,34)" fg:x="331" fg:w="1"/><text x="36.2674%" y="495.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.11%)</title><rect x="36.0174%" y="469" width="0.1088%" height="15" fill="rgb(234,116,52)" fg:x="331" fg:w="1"/><text x="36.2674%" y="479.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (6 samples, 0.65%)</title><rect x="35.5822%" y="725" width="0.6529%" height="15" fill="rgb(222,124,15)" fg:x="327" fg:w="6"/><text x="35.8322%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.54%)</title><rect x="35.6910%" y="709" width="0.5441%" height="15" fill="rgb(231,179,28)" fg:x="328" fg:w="5"/><text x="35.9410%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.54%)</title><rect x="35.6910%" y="693" width="0.5441%" height="15" fill="rgb(226,93,45)" fg:x="328" fg:w="5"/><text x="35.9410%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="35.9086%" y="677" width="0.3264%" height="15" fill="rgb(215,8,51)" fg:x="330" fg:w="3"/><text x="36.1586%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="35.9086%" y="661" width="0.3264%" height="15" fill="rgb(223,106,5)" fg:x="330" fg:w="3"/><text x="36.1586%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="35.9086%" y="645" width="0.3264%" height="15" fill="rgb(250,191,5)" fg:x="330" fg:w="3"/><text x="36.1586%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="36.1262%" y="629" width="0.1088%" height="15" fill="rgb(242,132,44)" fg:x="332" fg:w="1"/><text x="36.3762%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="36.1262%" y="613" width="0.1088%" height="15" fill="rgb(251,152,29)" fg:x="332" fg:w="1"/><text x="36.3762%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="36.1262%" y="597" width="0.1088%" height="15" fill="rgb(218,179,5)" fg:x="332" fg:w="1"/><text x="36.3762%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="36.1262%" y="581" width="0.1088%" height="15" fill="rgb(227,67,19)" fg:x="332" fg:w="1"/><text x="36.3762%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="36.1262%" y="565" width="0.1088%" height="15" fill="rgb(233,119,31)" fg:x="332" fg:w="1"/><text x="36.3762%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="36.1262%" y="549" width="0.1088%" height="15" fill="rgb(241,120,22)" fg:x="332" fg:w="1"/><text x="36.3762%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="36.1262%" y="533" width="0.1088%" height="15" fill="rgb(224,102,30)" fg:x="332" fg:w="1"/><text x="36.3762%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="36.1262%" y="517" width="0.1088%" height="15" fill="rgb(210,164,37)" fg:x="332" fg:w="1"/><text x="36.3762%" y="527.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="36.1262%" y="501" width="0.1088%" height="15" fill="rgb(226,191,16)" fg:x="332" fg:w="1"/><text x="36.3762%" y="511.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="36.1262%" y="485" width="0.1088%" height="15" fill="rgb(214,40,45)" fg:x="332" fg:w="1"/><text x="36.3762%" y="495.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (3 samples, 0.33%)</title><rect x="36.2350%" y="725" width="0.3264%" height="15" fill="rgb(244,29,26)" fg:x="333" fg:w="3"/><text x="36.4850%" y="735.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="36.2350%" y="709" width="0.3264%" height="15" fill="rgb(216,16,5)" fg:x="333" fg:w="3"/><text x="36.4850%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (15 samples, 1.63%)</title><rect x="35.2557%" y="853" width="1.6322%" height="15" fill="rgb(249,76,35)" fg:x="324" fg:w="15"/><text x="35.5057%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (15 samples, 1.63%)</title><rect x="35.2557%" y="837" width="1.6322%" height="15" fill="rgb(207,11,44)" fg:x="324" fg:w="15"/><text x="35.5057%" y="847.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (15 samples, 1.63%)</title><rect x="35.2557%" y="821" width="1.6322%" height="15" fill="rgb(228,190,49)" fg:x="324" fg:w="15"/><text x="35.5057%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (15 samples, 1.63%)</title><rect x="35.2557%" y="805" width="1.6322%" height="15" fill="rgb(214,173,12)" fg:x="324" fg:w="15"/><text x="35.5057%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (15 samples, 1.63%)</title><rect x="35.2557%" y="789" width="1.6322%" height="15" fill="rgb(218,26,35)" fg:x="324" fg:w="15"/><text x="35.5057%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (13 samples, 1.41%)</title><rect x="35.4733%" y="773" width="1.4146%" height="15" fill="rgb(220,200,19)" fg:x="326" fg:w="13"/><text x="35.7233%" y="783.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (13 samples, 1.41%)</title><rect x="35.4733%" y="757" width="1.4146%" height="15" fill="rgb(239,95,49)" fg:x="326" fg:w="13"/><text x="35.7233%" y="767.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="35.5822%" y="741" width="1.3058%" height="15" fill="rgb(235,85,53)" fg:x="327" fg:w="12"/><text x="35.8322%" y="751.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (3 samples, 0.33%)</title><rect x="36.5615%" y="725" width="0.3264%" height="15" fill="rgb(233,133,31)" fg:x="336" fg:w="3"/><text x="36.8115%" y="735.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (3 samples, 0.33%)</title><rect x="36.5615%" y="709" width="0.3264%" height="15" fill="rgb(218,25,20)" fg:x="336" fg:w="3"/><text x="36.8115%" y="719.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="36.5615%" y="693" width="0.3264%" height="15" fill="rgb(252,210,38)" fg:x="336" fg:w="3"/><text x="36.8115%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="36.5615%" y="677" width="0.3264%" height="15" fill="rgb(242,134,21)" fg:x="336" fg:w="3"/><text x="36.8115%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.33%)</title><rect x="36.5615%" y="661" width="0.3264%" height="15" fill="rgb(213,28,48)" fg:x="336" fg:w="3"/><text x="36.8115%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.22%)</title><rect x="36.6703%" y="645" width="0.2176%" height="15" fill="rgb(250,196,2)" fg:x="337" fg:w="2"/><text x="36.9203%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="629" width="0.2176%" height="15" fill="rgb(227,5,17)" fg:x="337" fg:w="2"/><text x="36.9203%" y="639.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="613" width="0.2176%" height="15" fill="rgb(221,226,24)" fg:x="337" fg:w="2"/><text x="36.9203%" y="623.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="597" width="0.2176%" height="15" fill="rgb(211,5,48)" fg:x="337" fg:w="2"/><text x="36.9203%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="581" width="0.2176%" height="15" fill="rgb(219,150,6)" fg:x="337" fg:w="2"/><text x="36.9203%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="565" width="0.2176%" height="15" fill="rgb(251,46,16)" fg:x="337" fg:w="2"/><text x="36.9203%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="549" width="0.2176%" height="15" fill="rgb(220,204,40)" fg:x="337" fg:w="2"/><text x="36.9203%" y="559.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="533" width="0.2176%" height="15" fill="rgb(211,85,2)" fg:x="337" fg:w="2"/><text x="36.9203%" y="543.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.22%)</title><rect x="36.6703%" y="517" width="0.2176%" height="15" fill="rgb(229,17,7)" fg:x="337" fg:w="2"/><text x="36.9203%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="36.6703%" y="501" width="0.2176%" height="15" fill="rgb(239,72,28)" fg:x="337" fg:w="2"/><text x="36.9203%" y="511.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.11%)</title><rect x="37.1055%" y="741" width="0.1088%" height="15" fill="rgb(230,47,54)" fg:x="341" fg:w="1"/><text x="37.3555%" y="751.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="37.2144%" y="741" width="0.1088%" height="15" fill="rgb(214,50,8)" fg:x="342" fg:w="1"/><text x="37.4644%" y="751.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="37.2144%" y="725" width="0.1088%" height="15" fill="rgb(216,198,43)" fg:x="342" fg:w="1"/><text x="37.4644%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="37.2144%" y="709" width="0.1088%" height="15" fill="rgb(234,20,35)" fg:x="342" fg:w="1"/><text x="37.4644%" y="719.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="37.2144%" y="693" width="0.1088%" height="15" fill="rgb(254,45,19)" fg:x="342" fg:w="1"/><text x="37.4644%" y="703.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="37.2144%" y="677" width="0.1088%" height="15" fill="rgb(219,14,44)" fg:x="342" fg:w="1"/><text x="37.4644%" y="687.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (3 samples, 0.33%)</title><rect x="37.1055%" y="773" width="0.3264%" height="15" fill="rgb(217,220,26)" fg:x="341" fg:w="3"/><text x="37.3555%" y="783.50"></text></g><g><title>ahash::random_state::RandomState::new (3 samples, 0.33%)</title><rect x="37.1055%" y="757" width="0.3264%" height="15" fill="rgb(213,158,28)" fg:x="341" fg:w="3"/><text x="37.3555%" y="767.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.11%)</title><rect x="37.3232%" y="741" width="0.1088%" height="15" fill="rgb(252,51,52)" fg:x="343" fg:w="1"/><text x="37.5732%" y="751.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="37.3232%" y="725" width="0.1088%" height="15" fill="rgb(246,89,16)" fg:x="343" fg:w="1"/><text x="37.5732%" y="735.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.11%)</title><rect x="37.3232%" y="709" width="0.1088%" height="15" fill="rgb(216,158,49)" fg:x="343" fg:w="1"/><text x="37.5732%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.11%)</title><rect x="37.3232%" y="693" width="0.1088%" height="15" fill="rgb(236,107,19)" fg:x="343" fg:w="1"/><text x="37.5732%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.11%)</title><rect x="37.3232%" y="677" width="0.1088%" height="15" fill="rgb(228,185,30)" fg:x="343" fg:w="1"/><text x="37.5732%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.22%)</title><rect x="37.5408%" y="581" width="0.2176%" height="15" fill="rgb(246,134,8)" fg:x="345" fg:w="2"/><text x="37.7908%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.22%)</title><rect x="37.5408%" y="565" width="0.2176%" height="15" fill="rgb(214,143,50)" fg:x="345" fg:w="2"/><text x="37.7908%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.33%)</title><rect x="37.5408%" y="613" width="0.3264%" height="15" fill="rgb(228,75,8)" fg:x="345" fg:w="3"/><text x="37.7908%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.33%)</title><rect x="37.5408%" y="597" width="0.3264%" height="15" fill="rgb(207,175,4)" fg:x="345" fg:w="3"/><text x="37.7908%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="37.7584%" y="581" width="0.1088%" height="15" fill="rgb(205,108,24)" fg:x="347" fg:w="1"/><text x="38.0084%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="37.7584%" y="565" width="0.1088%" height="15" fill="rgb(244,120,49)" fg:x="347" fg:w="1"/><text x="38.0084%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.11%)</title><rect x="37.7584%" y="549" width="0.1088%" height="15" fill="rgb(223,47,38)" fg:x="347" fg:w="1"/><text x="38.0084%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.11%)</title><rect x="37.7584%" y="533" width="0.1088%" height="15" fill="rgb(229,179,11)" fg:x="347" fg:w="1"/><text x="38.0084%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.11%)</title><rect x="37.7584%" y="517" width="0.1088%" height="15" fill="rgb(231,122,1)" fg:x="347" fg:w="1"/><text x="38.0084%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="37.7584%" y="501" width="0.1088%" height="15" fill="rgb(245,119,9)" fg:x="347" fg:w="1"/><text x="38.0084%" y="511.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="37.7584%" y="485" width="0.1088%" height="15" fill="rgb(241,163,25)" fg:x="347" fg:w="1"/><text x="38.0084%" y="495.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="37.7584%" y="469" width="0.1088%" height="15" fill="rgb(217,214,3)" fg:x="347" fg:w="1"/><text x="38.0084%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.76%)</title><rect x="37.4320%" y="725" width="0.7617%" height="15" fill="rgb(240,86,28)" fg:x="344" fg:w="7"/><text x="37.6820%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.76%)</title><rect x="37.4320%" y="709" width="0.7617%" height="15" fill="rgb(215,47,9)" fg:x="344" fg:w="7"/><text x="37.6820%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.76%)</title><rect x="37.4320%" y="693" width="0.7617%" height="15" fill="rgb(252,25,45)" fg:x="344" fg:w="7"/><text x="37.6820%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.76%)</title><rect x="37.4320%" y="677" width="0.7617%" height="15" fill="rgb(251,164,9)" fg:x="344" fg:w="7"/><text x="37.6820%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.76%)</title><rect x="37.4320%" y="661" width="0.7617%" height="15" fill="rgb(233,194,0)" fg:x="344" fg:w="7"/><text x="37.6820%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (7 samples, 0.76%)</title><rect x="37.4320%" y="645" width="0.7617%" height="15" fill="rgb(249,111,24)" fg:x="344" fg:w="7"/><text x="37.6820%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.76%)</title><rect x="37.4320%" y="629" width="0.7617%" height="15" fill="rgb(250,223,3)" fg:x="344" fg:w="7"/><text x="37.6820%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.33%)</title><rect x="37.8672%" y="613" width="0.3264%" height="15" fill="rgb(236,178,37)" fg:x="348" fg:w="3"/><text x="38.1172%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.33%)</title><rect x="37.8672%" y="597" width="0.3264%" height="15" fill="rgb(241,158,50)" fg:x="348" fg:w="3"/><text x="38.1172%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3 samples, 0.33%)</title><rect x="37.8672%" y="581" width="0.3264%" height="15" fill="rgb(213,121,41)" fg:x="348" fg:w="3"/><text x="38.1172%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.22%)</title><rect x="37.9761%" y="565" width="0.2176%" height="15" fill="rgb(240,92,3)" fg:x="349" fg:w="2"/><text x="38.2261%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.22%)</title><rect x="37.9761%" y="549" width="0.2176%" height="15" fill="rgb(205,123,3)" fg:x="349" fg:w="2"/><text x="38.2261%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.87%)</title><rect x="37.4320%" y="773" width="0.8705%" height="15" fill="rgb(205,97,47)" fg:x="344" fg:w="8"/><text x="37.6820%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.87%)</title><rect x="37.4320%" y="757" width="0.8705%" height="15" fill="rgb(247,152,14)" fg:x="344" fg:w="8"/><text x="37.6820%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (8 samples, 0.87%)</title><rect x="37.4320%" y="741" width="0.8705%" height="15" fill="rgb(248,195,53)" fg:x="344" fg:w="8"/><text x="37.6820%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="38.1937%" y="725" width="0.1088%" height="15" fill="rgb(226,201,16)" fg:x="351" fg:w="1"/><text x="38.4437%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="38.1937%" y="709" width="0.1088%" height="15" fill="rgb(205,98,0)" fg:x="351" fg:w="1"/><text x="38.4437%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="38.1937%" y="693" width="0.1088%" height="15" fill="rgb(214,191,48)" fg:x="351" fg:w="1"/><text x="38.4437%" y="703.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (14 samples, 1.52%)</title><rect x="36.8879%" y="821" width="1.5234%" height="15" fill="rgb(237,112,39)" fg:x="339" fg:w="14"/><text x="37.1379%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 1.31%)</title><rect x="37.1055%" y="805" width="1.3058%" height="15" fill="rgb(247,203,27)" fg:x="341" fg:w="12"/><text x="37.3555%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 1.31%)</title><rect x="37.1055%" y="789" width="1.3058%" height="15" fill="rgb(235,124,28)" fg:x="341" fg:w="12"/><text x="37.3555%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="38.3025%" y="773" width="0.1088%" height="15" fill="rgb(208,207,46)" fg:x="352" fg:w="1"/><text x="38.5525%" y="783.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (16 samples, 1.74%)</title><rect x="38.4113%" y="821" width="1.7410%" height="15" fill="rgb(234,176,4)" fg:x="353" fg:w="16"/><text x="38.6613%" y="831.50"></text></g><g><title>[libc-2.31.so] (15 samples, 1.63%)</title><rect x="38.5201%" y="805" width="1.6322%" height="15" fill="rgb(230,133,28)" fg:x="354" fg:w="15"/><text x="38.7701%" y="815.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (49 samples, 5.33%)</title><rect x="35.2557%" y="885" width="5.3319%" height="15" fill="rgb(211,137,40)" fg:x="324" fg:w="49"/><text x="35.5057%" y="895.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (49 samples, 5.33%)</title><rect x="35.2557%" y="869" width="5.3319%" height="15" fill="rgb(254,35,13)" fg:x="324" fg:w="49"/><text x="35.5057%" y="879.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (34 samples, 3.70%)</title><rect x="36.8879%" y="853" width="3.6997%" height="15" fill="rgb(225,49,51)" fg:x="339" fg:w="34"/><text x="37.1379%" y="863.50">&lt;chu..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (34 samples, 3.70%)</title><rect x="36.8879%" y="837" width="3.6997%" height="15" fill="rgb(251,10,15)" fg:x="339" fg:w="34"/><text x="37.1379%" y="847.50">&lt;chu..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (4 samples, 0.44%)</title><rect x="40.1523%" y="821" width="0.4353%" height="15" fill="rgb(228,207,15)" fg:x="369" fg:w="4"/><text x="40.4023%" y="831.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (3 samples, 0.33%)</title><rect x="40.2612%" y="805" width="0.3264%" height="15" fill="rgb(241,99,19)" fg:x="370" fg:w="3"/><text x="40.5112%" y="815.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="40.2612%" y="789" width="0.3264%" height="15" fill="rgb(207,104,49)" fg:x="370" fg:w="3"/><text x="40.5112%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="40.2612%" y="773" width="0.3264%" height="15" fill="rgb(234,99,18)" fg:x="370" fg:w="3"/><text x="40.5112%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.33%)</title><rect x="40.2612%" y="757" width="0.3264%" height="15" fill="rgb(213,191,49)" fg:x="370" fg:w="3"/><text x="40.5112%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.33%)</title><rect x="40.2612%" y="741" width="0.3264%" height="15" fill="rgb(210,226,19)" fg:x="370" fg:w="3"/><text x="40.5112%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="40.2612%" y="725" width="0.3264%" height="15" fill="rgb(229,97,18)" fg:x="370" fg:w="3"/><text x="40.5112%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="40.4788%" y="709" width="0.1088%" height="15" fill="rgb(211,167,15)" fg:x="372" fg:w="1"/><text x="40.7288%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="40.4788%" y="693" width="0.1088%" height="15" fill="rgb(210,169,34)" fg:x="372" fg:w="1"/><text x="40.7288%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="40.4788%" y="677" width="0.1088%" height="15" fill="rgb(241,121,31)" fg:x="372" fg:w="1"/><text x="40.7288%" y="687.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (157 samples, 17.08%)</title><rect x="23.7214%" y="965" width="17.0838%" height="15" fill="rgb(232,40,11)" fg:x="218" fg:w="157"/><text x="23.9714%" y="975.50">&lt;chumsky::primitive::Choic..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (157 samples, 17.08%)</title><rect x="23.7214%" y="949" width="17.0838%" height="15" fill="rgb(205,86,26)" fg:x="218" fg:w="157"/><text x="23.9714%" y="959.50">&lt;chumsky::primitive::Choic..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (51 samples, 5.55%)</title><rect x="35.2557%" y="933" width="5.5495%" height="15" fill="rgb(231,126,28)" fg:x="324" fg:w="51"/><text x="35.5057%" y="943.50">chumsky..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (51 samples, 5.55%)</title><rect x="35.2557%" y="917" width="5.5495%" height="15" fill="rgb(219,221,18)" fg:x="324" fg:w="51"/><text x="35.5057%" y="927.50">chumsky..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (51 samples, 5.55%)</title><rect x="35.2557%" y="901" width="5.5495%" height="15" fill="rgb(211,40,0)" fg:x="324" fg:w="51"/><text x="35.5057%" y="911.50">chumsky..</text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="40.5876%" y="885" width="0.2176%" height="15" fill="rgb(239,85,43)" fg:x="373" fg:w="2"/><text x="40.8376%" y="895.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="40.8052%" y="853" width="0.1088%" height="15" fill="rgb(231,55,21)" fg:x="375" fg:w="1"/><text x="41.0552%" y="863.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (2 samples, 0.22%)</title><rect x="40.8052%" y="885" width="0.2176%" height="15" fill="rgb(225,184,43)" fg:x="375" fg:w="2"/><text x="41.0552%" y="895.50"></text></g><g><title>ahash::random_state::RandomState::new (2 samples, 0.22%)</title><rect x="40.8052%" y="869" width="0.2176%" height="15" fill="rgb(251,158,41)" fg:x="375" fg:w="2"/><text x="41.0552%" y="879.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.11%)</title><rect x="40.9140%" y="853" width="0.1088%" height="15" fill="rgb(234,159,37)" fg:x="376" fg:w="1"/><text x="41.1640%" y="863.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="40.9140%" y="837" width="0.1088%" height="15" fill="rgb(216,204,22)" fg:x="376" fg:w="1"/><text x="41.1640%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.65%)</title><rect x="41.1317%" y="693" width="0.6529%" height="15" fill="rgb(214,17,3)" fg:x="378" fg:w="6"/><text x="41.3817%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.65%)</title><rect x="41.1317%" y="677" width="0.6529%" height="15" fill="rgb(212,111,17)" fg:x="378" fg:w="6"/><text x="41.3817%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.65%)</title><rect x="41.1317%" y="661" width="0.6529%" height="15" fill="rgb(221,157,24)" fg:x="378" fg:w="6"/><text x="41.3817%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="41.6757%" y="645" width="0.1088%" height="15" fill="rgb(252,16,13)" fg:x="383" fg:w="1"/><text x="41.9257%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="41.6757%" y="629" width="0.1088%" height="15" fill="rgb(221,62,2)" fg:x="383" fg:w="1"/><text x="41.9257%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (1 samples, 0.11%)</title><rect x="41.8934%" y="613" width="0.1088%" height="15" fill="rgb(247,87,22)" fg:x="385" fg:w="1"/><text x="42.1434%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (11 samples, 1.20%)</title><rect x="42.0022%" y="613" width="1.1970%" height="15" fill="rgb(215,73,9)" fg:x="386" fg:w="11"/><text x="42.2522%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (11 samples, 1.20%)</title><rect x="42.0022%" y="597" width="1.1970%" height="15" fill="rgb(207,175,33)" fg:x="386" fg:w="11"/><text x="42.2522%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.54%)</title><rect x="42.6551%" y="581" width="0.5441%" height="15" fill="rgb(243,129,54)" fg:x="392" fg:w="5"/><text x="42.9051%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.54%)</title><rect x="42.6551%" y="565" width="0.5441%" height="15" fill="rgb(227,119,45)" fg:x="392" fg:w="5"/><text x="42.9051%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="43.1991%" y="581" width="0.1088%" height="15" fill="rgb(205,109,36)" fg:x="397" fg:w="1"/><text x="43.4491%" y="591.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.11%)</title><rect x="43.1991%" y="565" width="0.1088%" height="15" fill="rgb(205,6,39)" fg:x="397" fg:w="1"/><text x="43.4491%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="43.1991%" y="549" width="0.1088%" height="15" fill="rgb(221,32,16)" fg:x="397" fg:w="1"/><text x="43.4491%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="43.1991%" y="533" width="0.1088%" height="15" fill="rgb(228,144,50)" fg:x="397" fg:w="1"/><text x="43.4491%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="43.1991%" y="517" width="0.1088%" height="15" fill="rgb(229,201,53)" fg:x="397" fg:w="1"/><text x="43.4491%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="43.1991%" y="501" width="0.1088%" height="15" fill="rgb(249,153,27)" fg:x="397" fg:w="1"/><text x="43.4491%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15 samples, 1.63%)</title><rect x="41.8934%" y="677" width="1.6322%" height="15" fill="rgb(227,106,25)" fg:x="385" fg:w="15"/><text x="42.1434%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 1.63%)</title><rect x="41.8934%" y="661" width="1.6322%" height="15" fill="rgb(230,65,29)" fg:x="385" fg:w="15"/><text x="42.1434%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (15 samples, 1.63%)</title><rect x="41.8934%" y="645" width="1.6322%" height="15" fill="rgb(221,57,46)" fg:x="385" fg:w="15"/><text x="42.1434%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (15 samples, 1.63%)</title><rect x="41.8934%" y="629" width="1.6322%" height="15" fill="rgb(229,161,17)" fg:x="385" fg:w="15"/><text x="42.1434%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.33%)</title><rect x="43.1991%" y="613" width="0.3264%" height="15" fill="rgb(222,213,11)" fg:x="397" fg:w="3"/><text x="43.4491%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.33%)</title><rect x="43.1991%" y="597" width="0.3264%" height="15" fill="rgb(235,35,13)" fg:x="397" fg:w="3"/><text x="43.4491%" y="607.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (2 samples, 0.22%)</title><rect x="43.3079%" y="581" width="0.2176%" height="15" fill="rgb(233,158,34)" fg:x="398" fg:w="2"/><text x="43.5579%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::next_power_of_two (1 samples, 0.11%)</title><rect x="43.4168%" y="565" width="0.1088%" height="15" fill="rgb(215,151,48)" fg:x="399" fg:w="1"/><text x="43.6668%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::one_less_than_next_power_of_two (1 samples, 0.11%)</title><rect x="43.4168%" y="549" width="0.1088%" height="15" fill="rgb(229,84,14)" fg:x="399" fg:w="1"/><text x="43.6668%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.11%)</title><rect x="43.6344%" y="661" width="0.1088%" height="15" fill="rgb(229,68,14)" fg:x="401" fg:w="1"/><text x="43.8844%" y="671.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (204 samples, 22.20%)</title><rect x="21.6540%" y="981" width="22.1980%" height="15" fill="rgb(243,106,26)" fg:x="199" fg:w="204"/><text x="21.9040%" y="991.50">&lt;chumsky::debug::Silent as chumsky:..</text></g><g><title>&lt;chumsky::primitive::OneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner_silent (28 samples, 3.05%)</title><rect x="40.8052%" y="965" width="3.0468%" height="15" fill="rgb(206,45,38)" fg:x="375" fg:w="28"/><text x="41.0552%" y="975.50">&lt;ch..</text></g><g><title>&lt;chumsky::primitive::OneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner (28 samples, 3.05%)</title><rect x="40.8052%" y="949" width="3.0468%" height="15" fill="rgb(226,6,15)" fg:x="375" fg:w="28"/><text x="41.0552%" y="959.50">&lt;ch..</text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (28 samples, 3.05%)</title><rect x="40.8052%" y="933" width="3.0468%" height="15" fill="rgb(232,22,54)" fg:x="375" fg:w="28"/><text x="41.0552%" y="943.50">&lt;ch..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 3.05%)</title><rect x="40.8052%" y="917" width="3.0468%" height="15" fill="rgb(229,222,32)" fg:x="375" fg:w="28"/><text x="41.0552%" y="927.50">cor..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 3.05%)</title><rect x="40.8052%" y="901" width="3.0468%" height="15" fill="rgb(228,62,29)" fg:x="375" fg:w="28"/><text x="41.0552%" y="911.50">&lt;st..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26 samples, 2.83%)</title><rect x="41.0229%" y="885" width="2.8292%" height="15" fill="rgb(251,103,34)" fg:x="377" fg:w="26"/><text x="41.2729%" y="895.50">&lt;s..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (26 samples, 2.83%)</title><rect x="41.0229%" y="869" width="2.8292%" height="15" fill="rgb(233,12,30)" fg:x="377" fg:w="26"/><text x="41.2729%" y="879.50">&lt;h..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (26 samples, 2.83%)</title><rect x="41.0229%" y="853" width="2.8292%" height="15" fill="rgb(238,52,0)" fg:x="377" fg:w="26"/><text x="41.2729%" y="863.50">&lt;h..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 2.83%)</title><rect x="41.0229%" y="837" width="2.8292%" height="15" fill="rgb(223,98,5)" fg:x="377" fg:w="26"/><text x="41.2729%" y="847.50">co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 2.83%)</title><rect x="41.0229%" y="821" width="2.8292%" height="15" fill="rgb(228,75,37)" fg:x="377" fg:w="26"/><text x="41.2729%" y="831.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 2.83%)</title><rect x="41.0229%" y="805" width="2.8292%" height="15" fill="rgb(205,115,49)" fg:x="377" fg:w="26"/><text x="41.2729%" y="815.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 2.83%)</title><rect x="41.0229%" y="789" width="2.8292%" height="15" fill="rgb(250,154,43)" fg:x="377" fg:w="26"/><text x="41.2729%" y="799.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 2.83%)</title><rect x="41.0229%" y="773" width="2.8292%" height="15" fill="rgb(226,43,29)" fg:x="377" fg:w="26"/><text x="41.2729%" y="783.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 2.83%)</title><rect x="41.0229%" y="757" width="2.8292%" height="15" fill="rgb(249,228,39)" fg:x="377" fg:w="26"/><text x="41.2729%" y="767.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 2.83%)</title><rect x="41.0229%" y="741" width="2.8292%" height="15" fill="rgb(216,79,43)" fg:x="377" fg:w="26"/><text x="41.2729%" y="751.50">co..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (26 samples, 2.83%)</title><rect x="41.0229%" y="725" width="2.8292%" height="15" fill="rgb(228,95,12)" fg:x="377" fg:w="26"/><text x="41.2729%" y="735.50">&lt;h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (26 samples, 2.83%)</title><rect x="41.0229%" y="709" width="2.8292%" height="15" fill="rgb(249,221,15)" fg:x="377" fg:w="26"/><text x="41.2729%" y="719.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 2.07%)</title><rect x="41.7845%" y="693" width="2.0675%" height="15" fill="rgb(233,34,13)" fg:x="384" fg:w="19"/><text x="42.0345%" y="703.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.33%)</title><rect x="43.5256%" y="677" width="0.3264%" height="15" fill="rgb(214,103,39)" fg:x="400" fg:w="3"/><text x="43.7756%" y="687.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.11%)</title><rect x="43.7432%" y="661" width="0.1088%" height="15" fill="rgb(251,126,39)" fg:x="402" fg:w="1"/><text x="43.9932%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (206 samples, 22.42%)</title><rect x="21.5452%" y="1013" width="22.4157%" height="15" fill="rgb(214,216,36)" fg:x="198" fg:w="206"/><text x="21.7952%" y="1023.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (206 samples, 22.42%)</title><rect x="21.5452%" y="997" width="22.4157%" height="15" fill="rgb(220,221,8)" fg:x="198" fg:w="206"/><text x="21.7952%" y="1007.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="43.8520%" y="981" width="0.1088%" height="15" fill="rgb(240,216,3)" fg:x="403" fg:w="1"/><text x="44.1020%" y="991.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (1 samples, 0.11%)</title><rect x="44.7225%" y="709" width="0.1088%" height="15" fill="rgb(232,218,17)" fg:x="411" fg:w="1"/><text x="44.9725%" y="719.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="44.7225%" y="693" width="0.1088%" height="15" fill="rgb(229,163,45)" fg:x="411" fg:w="1"/><text x="44.9725%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (2 samples, 0.22%)</title><rect x="44.7225%" y="757" width="0.2176%" height="15" fill="rgb(231,110,42)" fg:x="411" fg:w="2"/><text x="44.9725%" y="767.50"></text></g><g><title>&lt;chumsky::primitive::Filter&lt;F,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner_silent (2 samples, 0.22%)</title><rect x="44.7225%" y="741" width="0.2176%" height="15" fill="rgb(208,170,48)" fg:x="411" fg:w="2"/><text x="44.9725%" y="751.50"></text></g><g><title>&lt;chumsky::primitive::Filter&lt;F,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner (2 samples, 0.22%)</title><rect x="44.7225%" y="725" width="0.2176%" height="15" fill="rgb(239,116,25)" fg:x="411" fg:w="2"/><text x="44.9725%" y="735.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="44.8313%" y="709" width="0.1088%" height="15" fill="rgb(219,200,50)" fg:x="412" fg:w="1"/><text x="45.0813%" y="719.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="44.8313%" y="693" width="0.1088%" height="15" fill="rgb(245,200,0)" fg:x="412" fg:w="1"/><text x="45.0813%" y="703.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="44.8313%" y="677" width="0.1088%" height="15" fill="rgb(245,119,33)" fg:x="412" fg:w="1"/><text x="45.0813%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="44.8313%" y="661" width="0.1088%" height="15" fill="rgb(231,125,12)" fg:x="412" fg:w="1"/><text x="45.0813%" y="671.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="44.9402%" y="757" width="0.1088%" height="15" fill="rgb(216,96,41)" fg:x="413" fg:w="1"/><text x="45.1902%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (12 samples, 1.31%)</title><rect x="43.9608%" y="773" width="1.3058%" height="15" fill="rgb(248,43,45)" fg:x="404" fg:w="12"/><text x="44.2108%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.22%)</title><rect x="45.0490%" y="757" width="0.2176%" height="15" fill="rgb(217,222,7)" fg:x="414" fg:w="2"/><text x="45.2990%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="45.1578%" y="741" width="0.1088%" height="15" fill="rgb(233,28,6)" fg:x="415" fg:w="1"/><text x="45.4078%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="45.1578%" y="725" width="0.1088%" height="15" fill="rgb(231,218,15)" fg:x="415" fg:w="1"/><text x="45.4078%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="45.1578%" y="709" width="0.1088%" height="15" fill="rgb(226,171,48)" fg:x="415" fg:w="1"/><text x="45.4078%" y="719.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (13 samples, 1.41%)</title><rect x="43.9608%" y="789" width="1.4146%" height="15" fill="rgb(235,201,9)" fg:x="404" fg:w="13"/><text x="44.2108%" y="799.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="45.2666%" y="773" width="0.1088%" height="15" fill="rgb(217,80,15)" fg:x="416" fg:w="1"/><text x="45.5166%" y="783.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (14 samples, 1.52%)</title><rect x="43.9608%" y="885" width="1.5234%" height="15" fill="rgb(219,152,8)" fg:x="404" fg:w="14"/><text x="44.2108%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (14 samples, 1.52%)</title><rect x="43.9608%" y="869" width="1.5234%" height="15" fill="rgb(243,107,38)" fg:x="404" fg:w="14"/><text x="44.2108%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (14 samples, 1.52%)</title><rect x="43.9608%" y="853" width="1.5234%" height="15" fill="rgb(231,17,5)" fg:x="404" fg:w="14"/><text x="44.2108%" y="863.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (14 samples, 1.52%)</title><rect x="43.9608%" y="837" width="1.5234%" height="15" fill="rgb(209,25,54)" fg:x="404" fg:w="14"/><text x="44.2108%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (14 samples, 1.52%)</title><rect x="43.9608%" y="821" width="1.5234%" height="15" fill="rgb(219,0,2)" fg:x="404" fg:w="14"/><text x="44.2108%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (14 samples, 1.52%)</title><rect x="43.9608%" y="805" width="1.5234%" height="15" fill="rgb(246,9,5)" fg:x="404" fg:w="14"/><text x="44.2108%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.11%)</title><rect x="45.3754%" y="789" width="0.1088%" height="15" fill="rgb(226,159,4)" fg:x="417" fg:w="1"/><text x="45.6254%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as chumsky::chain::Chain&lt;T&gt;&gt;::append_to (1 samples, 0.11%)</title><rect x="45.4842%" y="805" width="0.1088%" height="15" fill="rgb(219,175,34)" fg:x="418" fg:w="1"/><text x="45.7342%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (1 samples, 0.11%)</title><rect x="45.4842%" y="789" width="0.1088%" height="15" fill="rgb(236,10,46)" fg:x="418" fg:w="1"/><text x="45.7342%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="45.4842%" y="773" width="0.1088%" height="15" fill="rgb(240,211,16)" fg:x="418" fg:w="1"/><text x="45.7342%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.11%)</title><rect x="45.4842%" y="757" width="0.1088%" height="15" fill="rgb(205,3,43)" fg:x="418" fg:w="1"/><text x="45.7342%" y="767.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="45.4842%" y="741" width="0.1088%" height="15" fill="rgb(245,7,22)" fg:x="418" fg:w="1"/><text x="45.7342%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (16 samples, 1.74%)</title><rect x="43.9608%" y="933" width="1.7410%" height="15" fill="rgb(239,132,32)" fg:x="404" fg:w="16"/><text x="44.2108%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (16 samples, 1.74%)</title><rect x="43.9608%" y="917" width="1.7410%" height="15" fill="rgb(228,202,34)" fg:x="404" fg:w="16"/><text x="44.2108%" y="927.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (16 samples, 1.74%)</title><rect x="43.9608%" y="901" width="1.7410%" height="15" fill="rgb(254,200,22)" fg:x="404" fg:w="16"/><text x="44.2108%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.22%)</title><rect x="45.4842%" y="885" width="0.2176%" height="15" fill="rgb(219,10,39)" fg:x="418" fg:w="2"/><text x="45.7342%" y="895.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner::{{closure}} (2 samples, 0.22%)</title><rect x="45.4842%" y="869" width="0.2176%" height="15" fill="rgb(226,210,39)" fg:x="418" fg:w="2"/><text x="45.7342%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.22%)</title><rect x="45.4842%" y="853" width="0.2176%" height="15" fill="rgb(208,219,16)" fg:x="418" fg:w="2"/><text x="45.7342%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.22%)</title><rect x="45.4842%" y="837" width="0.2176%" height="15" fill="rgb(216,158,51)" fg:x="418" fg:w="2"/><text x="45.7342%" y="847.50"></text></g><g><title>chumsky::Parser::chain::{{closure}} (2 samples, 0.22%)</title><rect x="45.4842%" y="821" width="0.2176%" height="15" fill="rgb(233,14,44)" fg:x="418" fg:w="2"/><text x="45.7342%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="45.5930%" y="805" width="0.1088%" height="15" fill="rgb(237,97,39)" fg:x="419" fg:w="1"/><text x="45.8430%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="45.5930%" y="789" width="0.1088%" height="15" fill="rgb(218,198,43)" fg:x="419" fg:w="1"/><text x="45.8430%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="45.5930%" y="773" width="0.1088%" height="15" fill="rgb(231,104,20)" fg:x="419" fg:w="1"/><text x="45.8430%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="45.5930%" y="757" width="0.1088%" height="15" fill="rgb(254,36,13)" fg:x="419" fg:w="1"/><text x="45.8430%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="45.5930%" y="741" width="0.1088%" height="15" fill="rgb(248,14,50)" fg:x="419" fg:w="1"/><text x="45.8430%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="45.5930%" y="725" width="0.1088%" height="15" fill="rgb(217,107,29)" fg:x="419" fg:w="1"/><text x="45.8430%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="45.5930%" y="709" width="0.1088%" height="15" fill="rgb(251,169,33)" fg:x="419" fg:w="1"/><text x="45.8430%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="45.5930%" y="693" width="0.1088%" height="15" fill="rgb(217,108,32)" fg:x="419" fg:w="1"/><text x="45.8430%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="45.7018%" y="741" width="0.1088%" height="15" fill="rgb(219,66,42)" fg:x="420" fg:w="1"/><text x="45.9518%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="45.7018%" y="725" width="0.1088%" height="15" fill="rgb(206,180,7)" fg:x="420" fg:w="1"/><text x="45.9518%" y="735.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (18 samples, 1.96%)</title><rect x="43.9608%" y="981" width="1.9587%" height="15" fill="rgb(208,226,31)" fg:x="404" fg:w="18"/><text x="44.2108%" y="991.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (18 samples, 1.96%)</title><rect x="43.9608%" y="965" width="1.9587%" height="15" fill="rgb(218,26,49)" fg:x="404" fg:w="18"/><text x="44.2108%" y="975.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (18 samples, 1.96%)</title><rect x="43.9608%" y="949" width="1.9587%" height="15" fill="rgb(233,197,48)" fg:x="404" fg:w="18"/><text x="44.2108%" y="959.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.22%)</title><rect x="45.7018%" y="933" width="0.2176%" height="15" fill="rgb(252,181,51)" fg:x="420" fg:w="2"/><text x="45.9518%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner::{{closure}} (2 samples, 0.22%)</title><rect x="45.7018%" y="917" width="0.2176%" height="15" fill="rgb(253,90,19)" fg:x="420" fg:w="2"/><text x="45.9518%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.22%)</title><rect x="45.7018%" y="901" width="0.2176%" height="15" fill="rgb(215,171,30)" fg:x="420" fg:w="2"/><text x="45.9518%" y="911.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.22%)</title><rect x="45.7018%" y="885" width="0.2176%" height="15" fill="rgb(214,222,9)" fg:x="420" fg:w="2"/><text x="45.9518%" y="895.50"></text></g><g><title>chumsky::Parser::collect::{{closure}} (2 samples, 0.22%)</title><rect x="45.7018%" y="869" width="0.2176%" height="15" fill="rgb(223,3,22)" fg:x="420" fg:w="2"/><text x="45.9518%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="45.7018%" y="853" width="0.2176%" height="15" fill="rgb(225,196,46)" fg:x="420" fg:w="2"/><text x="45.9518%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="45.7018%" y="837" width="0.2176%" height="15" fill="rgb(209,110,37)" fg:x="420" fg:w="2"/><text x="45.9518%" y="847.50"></text></g><g><title>alloc::string::String::reserve (2 samples, 0.22%)</title><rect x="45.7018%" y="821" width="0.2176%" height="15" fill="rgb(249,89,12)" fg:x="420" fg:w="2"/><text x="45.9518%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="45.7018%" y="805" width="0.2176%" height="15" fill="rgb(226,27,33)" fg:x="420" fg:w="2"/><text x="45.9518%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.22%)</title><rect x="45.7018%" y="789" width="0.2176%" height="15" fill="rgb(213,82,22)" fg:x="420" fg:w="2"/><text x="45.9518%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.22%)</title><rect x="45.7018%" y="773" width="0.2176%" height="15" fill="rgb(248,140,0)" fg:x="420" fg:w="2"/><text x="45.9518%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.22%)</title><rect x="45.7018%" y="757" width="0.2176%" height="15" fill="rgb(228,106,3)" fg:x="420" fg:w="2"/><text x="45.9518%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.11%)</title><rect x="45.8107%" y="741" width="0.1088%" height="15" fill="rgb(209,23,37)" fg:x="421" fg:w="1"/><text x="46.0607%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.11%)</title><rect x="45.8107%" y="725" width="0.1088%" height="15" fill="rgb(241,93,50)" fg:x="421" fg:w="1"/><text x="46.0607%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (19 samples, 2.07%)</title><rect x="43.9608%" y="1013" width="2.0675%" height="15" fill="rgb(253,46,43)" fg:x="404" fg:w="19"/><text x="44.2108%" y="1023.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (19 samples, 2.07%)</title><rect x="43.9608%" y="997" width="2.0675%" height="15" fill="rgb(226,206,43)" fg:x="404" fg:w="19"/><text x="44.2108%" y="1007.50">&lt;..</text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="45.9195%" y="981" width="0.1088%" height="15" fill="rgb(217,54,7)" fg:x="422" fg:w="1"/><text x="46.1695%" y="991.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="46.1371%" y="837" width="0.1088%" height="15" fill="rgb(223,5,52)" fg:x="424" fg:w="1"/><text x="46.3871%" y="847.50"></text></g><g><title>chumsky::error::merge_alts (5 samples, 0.54%)</title><rect x="46.2459%" y="837" width="0.5441%" height="15" fill="rgb(206,52,46)" fg:x="425" fg:w="5"/><text x="46.4959%" y="847.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (4 samples, 0.44%)</title><rect x="46.3547%" y="821" width="0.4353%" height="15" fill="rgb(253,136,11)" fg:x="426" fg:w="4"/><text x="46.6047%" y="831.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="46.5724%" y="805" width="0.2176%" height="15" fill="rgb(208,106,33)" fg:x="428" fg:w="2"/><text x="46.8224%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="46.0283%" y="965" width="0.8705%" height="15" fill="rgb(206,54,4)" fg:x="423" fg:w="8"/><text x="46.2783%" y="975.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="46.0283%" y="949" width="0.8705%" height="15" fill="rgb(213,3,15)" fg:x="423" fg:w="8"/><text x="46.2783%" y="959.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="46.0283%" y="933" width="0.8705%" height="15" fill="rgb(252,211,39)" fg:x="423" fg:w="8"/><text x="46.2783%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="46.0283%" y="917" width="0.8705%" height="15" fill="rgb(223,6,36)" fg:x="423" fg:w="8"/><text x="46.2783%" y="927.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="46.0283%" y="901" width="0.8705%" height="15" fill="rgb(252,169,45)" fg:x="423" fg:w="8"/><text x="46.2783%" y="911.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="46.0283%" y="885" width="0.8705%" height="15" fill="rgb(212,48,26)" fg:x="423" fg:w="8"/><text x="46.2783%" y="895.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="46.0283%" y="869" width="0.8705%" height="15" fill="rgb(251,102,48)" fg:x="423" fg:w="8"/><text x="46.2783%" y="879.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="46.0283%" y="853" width="0.8705%" height="15" fill="rgb(243,208,16)" fg:x="423" fg:w="8"/><text x="46.2783%" y="863.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (1 samples, 0.11%)</title><rect x="46.7900%" y="837" width="0.1088%" height="15" fill="rgb(219,96,24)" fg:x="430" fg:w="1"/><text x="47.0400%" y="847.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (1 samples, 0.11%)</title><rect x="46.7900%" y="821" width="0.1088%" height="15" fill="rgb(219,33,29)" fg:x="430" fg:w="1"/><text x="47.0400%" y="831.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (1 samples, 0.11%)</title><rect x="46.7900%" y="805" width="0.1088%" height="15" fill="rgb(223,176,5)" fg:x="430" fg:w="1"/><text x="47.0400%" y="815.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (1 samples, 0.11%)</title><rect x="46.7900%" y="789" width="0.1088%" height="15" fill="rgb(228,140,14)" fg:x="430" fg:w="1"/><text x="47.0400%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="46.7900%" y="773" width="0.1088%" height="15" fill="rgb(217,179,31)" fg:x="430" fg:w="1"/><text x="47.0400%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="46.7900%" y="757" width="0.1088%" height="15" fill="rgb(230,9,30)" fg:x="430" fg:w="1"/><text x="47.0400%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::DelimitedBy&lt;A,L,R,U,V&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="46.7900%" y="741" width="0.1088%" height="15" fill="rgb(230,136,20)" fg:x="430" fg:w="1"/><text x="47.0400%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="46.7900%" y="725" width="0.1088%" height="15" fill="rgb(215,210,22)" fg:x="430" fg:w="1"/><text x="47.0400%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="46.7900%" y="709" width="0.1088%" height="15" fill="rgb(218,43,5)" fg:x="430" fg:w="1"/><text x="47.0400%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="46.7900%" y="693" width="0.1088%" height="15" fill="rgb(216,11,5)" fg:x="430" fg:w="1"/><text x="47.0400%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="46.7900%" y="677" width="0.1088%" height="15" fill="rgb(209,82,29)" fg:x="430" fg:w="1"/><text x="47.0400%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="47.1164%" y="837" width="0.1088%" height="15" fill="rgb(244,115,12)" fg:x="433" fg:w="1"/><text x="47.3664%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="47.1164%" y="821" width="0.1088%" height="15" fill="rgb(222,82,18)" fg:x="433" fg:w="1"/><text x="47.3664%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="47.1164%" y="805" width="0.1088%" height="15" fill="rgb(249,227,8)" fg:x="433" fg:w="1"/><text x="47.3664%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="47.1164%" y="789" width="0.1088%" height="15" fill="rgb(253,141,45)" fg:x="433" fg:w="1"/><text x="47.3664%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="47.1164%" y="773" width="0.1088%" height="15" fill="rgb(234,184,4)" fg:x="433" fg:w="1"/><text x="47.3664%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="47.1164%" y="757" width="0.1088%" height="15" fill="rgb(218,194,23)" fg:x="433" fg:w="1"/><text x="47.3664%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="47.1164%" y="741" width="0.1088%" height="15" fill="rgb(235,66,41)" fg:x="433" fg:w="1"/><text x="47.3664%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.11%)</title><rect x="47.1164%" y="725" width="0.1088%" height="15" fill="rgb(245,217,1)" fg:x="433" fg:w="1"/><text x="47.3664%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="47.1164%" y="709" width="0.1088%" height="15" fill="rgb(229,91,1)" fg:x="433" fg:w="1"/><text x="47.3664%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.11%)</title><rect x="47.1164%" y="693" width="0.1088%" height="15" fill="rgb(207,101,30)" fg:x="433" fg:w="1"/><text x="47.3664%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="47.1164%" y="677" width="0.1088%" height="15" fill="rgb(223,82,49)" fg:x="433" fg:w="1"/><text x="47.3664%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="47.1164%" y="661" width="0.1088%" height="15" fill="rgb(218,167,17)" fg:x="433" fg:w="1"/><text x="47.3664%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="47.1164%" y="645" width="0.1088%" height="15" fill="rgb(208,103,14)" fg:x="433" fg:w="1"/><text x="47.3664%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.11%)</title><rect x="47.1164%" y="629" width="0.1088%" height="15" fill="rgb(238,20,8)" fg:x="433" fg:w="1"/><text x="47.3664%" y="639.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.11%)</title><rect x="47.1164%" y="613" width="0.1088%" height="15" fill="rgb(218,80,54)" fg:x="433" fg:w="1"/><text x="47.3664%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.11%)</title><rect x="47.1164%" y="597" width="0.1088%" height="15" fill="rgb(240,144,17)" fg:x="433" fg:w="1"/><text x="47.3664%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="47.1164%" y="581" width="0.1088%" height="15" fill="rgb(245,27,50)" fg:x="433" fg:w="1"/><text x="47.3664%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="47.1164%" y="565" width="0.1088%" height="15" fill="rgb(251,51,7)" fg:x="433" fg:w="1"/><text x="47.3664%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="47.1164%" y="549" width="0.1088%" height="15" fill="rgb(245,217,29)" fg:x="433" fg:w="1"/><text x="47.3664%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.11%)</title><rect x="47.1164%" y="533" width="0.1088%" height="15" fill="rgb(221,176,29)" fg:x="433" fg:w="1"/><text x="47.3664%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="47.1164%" y="885" width="0.2176%" height="15" fill="rgb(212,180,24)" fg:x="433" fg:w="2"/><text x="47.3664%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="47.1164%" y="869" width="0.2176%" height="15" fill="rgb(254,24,2)" fg:x="433" fg:w="2"/><text x="47.3664%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="47.1164%" y="853" width="0.2176%" height="15" fill="rgb(230,100,2)" fg:x="433" fg:w="2"/><text x="47.3664%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="47.2252%" y="837" width="0.1088%" height="15" fill="rgb(219,142,25)" fg:x="434" fg:w="1"/><text x="47.4752%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="47.2252%" y="821" width="0.1088%" height="15" fill="rgb(240,73,43)" fg:x="434" fg:w="1"/><text x="47.4752%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="47.2252%" y="805" width="0.1088%" height="15" fill="rgb(214,114,15)" fg:x="434" fg:w="1"/><text x="47.4752%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="47.2252%" y="789" width="0.1088%" height="15" fill="rgb(207,130,4)" fg:x="434" fg:w="1"/><text x="47.4752%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="47.2252%" y="773" width="0.1088%" height="15" fill="rgb(221,25,40)" fg:x="434" fg:w="1"/><text x="47.4752%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="47.2252%" y="757" width="0.1088%" height="15" fill="rgb(241,184,7)" fg:x="434" fg:w="1"/><text x="47.4752%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="47.2252%" y="741" width="0.1088%" height="15" fill="rgb(235,159,4)" fg:x="434" fg:w="1"/><text x="47.4752%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="47.2252%" y="725" width="0.1088%" height="15" fill="rgb(214,87,48)" fg:x="434" fg:w="1"/><text x="47.4752%" y="735.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.11%)</title><rect x="47.2252%" y="709" width="0.1088%" height="15" fill="rgb(246,198,24)" fg:x="434" fg:w="1"/><text x="47.4752%" y="719.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (5 samples, 0.54%)</title><rect x="46.8988%" y="933" width="0.5441%" height="15" fill="rgb(209,66,40)" fg:x="431" fg:w="5"/><text x="47.1488%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.33%)</title><rect x="47.1164%" y="917" width="0.3264%" height="15" fill="rgb(233,147,39)" fg:x="433" fg:w="3"/><text x="47.3664%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.33%)</title><rect x="47.1164%" y="901" width="0.3264%" height="15" fill="rgb(231,145,52)" fg:x="433" fg:w="3"/><text x="47.3664%" y="911.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="47.3341%" y="885" width="0.1088%" height="15" fill="rgb(206,20,26)" fg:x="435" fg:w="1"/><text x="47.5841%" y="895.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (1 samples, 0.11%)</title><rect x="47.4429%" y="933" width="0.1088%" height="15" fill="rgb(238,220,4)" fg:x="436" fg:w="1"/><text x="47.6929%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (15 samples, 1.63%)</title><rect x="46.0283%" y="1013" width="1.6322%" height="15" fill="rgb(252,195,42)" fg:x="423" fg:w="15"/><text x="46.2783%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (15 samples, 1.63%)</title><rect x="46.0283%" y="997" width="1.6322%" height="15" fill="rgb(209,10,6)" fg:x="423" fg:w="15"/><text x="46.2783%" y="1007.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (15 samples, 1.63%)</title><rect x="46.0283%" y="981" width="1.6322%" height="15" fill="rgb(229,3,52)" fg:x="423" fg:w="15"/><text x="46.2783%" y="991.50"></text></g><g><title>&lt;chumsky::primitive::OneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner_silent (7 samples, 0.76%)</title><rect x="46.8988%" y="965" width="0.7617%" height="15" fill="rgb(253,49,37)" fg:x="431" fg:w="7"/><text x="47.1488%" y="975.50"></text></g><g><title>&lt;chumsky::primitive::OneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner (7 samples, 0.76%)</title><rect x="46.8988%" y="949" width="0.7617%" height="15" fill="rgb(240,103,49)" fg:x="431" fg:w="7"/><text x="47.1488%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1 samples, 0.11%)</title><rect x="47.5517%" y="933" width="0.1088%" height="15" fill="rgb(250,182,30)" fg:x="437" fg:w="1"/><text x="47.8017%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.11%)</title><rect x="47.5517%" y="917" width="0.1088%" height="15" fill="rgb(248,8,30)" fg:x="437" fg:w="1"/><text x="47.8017%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::{{closure}} (1 samples, 0.11%)</title><rect x="47.5517%" y="901" width="0.1088%" height="15" fill="rgb(237,120,30)" fg:x="437" fg:w="1"/><text x="47.8017%" y="911.50"></text></g><g><title>&lt;chumsky::primitive::OneOf&lt;I,C,E&gt; as chumsky::Parser&lt;I,I&gt;&gt;::parse_inner::{{closure}} (1 samples, 0.11%)</title><rect x="47.5517%" y="885" width="0.1088%" height="15" fill="rgb(221,146,34)" fg:x="437" fg:w="1"/><text x="47.8017%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for char&gt;::eq (1 samples, 0.11%)</title><rect x="47.5517%" y="869" width="0.1088%" height="15" fill="rgb(242,55,13)" fg:x="437" fg:w="1"/><text x="47.8017%" y="879.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="47.7693%" y="981" width="0.4353%" height="15" fill="rgb(242,112,31)" fg:x="439" fg:w="4"/><text x="48.0193%" y="991.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.98%)</title><rect x="48.6398%" y="965" width="0.9793%" height="15" fill="rgb(249,192,27)" fg:x="447" fg:w="9"/><text x="48.8898%" y="975.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="50.1632%" y="933" width="0.2176%" height="15" fill="rgb(208,204,44)" fg:x="461" fg:w="2"/><text x="50.4132%" y="943.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="50.1632%" y="917" width="0.2176%" height="15" fill="rgb(208,93,54)" fg:x="461" fg:w="2"/><text x="50.4132%" y="927.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="50.1632%" y="901" width="0.2176%" height="15" fill="rgb(242,1,31)" fg:x="461" fg:w="2"/><text x="50.4132%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="50.1632%" y="885" width="0.2176%" height="15" fill="rgb(241,83,25)" fg:x="461" fg:w="2"/><text x="50.4132%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="50.1632%" y="869" width="0.2176%" height="15" fill="rgb(205,169,50)" fg:x="461" fg:w="2"/><text x="50.4132%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2 samples, 0.22%)</title><rect x="50.1632%" y="853" width="0.2176%" height="15" fill="rgb(239,186,37)" fg:x="461" fg:w="2"/><text x="50.4132%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.22%)</title><rect x="50.1632%" y="837" width="0.2176%" height="15" fill="rgb(205,221,10)" fg:x="461" fg:w="2"/><text x="50.4132%" y="847.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="50.3808%" y="933" width="0.4353%" height="15" fill="rgb(218,196,15)" fg:x="463" fg:w="4"/><text x="50.6308%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="50.8161%" y="933" width="0.1088%" height="15" fill="rgb(218,196,35)" fg:x="467" fg:w="1"/><text x="51.0661%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="50.8161%" y="917" width="0.1088%" height="15" fill="rgb(233,63,24)" fg:x="467" fg:w="1"/><text x="51.0661%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;core::option::Option&lt;char&gt;,()&gt;&gt; (1 samples, 0.11%)</title><rect x="50.8161%" y="901" width="0.1088%" height="15" fill="rgb(225,8,4)" fg:x="467" fg:w="1"/><text x="51.0661%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (1 samples, 0.11%)</title><rect x="50.8161%" y="885" width="0.1088%" height="15" fill="rgb(234,105,35)" fg:x="467" fg:w="1"/><text x="51.0661%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="50.8161%" y="869" width="0.1088%" height="15" fill="rgb(236,21,32)" fg:x="467" fg:w="1"/><text x="51.0661%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="50.8161%" y="853" width="0.1088%" height="15" fill="rgb(228,109,6)" fg:x="467" fg:w="1"/><text x="51.0661%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="50.8161%" y="837" width="0.1088%" height="15" fill="rgb(229,215,31)" fg:x="467" fg:w="1"/><text x="51.0661%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="50.8161%" y="821" width="0.1088%" height="15" fill="rgb(221,52,54)" fg:x="467" fg:w="1"/><text x="51.0661%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.11%)</title><rect x="50.9249%" y="885" width="0.1088%" height="15" fill="rgb(252,129,43)" fg:x="468" fg:w="1"/><text x="51.1749%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.11%)</title><rect x="50.9249%" y="869" width="0.1088%" height="15" fill="rgb(248,183,27)" fg:x="468" fg:w="1"/><text x="51.1749%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="50.9249%" y="853" width="0.1088%" height="15" fill="rgb(250,0,22)" fg:x="468" fg:w="1"/><text x="51.1749%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="50.9249%" y="837" width="0.1088%" height="15" fill="rgb(213,166,10)" fg:x="468" fg:w="1"/><text x="51.1749%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="51.5778%" y="837" width="0.2176%" height="15" fill="rgb(207,163,36)" fg:x="474" fg:w="2"/><text x="51.8278%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.22%)</title><rect x="51.5778%" y="821" width="0.2176%" height="15" fill="rgb(208,122,22)" fg:x="474" fg:w="2"/><text x="51.8278%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (10 samples, 1.09%)</title><rect x="51.0337%" y="885" width="1.0881%" height="15" fill="rgb(207,104,49)" fg:x="469" fg:w="10"/><text x="51.2837%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 1.09%)</title><rect x="51.0337%" y="869" width="1.0881%" height="15" fill="rgb(248,211,50)" fg:x="469" fg:w="10"/><text x="51.2837%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10 samples, 1.09%)</title><rect x="51.0337%" y="853" width="1.0881%" height="15" fill="rgb(217,13,45)" fg:x="469" fg:w="10"/><text x="51.2837%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.33%)</title><rect x="51.7954%" y="837" width="0.3264%" height="15" fill="rgb(211,216,49)" fg:x="476" fg:w="3"/><text x="52.0454%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.33%)</title><rect x="51.7954%" y="821" width="0.3264%" height="15" fill="rgb(221,58,53)" fg:x="476" fg:w="3"/><text x="52.0454%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="53.7541%" y="773" width="0.1088%" height="15" fill="rgb(220,112,41)" fg:x="494" fg:w="1"/><text x="54.0041%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (14 samples, 1.52%)</title><rect x="52.6659%" y="869" width="1.5234%" height="15" fill="rgb(236,38,28)" fg:x="484" fg:w="14"/><text x="52.9159%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.52%)</title><rect x="52.6659%" y="853" width="1.5234%" height="15" fill="rgb(227,195,22)" fg:x="484" fg:w="14"/><text x="52.9159%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (14 samples, 1.52%)</title><rect x="52.6659%" y="837" width="1.5234%" height="15" fill="rgb(214,55,33)" fg:x="484" fg:w="14"/><text x="52.9159%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (14 samples, 1.52%)</title><rect x="52.6659%" y="821" width="1.5234%" height="15" fill="rgb(248,80,13)" fg:x="484" fg:w="14"/><text x="52.9159%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (14 samples, 1.52%)</title><rect x="52.6659%" y="805" width="1.5234%" height="15" fill="rgb(238,52,6)" fg:x="484" fg:w="14"/><text x="52.9159%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (14 samples, 1.52%)</title><rect x="52.6659%" y="789" width="1.5234%" height="15" fill="rgb(224,198,47)" fg:x="484" fg:w="14"/><text x="52.9159%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.33%)</title><rect x="53.8629%" y="773" width="0.3264%" height="15" fill="rgb(233,171,20)" fg:x="495" fg:w="3"/><text x="54.1129%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.33%)</title><rect x="53.8629%" y="757" width="0.3264%" height="15" fill="rgb(241,30,25)" fg:x="495" fg:w="3"/><text x="54.1129%" y="767.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.33%)</title><rect x="55.0598%" y="853" width="0.3264%" height="15" fill="rgb(207,171,38)" fg:x="506" fg:w="3"/><text x="55.3098%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (13 samples, 1.41%)</title><rect x="54.1893%" y="869" width="1.4146%" height="15" fill="rgb(234,70,1)" fg:x="498" fg:w="13"/><text x="54.4393%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (2 samples, 0.22%)</title><rect x="55.3863%" y="853" width="0.2176%" height="15" fill="rgb(232,178,18)" fg:x="509" fg:w="2"/><text x="55.6363%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.22%)</title><rect x="55.3863%" y="837" width="0.2176%" height="15" fill="rgb(241,78,40)" fg:x="509" fg:w="2"/><text x="55.6363%" y="847.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (56 samples, 6.09%)</title><rect x="49.7280%" y="949" width="6.0936%" height="15" fill="rgb(222,35,25)" fg:x="457" fg:w="56"/><text x="49.9780%" y="959.50">&lt;chumsky..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (45 samples, 4.90%)</title><rect x="50.9249%" y="933" width="4.8966%" height="15" fill="rgb(207,92,16)" fg:x="468" fg:w="45"/><text x="51.1749%" y="943.50">std::c..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (45 samples, 4.90%)</title><rect x="50.9249%" y="917" width="4.8966%" height="15" fill="rgb(216,59,51)" fg:x="468" fg:w="45"/><text x="51.1749%" y="927.50">hashbr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (45 samples, 4.90%)</title><rect x="50.9249%" y="901" width="4.8966%" height="15" fill="rgb(213,80,28)" fg:x="468" fg:w="45"/><text x="51.1749%" y="911.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (34 samples, 3.70%)</title><rect x="52.1219%" y="885" width="3.6997%" height="15" fill="rgb(220,93,7)" fg:x="479" fg:w="34"/><text x="52.3719%" y="895.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (2 samples, 0.22%)</title><rect x="55.6039%" y="869" width="0.2176%" height="15" fill="rgb(225,24,44)" fg:x="511" fg:w="2"/><text x="55.8539%" y="879.50"></text></g><g><title>chumsky::error::merge_alts (79 samples, 8.60%)</title><rect x="48.2046%" y="981" width="8.5963%" height="15" fill="rgb(243,74,40)" fg:x="443" fg:w="79"/><text x="48.4546%" y="991.50">chumsky::err..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (66 samples, 7.18%)</title><rect x="49.6192%" y="965" width="7.1817%" height="15" fill="rgb(228,39,7)" fg:x="456" fg:w="66"/><text x="49.8692%" y="975.50">chumsky::e..</text></g><g><title>[libc-2.31.so] (9 samples, 0.98%)</title><rect x="55.8215%" y="949" width="0.9793%" height="15" fill="rgb(227,79,8)" fg:x="513" fg:w="9"/><text x="56.0715%" y="959.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="57.0185%" y="949" width="0.4353%" height="15" fill="rgb(236,58,11)" fg:x="524" fg:w="4"/><text x="57.2685%" y="959.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (2 samples, 0.22%)</title><rect x="57.6714%" y="517" width="0.2176%" height="15" fill="rgb(249,63,35)" fg:x="530" fg:w="2"/><text x="57.9214%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (2 samples, 0.22%)</title><rect x="57.6714%" y="501" width="0.2176%" height="15" fill="rgb(252,114,16)" fg:x="530" fg:w="2"/><text x="57.9214%" y="511.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (2 samples, 0.22%)</title><rect x="57.6714%" y="485" width="0.2176%" height="15" fill="rgb(254,151,24)" fg:x="530" fg:w="2"/><text x="57.9214%" y="495.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (2 samples, 0.22%)</title><rect x="57.6714%" y="469" width="0.2176%" height="15" fill="rgb(253,54,39)" fg:x="530" fg:w="2"/><text x="57.9214%" y="479.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (2 samples, 0.22%)</title><rect x="57.6714%" y="453" width="0.2176%" height="15" fill="rgb(243,25,45)" fg:x="530" fg:w="2"/><text x="57.9214%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="57.7802%" y="437" width="0.1088%" height="15" fill="rgb(234,134,9)" fg:x="531" fg:w="1"/><text x="58.0302%" y="447.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="57.9978%" y="277" width="0.1088%" height="15" fill="rgb(227,166,31)" fg:x="533" fg:w="1"/><text x="58.2478%" y="287.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="57.9978%" y="261" width="0.1088%" height="15" fill="rgb(245,143,41)" fg:x="533" fg:w="1"/><text x="58.2478%" y="271.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.11%)</title><rect x="57.9978%" y="245" width="0.1088%" height="15" fill="rgb(238,181,32)" fg:x="533" fg:w="1"/><text x="58.2478%" y="255.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (2 samples, 0.22%)</title><rect x="57.9978%" y="325" width="0.2176%" height="15" fill="rgb(224,113,18)" fg:x="533" fg:w="2"/><text x="58.2478%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.22%)</title><rect x="57.9978%" y="309" width="0.2176%" height="15" fill="rgb(240,229,28)" fg:x="533" fg:w="2"/><text x="58.2478%" y="319.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.22%)</title><rect x="57.9978%" y="293" width="0.2176%" height="15" fill="rgb(250,185,3)" fg:x="533" fg:w="2"/><text x="58.2478%" y="303.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="58.1066%" y="277" width="0.1088%" height="15" fill="rgb(212,59,25)" fg:x="534" fg:w="1"/><text x="58.3566%" y="287.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (6 samples, 0.65%)</title><rect x="57.6714%" y="533" width="0.6529%" height="15" fill="rgb(221,87,20)" fg:x="530" fg:w="6"/><text x="57.9214%" y="543.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="57.8890%" y="517" width="0.4353%" height="15" fill="rgb(213,74,28)" fg:x="532" fg:w="4"/><text x="58.1390%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="57.8890%" y="501" width="0.4353%" height="15" fill="rgb(224,132,34)" fg:x="532" fg:w="4"/><text x="58.1390%" y="511.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (4 samples, 0.44%)</title><rect x="57.8890%" y="485" width="0.4353%" height="15" fill="rgb(222,101,24)" fg:x="532" fg:w="4"/><text x="58.1390%" y="495.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (4 samples, 0.44%)</title><rect x="57.8890%" y="469" width="0.4353%" height="15" fill="rgb(254,142,4)" fg:x="532" fg:w="4"/><text x="58.1390%" y="479.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (4 samples, 0.44%)</title><rect x="57.8890%" y="453" width="0.4353%" height="15" fill="rgb(230,229,49)" fg:x="532" fg:w="4"/><text x="58.1390%" y="463.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (4 samples, 0.44%)</title><rect x="57.8890%" y="437" width="0.4353%" height="15" fill="rgb(238,70,47)" fg:x="532" fg:w="4"/><text x="58.1390%" y="447.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (4 samples, 0.44%)</title><rect x="57.8890%" y="421" width="0.4353%" height="15" fill="rgb(231,160,17)" fg:x="532" fg:w="4"/><text x="58.1390%" y="431.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="57.9978%" y="405" width="0.3264%" height="15" fill="rgb(218,68,53)" fg:x="533" fg:w="3"/><text x="58.2478%" y="415.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="57.9978%" y="389" width="0.3264%" height="15" fill="rgb(236,111,10)" fg:x="533" fg:w="3"/><text x="58.2478%" y="399.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="57.9978%" y="373" width="0.3264%" height="15" fill="rgb(224,34,41)" fg:x="533" fg:w="3"/><text x="58.2478%" y="383.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="57.9978%" y="357" width="0.3264%" height="15" fill="rgb(241,118,19)" fg:x="533" fg:w="3"/><text x="58.2478%" y="367.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="57.9978%" y="341" width="0.3264%" height="15" fill="rgb(238,129,25)" fg:x="533" fg:w="3"/><text x="58.2478%" y="351.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (1 samples, 0.11%)</title><rect x="58.2155%" y="325" width="0.1088%" height="15" fill="rgb(238,22,31)" fg:x="535" fg:w="1"/><text x="58.4655%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="58.2155%" y="309" width="0.1088%" height="15" fill="rgb(222,174,48)" fg:x="535" fg:w="1"/><text x="58.4655%" y="319.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="58.3243%" y="501" width="0.1088%" height="15" fill="rgb(206,152,40)" fg:x="536" fg:w="1"/><text x="58.5743%" y="511.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="57.4538%" y="869" width="1.0881%" height="15" fill="rgb(218,99,54)" fg:x="528" fg:w="10"/><text x="57.7038%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="57.4538%" y="853" width="1.0881%" height="15" fill="rgb(220,174,26)" fg:x="528" fg:w="10"/><text x="57.7038%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="57.4538%" y="837" width="1.0881%" height="15" fill="rgb(245,116,9)" fg:x="528" fg:w="10"/><text x="57.7038%" y="847.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="57.6714%" y="821" width="0.8705%" height="15" fill="rgb(209,72,35)" fg:x="530" fg:w="8"/><text x="57.9214%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="57.6714%" y="805" width="0.8705%" height="15" fill="rgb(226,126,21)" fg:x="530" fg:w="8"/><text x="57.9214%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="57.6714%" y="789" width="0.8705%" height="15" fill="rgb(227,192,1)" fg:x="530" fg:w="8"/><text x="57.9214%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="57.6714%" y="773" width="0.8705%" height="15" fill="rgb(237,180,29)" fg:x="530" fg:w="8"/><text x="57.9214%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="57.6714%" y="757" width="0.8705%" height="15" fill="rgb(230,197,35)" fg:x="530" fg:w="8"/><text x="57.9214%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="57.6714%" y="741" width="0.8705%" height="15" fill="rgb(246,193,31)" fg:x="530" fg:w="8"/><text x="57.9214%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="57.6714%" y="725" width="0.8705%" height="15" fill="rgb(241,36,4)" fg:x="530" fg:w="8"/><text x="57.9214%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="57.6714%" y="709" width="0.8705%" height="15" fill="rgb(241,130,17)" fg:x="530" fg:w="8"/><text x="57.9214%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="57.6714%" y="693" width="0.8705%" height="15" fill="rgb(206,137,32)" fg:x="530" fg:w="8"/><text x="57.9214%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="57.6714%" y="677" width="0.8705%" height="15" fill="rgb(237,228,51)" fg:x="530" fg:w="8"/><text x="57.9214%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="57.6714%" y="661" width="0.8705%" height="15" fill="rgb(243,6,42)" fg:x="530" fg:w="8"/><text x="57.9214%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="57.6714%" y="645" width="0.8705%" height="15" fill="rgb(251,74,28)" fg:x="530" fg:w="8"/><text x="57.9214%" y="655.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="57.6714%" y="629" width="0.8705%" height="15" fill="rgb(218,20,49)" fg:x="530" fg:w="8"/><text x="57.9214%" y="639.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="57.6714%" y="613" width="0.8705%" height="15" fill="rgb(238,28,14)" fg:x="530" fg:w="8"/><text x="57.9214%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="57.6714%" y="597" width="0.8705%" height="15" fill="rgb(229,40,46)" fg:x="530" fg:w="8"/><text x="57.9214%" y="607.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (8 samples, 0.87%)</title><rect x="57.6714%" y="581" width="0.8705%" height="15" fill="rgb(244,195,20)" fg:x="530" fg:w="8"/><text x="57.9214%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (8 samples, 0.87%)</title><rect x="57.6714%" y="565" width="0.8705%" height="15" fill="rgb(253,56,35)" fg:x="530" fg:w="8"/><text x="57.9214%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (8 samples, 0.87%)</title><rect x="57.6714%" y="549" width="0.8705%" height="15" fill="rgb(210,149,44)" fg:x="530" fg:w="8"/><text x="57.9214%" y="559.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (2 samples, 0.22%)</title><rect x="58.3243%" y="533" width="0.2176%" height="15" fill="rgb(240,135,12)" fg:x="536" fg:w="2"/><text x="58.5743%" y="543.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (2 samples, 0.22%)</title><rect x="58.3243%" y="517" width="0.2176%" height="15" fill="rgb(251,24,50)" fg:x="536" fg:w="2"/><text x="58.5743%" y="527.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="58.4331%" y="501" width="0.1088%" height="15" fill="rgb(243,200,47)" fg:x="537" fg:w="1"/><text x="58.6831%" y="511.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="58.4331%" y="485" width="0.1088%" height="15" fill="rgb(224,166,26)" fg:x="537" fg:w="1"/><text x="58.6831%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="58.4331%" y="469" width="0.1088%" height="15" fill="rgb(233,0,47)" fg:x="537" fg:w="1"/><text x="58.6831%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="58.4331%" y="453" width="0.1088%" height="15" fill="rgb(253,80,5)" fg:x="537" fg:w="1"/><text x="58.6831%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="58.4331%" y="437" width="0.1088%" height="15" fill="rgb(214,133,25)" fg:x="537" fg:w="1"/><text x="58.6831%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="58.4331%" y="421" width="0.1088%" height="15" fill="rgb(209,27,14)" fg:x="537" fg:w="1"/><text x="58.6831%" y="431.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="58.5419%" y="869" width="0.1088%" height="15" fill="rgb(219,102,51)" fg:x="538" fg:w="1"/><text x="58.7919%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (12 samples, 1.31%)</title><rect x="57.4538%" y="901" width="1.3058%" height="15" fill="rgb(237,18,16)" fg:x="528" fg:w="12"/><text x="57.7038%" y="911.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (12 samples, 1.31%)</title><rect x="57.4538%" y="885" width="1.3058%" height="15" fill="rgb(241,85,17)" fg:x="528" fg:w="12"/><text x="57.7038%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="58.6507%" y="869" width="0.1088%" height="15" fill="rgb(236,90,42)" fg:x="539" fg:w="1"/><text x="58.9007%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="58.6507%" y="853" width="0.1088%" height="15" fill="rgb(249,57,21)" fg:x="539" fg:w="1"/><text x="58.9007%" y="863.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="58.6507%" y="837" width="0.1088%" height="15" fill="rgb(243,12,36)" fg:x="539" fg:w="1"/><text x="58.9007%" y="847.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="59.1948%" y="725" width="0.4353%" height="15" fill="rgb(253,128,47)" fg:x="544" fg:w="4"/><text x="59.4448%" y="735.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.65%)</title><rect x="59.7388%" y="709" width="0.6529%" height="15" fill="rgb(207,33,20)" fg:x="549" fg:w="6"/><text x="59.9888%" y="719.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="61.2622%" y="677" width="0.3264%" height="15" fill="rgb(233,215,35)" fg:x="563" fg:w="3"/><text x="61.5122%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="61.5887%" y="677" width="0.1088%" height="15" fill="rgb(249,188,52)" fg:x="566" fg:w="1"/><text x="61.8387%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="61.5887%" y="661" width="0.1088%" height="15" fill="rgb(225,12,32)" fg:x="566" fg:w="1"/><text x="61.8387%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;core::option::Option&lt;char&gt;,()&gt;&gt; (1 samples, 0.11%)</title><rect x="61.5887%" y="645" width="0.1088%" height="15" fill="rgb(247,98,14)" fg:x="566" fg:w="1"/><text x="61.8387%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (1 samples, 0.11%)</title><rect x="61.5887%" y="629" width="0.1088%" height="15" fill="rgb(247,219,48)" fg:x="566" fg:w="1"/><text x="61.8387%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="61.5887%" y="613" width="0.1088%" height="15" fill="rgb(253,60,48)" fg:x="566" fg:w="1"/><text x="61.8387%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="61.5887%" y="597" width="0.1088%" height="15" fill="rgb(245,15,52)" fg:x="566" fg:w="1"/><text x="61.8387%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="61.5887%" y="581" width="0.1088%" height="15" fill="rgb(220,133,28)" fg:x="566" fg:w="1"/><text x="61.8387%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="61.5887%" y="565" width="0.1088%" height="15" fill="rgb(217,180,4)" fg:x="566" fg:w="1"/><text x="61.8387%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="61.6975%" y="581" width="0.1088%" height="15" fill="rgb(251,24,1)" fg:x="567" fg:w="1"/><text x="61.9475%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.11%)</title><rect x="61.6975%" y="565" width="0.1088%" height="15" fill="rgb(212,185,49)" fg:x="567" fg:w="1"/><text x="61.9475%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="61.6975%" y="629" width="0.2176%" height="15" fill="rgb(215,175,22)" fg:x="567" fg:w="2"/><text x="61.9475%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="61.6975%" y="613" width="0.2176%" height="15" fill="rgb(250,205,14)" fg:x="567" fg:w="2"/><text x="61.9475%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="61.6975%" y="597" width="0.2176%" height="15" fill="rgb(225,211,22)" fg:x="567" fg:w="2"/><text x="61.9475%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="61.8063%" y="581" width="0.1088%" height="15" fill="rgb(251,179,42)" fg:x="568" fg:w="1"/><text x="62.0563%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="61.8063%" y="565" width="0.1088%" height="15" fill="rgb(208,216,51)" fg:x="568" fg:w="1"/><text x="62.0563%" y="575.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (13 samples, 1.41%)</title><rect x="60.6094%" y="693" width="1.4146%" height="15" fill="rgb(235,36,11)" fg:x="557" fg:w="13"/><text x="60.8594%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (3 samples, 0.33%)</title><rect x="61.6975%" y="677" width="0.3264%" height="15" fill="rgb(213,189,28)" fg:x="567" fg:w="3"/><text x="61.9475%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (3 samples, 0.33%)</title><rect x="61.6975%" y="661" width="0.3264%" height="15" fill="rgb(227,203,42)" fg:x="567" fg:w="3"/><text x="61.9475%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.33%)</title><rect x="61.6975%" y="645" width="0.3264%" height="15" fill="rgb(244,72,36)" fg:x="567" fg:w="3"/><text x="61.9475%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="61.9151%" y="629" width="0.1088%" height="15" fill="rgb(213,53,17)" fg:x="569" fg:w="1"/><text x="62.1651%" y="639.50"></text></g><g><title>chumsky::error::merge_alts (31 samples, 3.37%)</title><rect x="59.6300%" y="725" width="3.3732%" height="15" fill="rgb(207,167,3)" fg:x="548" fg:w="31"/><text x="59.8800%" y="735.50">chu..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (24 samples, 2.61%)</title><rect x="60.3917%" y="709" width="2.6115%" height="15" fill="rgb(216,98,30)" fg:x="555" fg:w="24"/><text x="60.6417%" y="719.50">ch..</text></g><g><title>[libc-2.31.so] (9 samples, 0.98%)</title><rect x="62.0239%" y="693" width="0.9793%" height="15" fill="rgb(236,123,15)" fg:x="570" fg:w="9"/><text x="62.2739%" y="703.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="63.0033%" y="693" width="0.2176%" height="15" fill="rgb(248,81,50)" fg:x="579" fg:w="2"/><text x="63.2533%" y="703.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (1 samples, 0.11%)</title><rect x="63.3297%" y="677" width="0.1088%" height="15" fill="rgb(214,120,4)" fg:x="582" fg:w="1"/><text x="63.5797%" y="687.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="63.3297%" y="661" width="0.1088%" height="15" fill="rgb(208,179,34)" fg:x="582" fg:w="1"/><text x="63.5797%" y="671.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (44 samples, 4.79%)</title><rect x="59.0860%" y="821" width="4.7878%" height="15" fill="rgb(227,140,7)" fg:x="543" fg:w="44"/><text x="59.3360%" y="831.50">&lt;chums..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (44 samples, 4.79%)</title><rect x="59.0860%" y="805" width="4.7878%" height="15" fill="rgb(214,22,6)" fg:x="543" fg:w="44"/><text x="59.3360%" y="815.50">&lt;chums..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (44 samples, 4.79%)</title><rect x="59.0860%" y="789" width="4.7878%" height="15" fill="rgb(207,137,27)" fg:x="543" fg:w="44"/><text x="59.3360%" y="799.50">&lt;chums..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (44 samples, 4.79%)</title><rect x="59.0860%" y="773" width="4.7878%" height="15" fill="rgb(210,8,46)" fg:x="543" fg:w="44"/><text x="59.3360%" y="783.50">&lt;chums..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (44 samples, 4.79%)</title><rect x="59.0860%" y="757" width="4.7878%" height="15" fill="rgb(240,16,54)" fg:x="543" fg:w="44"/><text x="59.3360%" y="767.50">&lt;chums..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(P_,Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (44 samples, 4.79%)</title><rect x="59.0860%" y="741" width="4.7878%" height="15" fill="rgb(211,209,29)" fg:x="543" fg:w="44"/><text x="59.3360%" y="751.50">&lt;chums..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (8 samples, 0.87%)</title><rect x="63.0033%" y="725" width="0.8705%" height="15" fill="rgb(226,228,24)" fg:x="579" fg:w="8"/><text x="63.2533%" y="735.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (8 samples, 0.87%)</title><rect x="63.0033%" y="709" width="0.8705%" height="15" fill="rgb(222,84,9)" fg:x="579" fg:w="8"/><text x="63.2533%" y="719.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (6 samples, 0.65%)</title><rect x="63.2209%" y="693" width="0.6529%" height="15" fill="rgb(234,203,30)" fg:x="581" fg:w="6"/><text x="63.4709%" y="703.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="63.4385%" y="677" width="0.4353%" height="15" fill="rgb(238,109,14)" fg:x="583" fg:w="4"/><text x="63.6885%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (45 samples, 4.90%)</title><rect x="59.0860%" y="853" width="4.8966%" height="15" fill="rgb(233,206,34)" fg:x="543" fg:w="45"/><text x="59.3360%" y="863.50">&lt;chums..</text></g><g><title>&lt;chumsky::combinator::Label&lt;A,L&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (45 samples, 4.90%)</title><rect x="59.0860%" y="837" width="4.8966%" height="15" fill="rgb(220,167,47)" fg:x="543" fg:w="45"/><text x="59.3360%" y="847.50">&lt;chums..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="63.8738%" y="821" width="0.1088%" height="15" fill="rgb(238,105,10)" fg:x="587" fg:w="1"/><text x="64.1238%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="63.8738%" y="805" width="0.1088%" height="15" fill="rgb(213,227,17)" fg:x="587" fg:w="1"/><text x="64.1238%" y="815.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="63.8738%" y="789" width="0.1088%" height="15" fill="rgb(217,132,38)" fg:x="587" fg:w="1"/><text x="64.1238%" y="799.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.11%)</title><rect x="63.8738%" y="773" width="0.1088%" height="15" fill="rgb(242,146,4)" fg:x="587" fg:w="1"/><text x="64.1238%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub_ptr (1 samples, 0.11%)</title><rect x="63.8738%" y="757" width="0.1088%" height="15" fill="rgb(212,61,9)" fg:x="587" fg:w="1"/><text x="64.1238%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.11%)</title><rect x="63.8738%" y="741" width="0.1088%" height="15" fill="rgb(247,126,22)" fg:x="587" fg:w="1"/><text x="64.1238%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="64.4178%" y="805" width="0.5441%" height="15" fill="rgb(220,196,2)" fg:x="592" fg:w="5"/><text x="64.6678%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="64.4178%" y="789" width="0.5441%" height="15" fill="rgb(208,46,4)" fg:x="592" fg:w="5"/><text x="64.6678%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="64.4178%" y="773" width="0.5441%" height="15" fill="rgb(252,104,46)" fg:x="592" fg:w="5"/><text x="64.6678%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="64.4178%" y="757" width="0.5441%" height="15" fill="rgb(237,152,48)" fg:x="592" fg:w="5"/><text x="64.6678%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="64.4178%" y="741" width="0.5441%" height="15" fill="rgb(221,59,37)" fg:x="592" fg:w="5"/><text x="64.6678%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="64.6355%" y="725" width="0.3264%" height="15" fill="rgb(209,202,51)" fg:x="594" fg:w="3"/><text x="64.8855%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="64.6355%" y="709" width="0.3264%" height="15" fill="rgb(228,81,30)" fg:x="594" fg:w="3"/><text x="64.8855%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="64.6355%" y="693" width="0.3264%" height="15" fill="rgb(227,42,39)" fg:x="594" fg:w="3"/><text x="64.8855%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="64.6355%" y="677" width="0.3264%" height="15" fill="rgb(221,26,2)" fg:x="594" fg:w="3"/><text x="64.8855%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="64.6355%" y="661" width="0.3264%" height="15" fill="rgb(254,61,31)" fg:x="594" fg:w="3"/><text x="64.8855%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="64.6355%" y="645" width="0.3264%" height="15" fill="rgb(222,173,38)" fg:x="594" fg:w="3"/><text x="64.8855%" y="655.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="64.6355%" y="629" width="0.3264%" height="15" fill="rgb(218,50,12)" fg:x="594" fg:w="3"/><text x="64.8855%" y="639.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="64.6355%" y="613" width="0.3264%" height="15" fill="rgb(223,88,40)" fg:x="594" fg:w="3"/><text x="64.8855%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="64.6355%" y="597" width="0.3264%" height="15" fill="rgb(237,54,19)" fg:x="594" fg:w="3"/><text x="64.8855%" y="607.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="64.6355%" y="581" width="0.3264%" height="15" fill="rgb(251,129,25)" fg:x="594" fg:w="3"/><text x="64.8855%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="64.6355%" y="565" width="0.3264%" height="15" fill="rgb(238,97,19)" fg:x="594" fg:w="3"/><text x="64.8855%" y="575.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="64.6355%" y="549" width="0.3264%" height="15" fill="rgb(240,169,18)" fg:x="594" fg:w="3"/><text x="64.8855%" y="559.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (3 samples, 0.33%)</title><rect x="64.6355%" y="533" width="0.3264%" height="15" fill="rgb(230,187,49)" fg:x="594" fg:w="3"/><text x="64.8855%" y="543.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (3 samples, 0.33%)</title><rect x="64.6355%" y="517" width="0.3264%" height="15" fill="rgb(209,44,26)" fg:x="594" fg:w="3"/><text x="64.8855%" y="527.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (3 samples, 0.33%)</title><rect x="64.6355%" y="501" width="0.3264%" height="15" fill="rgb(244,0,6)" fg:x="594" fg:w="3"/><text x="64.8855%" y="511.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="64.8531%" y="485" width="0.1088%" height="15" fill="rgb(248,18,21)" fg:x="596" fg:w="1"/><text x="65.1031%" y="495.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="64.8531%" y="469" width="0.1088%" height="15" fill="rgb(245,180,19)" fg:x="596" fg:w="1"/><text x="65.1031%" y="479.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="64.8531%" y="453" width="0.1088%" height="15" fill="rgb(252,118,36)" fg:x="596" fg:w="1"/><text x="65.1031%" y="463.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (3 samples, 0.33%)</title><rect x="65.0707%" y="709" width="0.3264%" height="15" fill="rgb(210,224,19)" fg:x="598" fg:w="3"/><text x="65.3207%" y="719.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="65.2884%" y="693" width="0.1088%" height="15" fill="rgb(218,30,24)" fg:x="600" fg:w="1"/><text x="65.5384%" y="703.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="65.2884%" y="677" width="0.1088%" height="15" fill="rgb(219,75,50)" fg:x="600" fg:w="1"/><text x="65.5384%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (4 samples, 0.44%)</title><rect x="65.0707%" y="725" width="0.4353%" height="15" fill="rgb(234,72,50)" fg:x="598" fg:w="4"/><text x="65.3207%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="65.3972%" y="709" width="0.1088%" height="15" fill="rgb(219,100,48)" fg:x="601" fg:w="1"/><text x="65.6472%" y="719.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="65.6148%" y="485" width="0.1088%" height="15" fill="rgb(253,5,41)" fg:x="603" fg:w="1"/><text x="65.8648%" y="495.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="65.6148%" y="469" width="0.1088%" height="15" fill="rgb(247,181,11)" fg:x="603" fg:w="1"/><text x="65.8648%" y="479.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.11%)</title><rect x="65.6148%" y="453" width="0.1088%" height="15" fill="rgb(222,223,25)" fg:x="603" fg:w="1"/><text x="65.8648%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="65.7236%" y="437" width="0.2176%" height="15" fill="rgb(214,198,28)" fg:x="604" fg:w="2"/><text x="65.9736%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="65.7236%" y="421" width="0.2176%" height="15" fill="rgb(230,46,43)" fg:x="604" fg:w="2"/><text x="65.9736%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="65.7236%" y="405" width="0.2176%" height="15" fill="rgb(233,65,53)" fg:x="604" fg:w="2"/><text x="65.9736%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="65.7236%" y="389" width="0.2176%" height="15" fill="rgb(221,121,27)" fg:x="604" fg:w="2"/><text x="65.9736%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.22%)</title><rect x="65.7236%" y="373" width="0.2176%" height="15" fill="rgb(247,70,47)" fg:x="604" fg:w="2"/><text x="65.9736%" y="383.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.22%)</title><rect x="65.7236%" y="357" width="0.2176%" height="15" fill="rgb(228,85,35)" fg:x="604" fg:w="2"/><text x="65.9736%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="65.7236%" y="341" width="0.2176%" height="15" fill="rgb(209,50,18)" fg:x="604" fg:w="2"/><text x="65.9736%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="65.7236%" y="325" width="0.2176%" height="15" fill="rgb(250,19,35)" fg:x="604" fg:w="2"/><text x="65.9736%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="65.7236%" y="309" width="0.2176%" height="15" fill="rgb(253,107,29)" fg:x="604" fg:w="2"/><text x="65.9736%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="65.7236%" y="293" width="0.2176%" height="15" fill="rgb(252,179,29)" fg:x="604" fg:w="2"/><text x="65.9736%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.22%)</title><rect x="65.7236%" y="277" width="0.2176%" height="15" fill="rgb(238,194,6)" fg:x="604" fg:w="2"/><text x="65.9736%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.22%)</title><rect x="65.7236%" y="261" width="0.2176%" height="15" fill="rgb(238,164,29)" fg:x="604" fg:w="2"/><text x="65.9736%" y="271.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="65.7236%" y="485" width="0.3264%" height="15" fill="rgb(224,25,9)" fg:x="604" fg:w="3"/><text x="65.9736%" y="495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="65.7236%" y="469" width="0.3264%" height="15" fill="rgb(244,153,23)" fg:x="604" fg:w="3"/><text x="65.9736%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.33%)</title><rect x="65.7236%" y="453" width="0.3264%" height="15" fill="rgb(212,203,14)" fg:x="604" fg:w="3"/><text x="65.9736%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="65.9412%" y="437" width="0.1088%" height="15" fill="rgb(220,164,20)" fg:x="606" fg:w="1"/><text x="66.1912%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="65.9412%" y="421" width="0.1088%" height="15" fill="rgb(222,203,48)" fg:x="606" fg:w="1"/><text x="66.1912%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="65.9412%" y="405" width="0.1088%" height="15" fill="rgb(215,159,22)" fg:x="606" fg:w="1"/><text x="66.1912%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="65.9412%" y="389" width="0.1088%" height="15" fill="rgb(216,183,47)" fg:x="606" fg:w="1"/><text x="66.1912%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="65.9412%" y="373" width="0.1088%" height="15" fill="rgb(229,195,25)" fg:x="606" fg:w="1"/><text x="66.1912%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="65.9412%" y="357" width="0.1088%" height="15" fill="rgb(224,132,51)" fg:x="606" fg:w="1"/><text x="66.1912%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="65.9412%" y="341" width="0.1088%" height="15" fill="rgb(240,63,7)" fg:x="606" fg:w="1"/><text x="66.1912%" y="351.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="65.9412%" y="325" width="0.1088%" height="15" fill="rgb(249,182,41)" fg:x="606" fg:w="1"/><text x="66.1912%" y="335.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.11%)</title><rect x="65.9412%" y="309" width="0.1088%" height="15" fill="rgb(243,47,26)" fg:x="606" fg:w="1"/><text x="66.1912%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="65.9412%" y="293" width="0.1088%" height="15" fill="rgb(233,48,2)" fg:x="606" fg:w="1"/><text x="66.1912%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="65.9412%" y="277" width="0.1088%" height="15" fill="rgb(244,165,34)" fg:x="606" fg:w="1"/><text x="66.1912%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="65.9412%" y="261" width="0.1088%" height="15" fill="rgb(207,89,7)" fg:x="606" fg:w="1"/><text x="66.1912%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="65.9412%" y="245" width="0.1088%" height="15" fill="rgb(244,117,36)" fg:x="606" fg:w="1"/><text x="66.1912%" y="255.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (5 samples, 0.54%)</title><rect x="65.6148%" y="533" width="0.5441%" height="15" fill="rgb(226,144,34)" fg:x="603" fg:w="5"/><text x="65.8648%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.54%)</title><rect x="65.6148%" y="517" width="0.5441%" height="15" fill="rgb(213,23,19)" fg:x="603" fg:w="5"/><text x="65.8648%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.54%)</title><rect x="65.6148%" y="501" width="0.5441%" height="15" fill="rgb(217,75,12)" fg:x="603" fg:w="5"/><text x="65.8648%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="66.0501%" y="485" width="0.1088%" height="15" fill="rgb(224,159,17)" fg:x="607" fg:w="1"/><text x="66.3001%" y="495.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (3 samples, 0.33%)</title><rect x="66.1589%" y="533" width="0.3264%" height="15" fill="rgb(217,118,1)" fg:x="608" fg:w="3"/><text x="66.4089%" y="543.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="66.1589%" y="517" width="0.3264%" height="15" fill="rgb(232,180,48)" fg:x="608" fg:w="3"/><text x="66.4089%" y="527.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="65.5060%" y="629" width="1.0881%" height="15" fill="rgb(230,27,33)" fg:x="602" fg:w="10"/><text x="65.7560%" y="639.50"></text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="65.5060%" y="613" width="1.0881%" height="15" fill="rgb(205,31,21)" fg:x="602" fg:w="10"/><text x="65.7560%" y="623.50"></text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (10 samples, 1.09%)</title><rect x="65.5060%" y="597" width="1.0881%" height="15" fill="rgb(253,59,4)" fg:x="602" fg:w="10"/><text x="65.7560%" y="607.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (10 samples, 1.09%)</title><rect x="65.5060%" y="581" width="1.0881%" height="15" fill="rgb(224,201,9)" fg:x="602" fg:w="10"/><text x="65.7560%" y="591.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (10 samples, 1.09%)</title><rect x="65.5060%" y="565" width="1.0881%" height="15" fill="rgb(229,206,30)" fg:x="602" fg:w="10"/><text x="65.7560%" y="575.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="65.6148%" y="549" width="0.9793%" height="15" fill="rgb(212,67,47)" fg:x="603" fg:w="9"/><text x="65.8648%" y="559.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="66.4853%" y="533" width="0.1088%" height="15" fill="rgb(211,96,50)" fg:x="611" fg:w="1"/><text x="66.7353%" y="543.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="66.4853%" y="517" width="0.1088%" height="15" fill="rgb(252,114,18)" fg:x="611" fg:w="1"/><text x="66.7353%" y="527.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="66.4853%" y="501" width="0.1088%" height="15" fill="rgb(223,58,37)" fg:x="611" fg:w="1"/><text x="66.7353%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="66.4853%" y="485" width="0.1088%" height="15" fill="rgb(237,70,4)" fg:x="611" fg:w="1"/><text x="66.7353%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="66.4853%" y="469" width="0.1088%" height="15" fill="rgb(244,85,46)" fg:x="611" fg:w="1"/><text x="66.7353%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="66.4853%" y="453" width="0.1088%" height="15" fill="rgb(223,39,52)" fg:x="611" fg:w="1"/><text x="66.7353%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="66.4853%" y="437" width="0.1088%" height="15" fill="rgb(218,200,14)" fg:x="611" fg:w="1"/><text x="66.7353%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="66.4853%" y="421" width="0.1088%" height="15" fill="rgb(208,171,16)" fg:x="611" fg:w="1"/><text x="66.7353%" y="431.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="66.4853%" y="405" width="0.1088%" height="15" fill="rgb(234,200,18)" fg:x="611" fg:w="1"/><text x="66.7353%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="66.4853%" y="389" width="0.1088%" height="15" fill="rgb(228,45,11)" fg:x="611" fg:w="1"/><text x="66.7353%" y="399.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (15 samples, 1.63%)</title><rect x="65.0707%" y="757" width="1.6322%" height="15" fill="rgb(237,182,11)" fg:x="598" fg:w="15"/><text x="65.3207%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (15 samples, 1.63%)</title><rect x="65.0707%" y="741" width="1.6322%" height="15" fill="rgb(241,175,49)" fg:x="598" fg:w="15"/><text x="65.3207%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (11 samples, 1.20%)</title><rect x="65.5060%" y="725" width="1.1970%" height="15" fill="rgb(247,38,35)" fg:x="602" fg:w="11"/><text x="65.7560%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (11 samples, 1.20%)</title><rect x="65.5060%" y="709" width="1.1970%" height="15" fill="rgb(228,39,49)" fg:x="602" fg:w="11"/><text x="65.7560%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (11 samples, 1.20%)</title><rect x="65.5060%" y="693" width="1.1970%" height="15" fill="rgb(226,101,26)" fg:x="602" fg:w="11"/><text x="65.7560%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (11 samples, 1.20%)</title><rect x="65.5060%" y="677" width="1.1970%" height="15" fill="rgb(206,141,19)" fg:x="602" fg:w="11"/><text x="65.7560%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (11 samples, 1.20%)</title><rect x="65.5060%" y="661" width="1.1970%" height="15" fill="rgb(211,200,13)" fg:x="602" fg:w="11"/><text x="65.7560%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (11 samples, 1.20%)</title><rect x="65.5060%" y="645" width="1.1970%" height="15" fill="rgb(241,121,6)" fg:x="602" fg:w="11"/><text x="65.7560%" y="655.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="66.5941%" y="629" width="0.1088%" height="15" fill="rgb(234,221,29)" fg:x="612" fg:w="1"/><text x="66.8441%" y="639.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (16 samples, 1.74%)</title><rect x="65.0707%" y="773" width="1.7410%" height="15" fill="rgb(229,136,5)" fg:x="598" fg:w="16"/><text x="65.3207%" y="783.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="66.7029%" y="757" width="0.1088%" height="15" fill="rgb(238,36,11)" fg:x="613" fg:w="1"/><text x="66.9529%" y="767.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="66.7029%" y="741" width="0.1088%" height="15" fill="rgb(251,55,41)" fg:x="613" fg:w="1"/><text x="66.9529%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (27 samples, 2.94%)</title><rect x="63.9826%" y="853" width="2.9380%" height="15" fill="rgb(242,34,40)" fg:x="588" fg:w="27"/><text x="64.2326%" y="863.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (27 samples, 2.94%)</title><rect x="63.9826%" y="837" width="2.9380%" height="15" fill="rgb(215,42,17)" fg:x="588" fg:w="27"/><text x="64.2326%" y="847.50">&lt;c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (23 samples, 2.50%)</title><rect x="64.4178%" y="821" width="2.5027%" height="15" fill="rgb(207,44,46)" fg:x="592" fg:w="23"/><text x="64.6678%" y="831.50">&lt;c..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (18 samples, 1.96%)</title><rect x="64.9619%" y="805" width="1.9587%" height="15" fill="rgb(211,206,28)" fg:x="597" fg:w="18"/><text x="65.2119%" y="815.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (18 samples, 1.96%)</title><rect x="64.9619%" y="789" width="1.9587%" height="15" fill="rgb(237,167,16)" fg:x="597" fg:w="18"/><text x="65.2119%" y="799.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="66.8118%" y="773" width="0.1088%" height="15" fill="rgb(233,66,6)" fg:x="614" fg:w="1"/><text x="67.0618%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="66.8118%" y="757" width="0.1088%" height="15" fill="rgb(246,123,29)" fg:x="614" fg:w="1"/><text x="67.0618%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="66.8118%" y="741" width="0.1088%" height="15" fill="rgb(209,62,40)" fg:x="614" fg:w="1"/><text x="67.0618%" y="751.50"></text></g><g><title>&lt;chumsky::combinator::Rewind&lt;A&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="66.9206%" y="805" width="0.1088%" height="15" fill="rgb(218,4,25)" fg:x="615" fg:w="1"/><text x="67.1706%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Rewind&lt;A&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="66.9206%" y="789" width="0.1088%" height="15" fill="rgb(253,91,49)" fg:x="615" fg:w="1"/><text x="67.1706%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="66.9206%" y="773" width="0.1088%" height="15" fill="rgb(228,155,29)" fg:x="615" fg:w="1"/><text x="67.1706%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="66.9206%" y="757" width="0.1088%" height="15" fill="rgb(243,57,37)" fg:x="615" fg:w="1"/><text x="67.1706%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="66.9206%" y="741" width="0.1088%" height="15" fill="rgb(244,167,17)" fg:x="615" fg:w="1"/><text x="67.1706%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="66.9206%" y="725" width="0.1088%" height="15" fill="rgb(207,181,38)" fg:x="615" fg:w="1"/><text x="67.1706%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="66.9206%" y="709" width="0.1088%" height="15" fill="rgb(211,8,23)" fg:x="615" fg:w="1"/><text x="67.1706%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="66.9206%" y="693" width="0.1088%" height="15" fill="rgb(235,11,44)" fg:x="615" fg:w="1"/><text x="67.1706%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="66.9206%" y="677" width="0.1088%" height="15" fill="rgb(248,18,52)" fg:x="615" fg:w="1"/><text x="67.1706%" y="687.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="66.9206%" y="661" width="0.1088%" height="15" fill="rgb(208,4,7)" fg:x="615" fg:w="1"/><text x="67.1706%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="66.9206%" y="645" width="0.1088%" height="15" fill="rgb(240,17,39)" fg:x="615" fg:w="1"/><text x="67.1706%" y="655.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="66.9206%" y="629" width="0.1088%" height="15" fill="rgb(207,170,3)" fg:x="615" fg:w="1"/><text x="67.1706%" y="639.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="66.9206%" y="613" width="0.1088%" height="15" fill="rgb(236,100,52)" fg:x="615" fg:w="1"/><text x="67.1706%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="66.9206%" y="597" width="0.1088%" height="15" fill="rgb(246,78,51)" fg:x="615" fg:w="1"/><text x="67.1706%" y="607.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="66.9206%" y="581" width="0.1088%" height="15" fill="rgb(211,17,15)" fg:x="615" fg:w="1"/><text x="67.1706%" y="591.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (2 samples, 0.22%)</title><rect x="67.0294%" y="629" width="0.2176%" height="15" fill="rgb(209,59,46)" fg:x="616" fg:w="2"/><text x="67.2794%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="67.1382%" y="613" width="0.1088%" height="15" fill="rgb(210,92,25)" fg:x="617" fg:w="1"/><text x="67.3882%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="67.1382%" y="597" width="0.1088%" height="15" fill="rgb(238,174,52)" fg:x="617" fg:w="1"/><text x="67.3882%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="67.1382%" y="581" width="0.1088%" height="15" fill="rgb(230,73,7)" fg:x="617" fg:w="1"/><text x="67.3882%" y="591.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="67.1382%" y="565" width="0.1088%" height="15" fill="rgb(243,124,40)" fg:x="617" fg:w="1"/><text x="67.3882%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="67.1382%" y="549" width="0.1088%" height="15" fill="rgb(244,170,11)" fg:x="617" fg:w="1"/><text x="67.3882%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="67.1382%" y="533" width="0.1088%" height="15" fill="rgb(207,114,54)" fg:x="617" fg:w="1"/><text x="67.3882%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="67.1382%" y="517" width="0.1088%" height="15" fill="rgb(205,42,20)" fg:x="617" fg:w="1"/><text x="67.3882%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="67.1382%" y="501" width="0.1088%" height="15" fill="rgb(230,30,28)" fg:x="617" fg:w="1"/><text x="67.3882%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="67.1382%" y="485" width="0.1088%" height="15" fill="rgb(205,73,54)" fg:x="617" fg:w="1"/><text x="67.3882%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="67.1382%" y="469" width="0.1088%" height="15" fill="rgb(254,227,23)" fg:x="617" fg:w="1"/><text x="67.3882%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="67.1382%" y="453" width="0.1088%" height="15" fill="rgb(228,202,34)" fg:x="617" fg:w="1"/><text x="67.3882%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="67.1382%" y="437" width="0.1088%" height="15" fill="rgb(222,225,37)" fg:x="617" fg:w="1"/><text x="67.3882%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="67.1382%" y="421" width="0.1088%" height="15" fill="rgb(221,14,54)" fg:x="617" fg:w="1"/><text x="67.3882%" y="431.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="67.1382%" y="405" width="0.1088%" height="15" fill="rgb(254,102,2)" fg:x="617" fg:w="1"/><text x="67.3882%" y="415.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="67.1382%" y="389" width="0.1088%" height="15" fill="rgb(232,104,17)" fg:x="617" fg:w="1"/><text x="67.3882%" y="399.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (4 samples, 0.44%)</title><rect x="67.0294%" y="725" width="0.4353%" height="15" fill="rgb(250,220,14)" fg:x="616" fg:w="4"/><text x="67.2794%" y="735.50"></text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="67.0294%" y="709" width="0.4353%" height="15" fill="rgb(241,158,9)" fg:x="616" fg:w="4"/><text x="67.2794%" y="719.50"></text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="67.0294%" y="693" width="0.4353%" height="15" fill="rgb(246,9,43)" fg:x="616" fg:w="4"/><text x="67.2794%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (4 samples, 0.44%)</title><rect x="67.0294%" y="677" width="0.4353%" height="15" fill="rgb(206,73,33)" fg:x="616" fg:w="4"/><text x="67.2794%" y="687.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="67.0294%" y="661" width="0.4353%" height="15" fill="rgb(222,79,8)" fg:x="616" fg:w="4"/><text x="67.2794%" y="671.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="67.0294%" y="645" width="0.4353%" height="15" fill="rgb(234,8,54)" fg:x="616" fg:w="4"/><text x="67.2794%" y="655.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (2 samples, 0.22%)</title><rect x="67.2470%" y="629" width="0.2176%" height="15" fill="rgb(209,134,38)" fg:x="618" fg:w="2"/><text x="67.4970%" y="639.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="67.2470%" y="613" width="0.2176%" height="15" fill="rgb(230,127,29)" fg:x="618" fg:w="2"/><text x="67.4970%" y="623.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (7 samples, 0.76%)</title><rect x="66.9206%" y="821" width="0.7617%" height="15" fill="rgb(242,44,41)" fg:x="615" fg:w="7"/><text x="67.1706%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="67.0294%" y="805" width="0.6529%" height="15" fill="rgb(222,56,43)" fg:x="616" fg:w="6"/><text x="67.2794%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="67.0294%" y="789" width="0.6529%" height="15" fill="rgb(238,39,47)" fg:x="616" fg:w="6"/><text x="67.2794%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (6 samples, 0.65%)</title><rect x="67.0294%" y="773" width="0.6529%" height="15" fill="rgb(226,79,43)" fg:x="616" fg:w="6"/><text x="67.2794%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="67.0294%" y="757" width="0.6529%" height="15" fill="rgb(242,105,53)" fg:x="616" fg:w="6"/><text x="67.2794%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="67.0294%" y="741" width="0.6529%" height="15" fill="rgb(251,132,46)" fg:x="616" fg:w="6"/><text x="67.2794%" y="751.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="67.4646%" y="725" width="0.2176%" height="15" fill="rgb(231,77,14)" fg:x="620" fg:w="2"/><text x="67.7146%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (9 samples, 0.98%)</title><rect x="66.9206%" y="853" width="0.9793%" height="15" fill="rgb(240,135,9)" fg:x="615" fg:w="9"/><text x="67.1706%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (9 samples, 0.98%)</title><rect x="66.9206%" y="837" width="0.9793%" height="15" fill="rgb(248,109,14)" fg:x="615" fg:w="9"/><text x="67.1706%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="67.6823%" y="821" width="0.2176%" height="15" fill="rgb(227,146,52)" fg:x="622" fg:w="2"/><text x="67.9323%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="68.0087%" y="661" width="0.1088%" height="15" fill="rgb(232,54,3)" fg:x="625" fg:w="1"/><text x="68.2587%" y="671.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="68.0087%" y="645" width="0.1088%" height="15" fill="rgb(229,201,43)" fg:x="625" fg:w="1"/><text x="68.2587%" y="655.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="68.0087%" y="629" width="0.1088%" height="15" fill="rgb(252,161,33)" fg:x="625" fg:w="1"/><text x="68.2587%" y="639.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="68.0087%" y="613" width="0.1088%" height="15" fill="rgb(226,146,40)" fg:x="625" fg:w="1"/><text x="68.2587%" y="623.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="68.0087%" y="597" width="0.1088%" height="15" fill="rgb(219,47,25)" fg:x="625" fg:w="1"/><text x="68.2587%" y="607.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="68.1175%" y="597" width="0.1088%" height="15" fill="rgb(250,135,13)" fg:x="626" fg:w="1"/><text x="68.3675%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="68.1175%" y="581" width="0.1088%" height="15" fill="rgb(219,229,18)" fg:x="626" fg:w="1"/><text x="68.3675%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="68.1175%" y="565" width="0.1088%" height="15" fill="rgb(217,152,27)" fg:x="626" fg:w="1"/><text x="68.3675%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="68.1175%" y="549" width="0.1088%" height="15" fill="rgb(225,71,47)" fg:x="626" fg:w="1"/><text x="68.3675%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="68.1175%" y="533" width="0.1088%" height="15" fill="rgb(220,139,14)" fg:x="626" fg:w="1"/><text x="68.3675%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="68.1175%" y="517" width="0.1088%" height="15" fill="rgb(247,54,32)" fg:x="626" fg:w="1"/><text x="68.3675%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="68.1175%" y="501" width="0.1088%" height="15" fill="rgb(252,131,39)" fg:x="626" fg:w="1"/><text x="68.3675%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="68.1175%" y="485" width="0.1088%" height="15" fill="rgb(210,108,39)" fg:x="626" fg:w="1"/><text x="68.3675%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="68.1175%" y="469" width="0.1088%" height="15" fill="rgb(205,23,29)" fg:x="626" fg:w="1"/><text x="68.3675%" y="479.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (87 samples, 9.47%)</title><rect x="59.0860%" y="869" width="9.4668%" height="15" fill="rgb(246,139,46)" fg:x="543" fg:w="87"/><text x="59.3360%" y="879.50">&lt;chumsky::debu..</text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="67.8999%" y="853" width="0.6529%" height="15" fill="rgb(250,81,26)" fg:x="624" fg:w="6"/><text x="68.1499%" y="863.50"></text></g><g><title>&lt;chumsky::combinator::TryMap&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="67.8999%" y="837" width="0.6529%" height="15" fill="rgb(214,104,7)" fg:x="624" fg:w="6"/><text x="68.1499%" y="847.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (6 samples, 0.65%)</title><rect x="67.8999%" y="821" width="0.6529%" height="15" fill="rgb(233,189,8)" fg:x="624" fg:w="6"/><text x="68.1499%" y="831.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="67.8999%" y="805" width="0.6529%" height="15" fill="rgb(228,141,17)" fg:x="624" fg:w="6"/><text x="68.1499%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="67.8999%" y="789" width="0.6529%" height="15" fill="rgb(247,157,1)" fg:x="624" fg:w="6"/><text x="68.1499%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="68.0087%" y="773" width="0.5441%" height="15" fill="rgb(249,225,5)" fg:x="625" fg:w="5"/><text x="68.2587%" y="783.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="68.0087%" y="757" width="0.5441%" height="15" fill="rgb(242,55,13)" fg:x="625" fg:w="5"/><text x="68.2587%" y="767.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="68.0087%" y="741" width="0.5441%" height="15" fill="rgb(230,49,50)" fg:x="625" fg:w="5"/><text x="68.2587%" y="751.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="68.0087%" y="725" width="0.5441%" height="15" fill="rgb(241,111,38)" fg:x="625" fg:w="5"/><text x="68.2587%" y="735.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="68.0087%" y="709" width="0.5441%" height="15" fill="rgb(252,155,4)" fg:x="625" fg:w="5"/><text x="68.2587%" y="719.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="68.0087%" y="693" width="0.5441%" height="15" fill="rgb(212,69,32)" fg:x="625" fg:w="5"/><text x="68.2587%" y="703.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (5 samples, 0.54%)</title><rect x="68.0087%" y="677" width="0.5441%" height="15" fill="rgb(243,107,47)" fg:x="625" fg:w="5"/><text x="68.2587%" y="687.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="68.1175%" y="661" width="0.4353%" height="15" fill="rgb(247,130,12)" fg:x="626" fg:w="4"/><text x="68.3675%" y="671.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="68.1175%" y="645" width="0.4353%" height="15" fill="rgb(233,74,16)" fg:x="626" fg:w="4"/><text x="68.3675%" y="655.50"></text></g><g><title>chumsky::error::merge_alts (4 samples, 0.44%)</title><rect x="68.1175%" y="629" width="0.4353%" height="15" fill="rgb(208,58,18)" fg:x="626" fg:w="4"/><text x="68.3675%" y="639.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (4 samples, 0.44%)</title><rect x="68.1175%" y="613" width="0.4353%" height="15" fill="rgb(242,225,1)" fg:x="626" fg:w="4"/><text x="68.3675%" y="623.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="68.2263%" y="597" width="0.3264%" height="15" fill="rgb(249,39,40)" fg:x="627" fg:w="3"/><text x="68.4763%" y="607.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="68.5528%" y="869" width="0.1088%" height="15" fill="rgb(207,72,44)" fg:x="630" fg:w="1"/><text x="68.8028%" y="879.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (104 samples, 11.32%)</title><rect x="57.4538%" y="933" width="11.3166%" height="15" fill="rgb(215,193,12)" fg:x="528" fg:w="104"/><text x="57.7038%" y="943.50">&lt;chumsky::primiti..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (104 samples, 11.32%)</title><rect x="57.4538%" y="917" width="11.3166%" height="15" fill="rgb(248,41,39)" fg:x="528" fg:w="104"/><text x="57.7038%" y="927.50">&lt;chumsky::debug::..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (92 samples, 10.01%)</title><rect x="58.7595%" y="901" width="10.0109%" height="15" fill="rgb(253,85,4)" fg:x="540" fg:w="92"/><text x="59.0095%" y="911.50">&lt;chumsky::comb..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (92 samples, 10.01%)</title><rect x="58.7595%" y="885" width="10.0109%" height="15" fill="rgb(243,70,31)" fg:x="540" fg:w="92"/><text x="59.0095%" y="895.50">&lt;chumsky::comb..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="68.6616%" y="869" width="0.1088%" height="15" fill="rgb(253,195,26)" fg:x="631" fg:w="1"/><text x="68.9116%" y="879.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (437 samples, 47.55%)</title><rect x="21.5452%" y="1029" width="47.5517%" height="15" fill="rgb(243,42,11)" fg:x="198" fg:w="437"/><text x="21.7952%" y="1039.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (197 samples, 21.44%)</title><rect x="47.6605%" y="1013" width="21.4363%" height="15" fill="rgb(239,66,17)" fg:x="438" fg:w="197"/><text x="47.9105%" y="1023.50">&lt;chumsky::primitive::Choice&lt;(Q_,S_..</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(Q_,S_,T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (197 samples, 21.44%)</title><rect x="47.6605%" y="997" width="21.4363%" height="15" fill="rgb(217,132,21)" fg:x="438" fg:w="197"/><text x="47.9105%" y="1007.50">&lt;chumsky::primitive::Choice&lt;(Q_,S_..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (113 samples, 12.30%)</title><rect x="56.8009%" y="981" width="12.2960%" height="15" fill="rgb(252,202,21)" fg:x="522" fg:w="113"/><text x="57.0509%" y="991.50">chumsky::stream::S..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (113 samples, 12.30%)</title><rect x="56.8009%" y="965" width="12.2960%" height="15" fill="rgb(233,98,36)" fg:x="522" fg:w="113"/><text x="57.0509%" y="975.50">chumsky::stream::S..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (107 samples, 11.64%)</title><rect x="57.4538%" y="949" width="11.6431%" height="15" fill="rgb(216,153,54)" fg:x="528" fg:w="107"/><text x="57.7038%" y="959.50">chumsky::stream::..</text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="68.7704%" y="933" width="0.3264%" height="15" fill="rgb(250,99,7)" fg:x="632" fg:w="3"/><text x="69.0204%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (443 samples, 48.20%)</title><rect x="21.0011%" y="1061" width="48.2046%" height="15" fill="rgb(207,56,50)" fg:x="193" fg:w="443"/><text x="21.2511%" y="1071.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (443 samples, 48.20%)</title><rect x="21.0011%" y="1045" width="48.2046%" height="15" fill="rgb(244,61,34)" fg:x="193" fg:w="443"/><text x="21.2511%" y="1055.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="69.0968%" y="1029" width="0.1088%" height="15" fill="rgb(241,50,38)" fg:x="635" fg:w="1"/><text x="69.3468%" y="1039.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="69.6409%" y="677" width="0.1088%" height="15" fill="rgb(212,166,30)" fg:x="640" fg:w="1"/><text x="69.8909%" y="687.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="69.6409%" y="661" width="0.1088%" height="15" fill="rgb(249,127,32)" fg:x="640" fg:w="1"/><text x="69.8909%" y="671.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="69.6409%" y="645" width="0.1088%" height="15" fill="rgb(209,103,0)" fg:x="640" fg:w="1"/><text x="69.8909%" y="655.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="69.6409%" y="629" width="0.1088%" height="15" fill="rgb(238,209,51)" fg:x="640" fg:w="1"/><text x="69.8909%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="69.6409%" y="613" width="0.1088%" height="15" fill="rgb(237,56,23)" fg:x="640" fg:w="1"/><text x="69.8909%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="69.6409%" y="597" width="0.1088%" height="15" fill="rgb(215,153,46)" fg:x="640" fg:w="1"/><text x="69.8909%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="69.6409%" y="581" width="0.1088%" height="15" fill="rgb(224,49,31)" fg:x="640" fg:w="1"/><text x="69.8909%" y="591.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="69.3145%" y="869" width="0.6529%" height="15" fill="rgb(250,18,42)" fg:x="637" fg:w="6"/><text x="69.5645%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="69.3145%" y="853" width="0.6529%" height="15" fill="rgb(215,176,39)" fg:x="637" fg:w="6"/><text x="69.5645%" y="863.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (6 samples, 0.65%)</title><rect x="69.3145%" y="837" width="0.6529%" height="15" fill="rgb(223,77,29)" fg:x="637" fg:w="6"/><text x="69.5645%" y="847.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (6 samples, 0.65%)</title><rect x="69.3145%" y="821" width="0.6529%" height="15" fill="rgb(234,94,52)" fg:x="637" fg:w="6"/><text x="69.5645%" y="831.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (6 samples, 0.65%)</title><rect x="69.3145%" y="805" width="0.6529%" height="15" fill="rgb(220,154,50)" fg:x="637" fg:w="6"/><text x="69.5645%" y="815.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (4 samples, 0.44%)</title><rect x="69.5321%" y="789" width="0.4353%" height="15" fill="rgb(212,11,10)" fg:x="639" fg:w="4"/><text x="69.7821%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (4 samples, 0.44%)</title><rect x="69.5321%" y="773" width="0.4353%" height="15" fill="rgb(205,166,19)" fg:x="639" fg:w="4"/><text x="69.7821%" y="783.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (4 samples, 0.44%)</title><rect x="69.5321%" y="757" width="0.4353%" height="15" fill="rgb(244,198,16)" fg:x="639" fg:w="4"/><text x="69.7821%" y="767.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (4 samples, 0.44%)</title><rect x="69.5321%" y="741" width="0.4353%" height="15" fill="rgb(219,69,12)" fg:x="639" fg:w="4"/><text x="69.7821%" y="751.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (4 samples, 0.44%)</title><rect x="69.5321%" y="725" width="0.4353%" height="15" fill="rgb(245,30,7)" fg:x="639" fg:w="4"/><text x="69.7821%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.33%)</title><rect x="69.6409%" y="709" width="0.3264%" height="15" fill="rgb(218,221,48)" fg:x="640" fg:w="3"/><text x="69.8909%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.33%)</title><rect x="69.6409%" y="693" width="0.3264%" height="15" fill="rgb(216,66,15)" fg:x="640" fg:w="3"/><text x="69.8909%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="69.7497%" y="677" width="0.2176%" height="15" fill="rgb(226,122,50)" fg:x="641" fg:w="2"/><text x="69.9997%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="69.7497%" y="661" width="0.2176%" height="15" fill="rgb(239,156,16)" fg:x="641" fg:w="2"/><text x="69.9997%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="69.7497%" y="645" width="0.2176%" height="15" fill="rgb(224,27,38)" fg:x="641" fg:w="2"/><text x="69.9997%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.22%)</title><rect x="69.7497%" y="629" width="0.2176%" height="15" fill="rgb(224,39,27)" fg:x="641" fg:w="2"/><text x="69.9997%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.22%)</title><rect x="69.7497%" y="613" width="0.2176%" height="15" fill="rgb(215,92,29)" fg:x="641" fg:w="2"/><text x="69.9997%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.22%)</title><rect x="69.7497%" y="597" width="0.2176%" height="15" fill="rgb(207,159,16)" fg:x="641" fg:w="2"/><text x="69.9997%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.22%)</title><rect x="69.7497%" y="581" width="0.2176%" height="15" fill="rgb(238,163,47)" fg:x="641" fg:w="2"/><text x="69.9997%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.22%)</title><rect x="69.7497%" y="565" width="0.2176%" height="15" fill="rgb(219,91,49)" fg:x="641" fg:w="2"/><text x="69.9997%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (2 samples, 0.22%)</title><rect x="69.7497%" y="549" width="0.2176%" height="15" fill="rgb(227,167,31)" fg:x="641" fg:w="2"/><text x="69.9997%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="69.7497%" y="533" width="0.2176%" height="15" fill="rgb(234,80,54)" fg:x="641" fg:w="2"/><text x="69.9997%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="69.7497%" y="517" width="0.2176%" height="15" fill="rgb(212,114,2)" fg:x="641" fg:w="2"/><text x="69.9997%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="69.7497%" y="501" width="0.2176%" height="15" fill="rgb(234,50,24)" fg:x="641" fg:w="2"/><text x="69.9997%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="69.7497%" y="485" width="0.2176%" height="15" fill="rgb(221,68,8)" fg:x="641" fg:w="2"/><text x="69.9997%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.11%)</title><rect x="69.8585%" y="469" width="0.1088%" height="15" fill="rgb(254,180,31)" fg:x="642" fg:w="1"/><text x="70.1085%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="69.8585%" y="453" width="0.1088%" height="15" fill="rgb(247,130,50)" fg:x="642" fg:w="1"/><text x="70.1085%" y="463.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="69.9674%" y="789" width="0.1088%" height="15" fill="rgb(211,109,4)" fg:x="643" fg:w="1"/><text x="70.2174%" y="799.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.11%)</title><rect x="69.9674%" y="773" width="0.1088%" height="15" fill="rgb(238,50,21)" fg:x="643" fg:w="1"/><text x="70.2174%" y="783.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.11%)</title><rect x="69.9674%" y="757" width="0.1088%" height="15" fill="rgb(225,57,45)" fg:x="643" fg:w="1"/><text x="70.2174%" y="767.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="69.9674%" y="741" width="0.1088%" height="15" fill="rgb(209,196,50)" fg:x="643" fg:w="1"/><text x="70.2174%" y="751.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="69.9674%" y="725" width="0.1088%" height="15" fill="rgb(242,140,13)" fg:x="643" fg:w="1"/><text x="70.2174%" y="735.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="69.9674%" y="709" width="0.1088%" height="15" fill="rgb(217,111,7)" fg:x="643" fg:w="1"/><text x="70.2174%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="69.9674%" y="693" width="0.1088%" height="15" fill="rgb(253,193,51)" fg:x="643" fg:w="1"/><text x="70.2174%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.11%)</title><rect x="70.0762%" y="741" width="0.1088%" height="15" fill="rgb(252,70,29)" fg:x="644" fg:w="1"/><text x="70.3262%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.11%)</title><rect x="70.0762%" y="725" width="0.1088%" height="15" fill="rgb(232,127,12)" fg:x="644" fg:w="1"/><text x="70.3262%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.11%)</title><rect x="70.0762%" y="709" width="0.1088%" height="15" fill="rgb(211,180,21)" fg:x="644" fg:w="1"/><text x="70.3262%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.11%)</title><rect x="70.0762%" y="693" width="0.1088%" height="15" fill="rgb(229,72,13)" fg:x="644" fg:w="1"/><text x="70.3262%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.11%)</title><rect x="70.0762%" y="677" width="0.1088%" height="15" fill="rgb(240,211,49)" fg:x="644" fg:w="1"/><text x="70.3262%" y="687.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.11%)</title><rect x="70.0762%" y="661" width="0.1088%" height="15" fill="rgb(219,149,40)" fg:x="644" fg:w="1"/><text x="70.3262%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="70.0762%" y="645" width="0.1088%" height="15" fill="rgb(210,127,46)" fg:x="644" fg:w="1"/><text x="70.3262%" y="655.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="70.0762%" y="789" width="0.2176%" height="15" fill="rgb(220,106,7)" fg:x="644" fg:w="2"/><text x="70.3262%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="70.0762%" y="773" width="0.2176%" height="15" fill="rgb(249,31,22)" fg:x="644" fg:w="2"/><text x="70.3262%" y="783.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.22%)</title><rect x="70.0762%" y="757" width="0.2176%" height="15" fill="rgb(253,1,49)" fg:x="644" fg:w="2"/><text x="70.3262%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="70.1850%" y="741" width="0.1088%" height="15" fill="rgb(227,144,33)" fg:x="645" fg:w="1"/><text x="70.4350%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="70.1850%" y="725" width="0.1088%" height="15" fill="rgb(249,163,44)" fg:x="645" fg:w="1"/><text x="70.4350%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="70.1850%" y="709" width="0.1088%" height="15" fill="rgb(234,15,39)" fg:x="645" fg:w="1"/><text x="70.4350%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="70.1850%" y="693" width="0.1088%" height="15" fill="rgb(207,66,16)" fg:x="645" fg:w="1"/><text x="70.4350%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="70.1850%" y="677" width="0.1088%" height="15" fill="rgb(233,112,24)" fg:x="645" fg:w="1"/><text x="70.4350%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="70.1850%" y="661" width="0.1088%" height="15" fill="rgb(230,90,22)" fg:x="645" fg:w="1"/><text x="70.4350%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="70.1850%" y="645" width="0.1088%" height="15" fill="rgb(229,61,13)" fg:x="645" fg:w="1"/><text x="70.4350%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.11%)</title><rect x="70.1850%" y="629" width="0.1088%" height="15" fill="rgb(225,57,24)" fg:x="645" fg:w="1"/><text x="70.4350%" y="639.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.11%)</title><rect x="70.1850%" y="613" width="0.1088%" height="15" fill="rgb(208,169,48)" fg:x="645" fg:w="1"/><text x="70.4350%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="70.1850%" y="597" width="0.1088%" height="15" fill="rgb(244,218,51)" fg:x="645" fg:w="1"/><text x="70.4350%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="70.1850%" y="581" width="0.1088%" height="15" fill="rgb(214,148,10)" fg:x="645" fg:w="1"/><text x="70.4350%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="70.1850%" y="565" width="0.1088%" height="15" fill="rgb(225,174,27)" fg:x="645" fg:w="1"/><text x="70.4350%" y="575.50"></text></g><g><title>__rust_alloc (1 samples, 0.11%)</title><rect x="70.1850%" y="549" width="0.1088%" height="15" fill="rgb(230,96,26)" fg:x="645" fg:w="1"/><text x="70.4350%" y="559.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (4 samples, 0.44%)</title><rect x="69.9674%" y="837" width="0.4353%" height="15" fill="rgb(232,10,30)" fg:x="643" fg:w="4"/><text x="70.2174%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.44%)</title><rect x="69.9674%" y="821" width="0.4353%" height="15" fill="rgb(222,8,50)" fg:x="643" fg:w="4"/><text x="70.2174%" y="831.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.44%)</title><rect x="69.9674%" y="805" width="0.4353%" height="15" fill="rgb(213,81,27)" fg:x="643" fg:w="4"/><text x="70.2174%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="70.2938%" y="789" width="0.1088%" height="15" fill="rgb(245,50,10)" fg:x="646" fg:w="1"/><text x="70.5438%" y="799.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (12 samples, 1.31%)</title><rect x="69.3145%" y="885" width="1.3058%" height="15" fill="rgb(216,100,18)" fg:x="637" fg:w="12"/><text x="69.5645%" y="895.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (6 samples, 0.65%)</title><rect x="69.9674%" y="869" width="0.6529%" height="15" fill="rgb(236,147,54)" fg:x="643" fg:w="6"/><text x="70.2174%" y="879.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (6 samples, 0.65%)</title><rect x="69.9674%" y="853" width="0.6529%" height="15" fill="rgb(205,143,26)" fg:x="643" fg:w="6"/><text x="70.2174%" y="863.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (2 samples, 0.22%)</title><rect x="70.4026%" y="837" width="0.2176%" height="15" fill="rgb(236,26,9)" fg:x="647" fg:w="2"/><text x="70.6526%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="70.4026%" y="821" width="0.2176%" height="15" fill="rgb(221,165,53)" fg:x="647" fg:w="2"/><text x="70.6526%" y="831.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="70.8379%" y="853" width="0.1088%" height="15" fill="rgb(214,110,17)" fg:x="651" fg:w="1"/><text x="71.0879%" y="863.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (4 samples, 0.44%)</title><rect x="70.6202%" y="869" width="0.4353%" height="15" fill="rgb(237,197,12)" fg:x="649" fg:w="4"/><text x="70.8702%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="70.9467%" y="853" width="0.1088%" height="15" fill="rgb(205,84,17)" fg:x="652" fg:w="1"/><text x="71.1967%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="70.9467%" y="837" width="0.1088%" height="15" fill="rgb(237,18,45)" fg:x="652" fg:w="1"/><text x="71.1967%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="70.9467%" y="821" width="0.1088%" height="15" fill="rgb(221,87,14)" fg:x="652" fg:w="1"/><text x="71.1967%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="70.9467%" y="805" width="0.1088%" height="15" fill="rgb(238,186,15)" fg:x="652" fg:w="1"/><text x="71.1967%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.11%)</title><rect x="70.9467%" y="789" width="0.1088%" height="15" fill="rgb(208,115,11)" fg:x="652" fg:w="1"/><text x="71.1967%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.11%)</title><rect x="70.9467%" y="773" width="0.1088%" height="15" fill="rgb(254,175,0)" fg:x="652" fg:w="1"/><text x="71.1967%" y="783.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.11%)</title><rect x="70.9467%" y="757" width="0.1088%" height="15" fill="rgb(227,24,42)" fg:x="652" fg:w="1"/><text x="71.1967%" y="767.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (18 samples, 1.96%)</title><rect x="69.3145%" y="981" width="1.9587%" height="15" fill="rgb(223,211,37)" fg:x="637" fg:w="18"/><text x="69.5645%" y="991.50">&lt;..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (18 samples, 1.96%)</title><rect x="69.3145%" y="965" width="1.9587%" height="15" fill="rgb(235,49,27)" fg:x="637" fg:w="18"/><text x="69.5645%" y="975.50">&lt;..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (18 samples, 1.96%)</title><rect x="69.3145%" y="949" width="1.9587%" height="15" fill="rgb(254,97,51)" fg:x="637" fg:w="18"/><text x="69.5645%" y="959.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (18 samples, 1.96%)</title><rect x="69.3145%" y="933" width="1.9587%" height="15" fill="rgb(249,51,40)" fg:x="637" fg:w="18"/><text x="69.5645%" y="943.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (18 samples, 1.96%)</title><rect x="69.3145%" y="917" width="1.9587%" height="15" fill="rgb(210,128,45)" fg:x="637" fg:w="18"/><text x="69.5645%" y="927.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (18 samples, 1.96%)</title><rect x="69.3145%" y="901" width="1.9587%" height="15" fill="rgb(224,137,50)" fg:x="637" fg:w="18"/><text x="69.5645%" y="911.50">&lt;..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (6 samples, 0.65%)</title><rect x="70.6202%" y="885" width="0.6529%" height="15" fill="rgb(242,15,9)" fg:x="649" fg:w="6"/><text x="70.8702%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="71.0555%" y="869" width="0.2176%" height="15" fill="rgb(233,187,41)" fg:x="653" fg:w="2"/><text x="71.3055%" y="879.50"></text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (463 samples, 50.38%)</title><rect x="21.0011%" y="1093" width="50.3808%" height="15" fill="rgb(227,2,29)" fg:x="193" fg:w="463"/><text x="21.2511%" y="1103.50">&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::par..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (463 samples, 50.38%)</title><rect x="21.0011%" y="1077" width="50.3808%" height="15" fill="rgb(222,70,3)" fg:x="193" fg:w="463"/><text x="21.2511%" y="1087.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (20 samples, 2.18%)</title><rect x="69.2057%" y="1061" width="2.1763%" height="15" fill="rgb(213,11,42)" fg:x="636" fg:w="20"/><text x="69.4557%" y="1071.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (20 samples, 2.18%)</title><rect x="69.2057%" y="1045" width="2.1763%" height="15" fill="rgb(225,150,9)" fg:x="636" fg:w="20"/><text x="69.4557%" y="1055.50">&lt;..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (20 samples, 2.18%)</title><rect x="69.2057%" y="1029" width="2.1763%" height="15" fill="rgb(230,162,45)" fg:x="636" fg:w="20"/><text x="69.4557%" y="1039.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (20 samples, 2.18%)</title><rect x="69.2057%" y="1013" width="2.1763%" height="15" fill="rgb(222,14,52)" fg:x="636" fg:w="20"/><text x="69.4557%" y="1023.50">&lt;..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (20 samples, 2.18%)</title><rect x="69.2057%" y="997" width="2.1763%" height="15" fill="rgb(254,198,14)" fg:x="636" fg:w="20"/><text x="69.4557%" y="1007.50">&lt;..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="71.2731%" y="981" width="0.1088%" height="15" fill="rgb(220,217,30)" fg:x="655" fg:w="1"/><text x="71.5231%" y="991.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (469 samples, 51.03%)</title><rect x="20.4570%" y="1141" width="51.0337%" height="15" fill="rgb(215,146,41)" fg:x="188" fg:w="469"/><text x="20.7070%" y="1151.50">chumsky::stream::Stream&lt;I,S&gt;::try_parse</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (469 samples, 51.03%)</title><rect x="20.4570%" y="1125" width="51.0337%" height="15" fill="rgb(217,27,36)" fg:x="188" fg:w="469"/><text x="20.7070%" y="1135.50">chumsky::stream::Stream&lt;I,S&gt;::attempt</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (464 samples, 50.49%)</title><rect x="21.0011%" y="1109" width="50.4897%" height="15" fill="rgb(219,218,39)" fg:x="193" fg:w="464"/><text x="21.2511%" y="1119.50">chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}}</text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="71.3819%" y="1093" width="0.1088%" height="15" fill="rgb(219,4,42)" fg:x="656" fg:w="1"/><text x="71.6319%" y="1103.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (543 samples, 59.09%)</title><rect x="12.5136%" y="1301" width="59.0860%" height="15" fill="rgb(249,119,36)" fg:x="115" fg:w="543"/><text x="12.7636%" y="1311.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (543 samples, 59.09%)</title><rect x="12.5136%" y="1285" width="59.0860%" height="15" fill="rgb(209,23,33)" fg:x="115" fg:w="543"/><text x="12.7636%" y="1295.50">&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (543 samples, 59.09%)</title><rect x="12.5136%" y="1269" width="59.0860%" height="15" fill="rgb(211,10,0)" fg:x="115" fg:w="543"/><text x="12.7636%" y="1279.50">&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (543 samples, 59.09%)</title><rect x="12.5136%" y="1253" width="59.0860%" height="15" fill="rgb(208,99,37)" fg:x="115" fg:w="543"/><text x="12.7636%" y="1263.50">chumsky::stream::Stream&lt;I,S&gt;::try_parse</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (543 samples, 59.09%)</title><rect x="12.5136%" y="1237" width="59.0860%" height="15" fill="rgb(213,132,31)" fg:x="115" fg:w="543"/><text x="12.7636%" y="1247.50">chumsky::stream::Stream&lt;I,S&gt;::attempt</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (540 samples, 58.76%)</title><rect x="12.8400%" y="1221" width="58.7595%" height="15" fill="rgb(243,129,40)" fg:x="118" fg:w="540"/><text x="13.0900%" y="1231.50">chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}}</text></g><g><title>&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}} (540 samples, 58.76%)</title><rect x="12.8400%" y="1205" width="58.7595%" height="15" fill="rgb(210,66,33)" fg:x="118" fg:w="540"/><text x="13.0900%" y="1215.50">&lt;chumsky::recovery::Recovery&lt;A,S&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::{{closure}}</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (540 samples, 58.76%)</title><rect x="12.8400%" y="1189" width="58.7595%" height="15" fill="rgb(209,189,4)" fg:x="118" fg:w="540"/><text x="13.0900%" y="1199.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (539 samples, 58.65%)</title><rect x="12.9489%" y="1173" width="58.6507%" height="15" fill="rgb(214,107,37)" fg:x="119" fg:w="539"/><text x="13.1989%" y="1183.50">&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (539 samples, 58.65%)</title><rect x="12.9489%" y="1157" width="58.6507%" height="15" fill="rgb(245,88,54)" fg:x="119" fg:w="539"/><text x="13.1989%" y="1167.50">&lt;chumsky::primitive::Choice&lt;(T_,U_,V_,W_,X_,Y_,Z_),E&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1141" width="0.1088%" height="15" fill="rgb(205,146,20)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1125" width="0.1088%" height="15" fill="rgb(220,161,25)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;chumsky::error::Simple&lt;char&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1109" width="0.1088%" height="15" fill="rgb(215,152,15)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;core::option::Option&lt;char&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1093" width="0.1088%" height="15" fill="rgb(233,192,44)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;core::option::Option&lt;char&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1077" width="0.1088%" height="15" fill="rgb(240,170,46)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::option::Option&lt;char&gt;,(),ahash::random_state::RandomState&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1061" width="0.1088%" height="15" fill="rgb(207,104,33)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (1 samples, 0.11%)</title><rect x="71.4908%" y="1045" width="0.1088%" height="15" fill="rgb(219,21,39)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="71.4908%" y="1029" width="0.1088%" height="15" fill="rgb(214,133,29)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.11%)</title><rect x="71.4908%" y="1013" width="0.1088%" height="15" fill="rgb(226,93,6)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.11%)</title><rect x="71.4908%" y="997" width="0.1088%" height="15" fill="rgb(252,222,34)" fg:x="657" fg:w="1"/><text x="71.7408%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="71.4908%" y="981" width="0.1088%" height="15" fill="rgb(252,92,48)" fg:x="657" fg:w="1"/><text x="71.7408%" y="991.50"></text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (546 samples, 59.41%)</title><rect x="12.4048%" y="1333" width="59.4124%" height="15" fill="rgb(245,223,24)" fg:x="114" fg:w="546"/><text x="12.6548%" y="1343.50">&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (546 samples, 59.41%)</title><rect x="12.4048%" y="1317" width="59.4124%" height="15" fill="rgb(205,176,3)" fg:x="114" fg:w="546"/><text x="12.6548%" y="1327.50">&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner</text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.22%)</title><rect x="71.5996%" y="1301" width="0.2176%" height="15" fill="rgb(235,151,15)" fg:x="658" fg:w="2"/><text x="71.8496%" y="1311.50"></text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner::{{closure}} (2 samples, 0.22%)</title><rect x="71.5996%" y="1285" width="0.2176%" height="15" fill="rgb(237,209,11)" fg:x="658" fg:w="2"/><text x="71.8496%" y="1295.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::span_since (1 samples, 0.11%)</title><rect x="71.7084%" y="1269" width="0.1088%" height="15" fill="rgb(243,227,24)" fg:x="659" fg:w="1"/><text x="71.9584%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.11%)</title><rect x="71.9260%" y="1301" width="0.1088%" height="15" fill="rgb(239,193,16)" fg:x="661" fg:w="1"/><text x="72.1760%" y="1311.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (3 samples, 0.33%)</title><rect x="72.1436%" y="1205" width="0.3264%" height="15" fill="rgb(231,27,9)" fg:x="663" fg:w="3"/><text x="72.3936%" y="1215.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (3 samples, 0.33%)</title><rect x="72.1436%" y="1189" width="0.3264%" height="15" fill="rgb(219,169,10)" fg:x="663" fg:w="3"/><text x="72.3936%" y="1199.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="72.3613%" y="1173" width="0.1088%" height="15" fill="rgb(244,229,43)" fg:x="665" fg:w="1"/><text x="72.6113%" y="1183.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="72.3613%" y="1157" width="0.1088%" height="15" fill="rgb(254,38,20)" fg:x="665" fg:w="1"/><text x="72.6113%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="72.3613%" y="1141" width="0.1088%" height="15" fill="rgb(250,47,30)" fg:x="665" fg:w="1"/><text x="72.6113%" y="1151.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (4 samples, 0.44%)</title><rect x="72.1436%" y="1221" width="0.4353%" height="15" fill="rgb(224,124,36)" fg:x="663" fg:w="4"/><text x="72.3936%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="72.4701%" y="1205" width="0.1088%" height="15" fill="rgb(246,68,51)" fg:x="666" fg:w="1"/><text x="72.7201%" y="1215.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="73.0141%" y="1029" width="0.2176%" height="15" fill="rgb(253,43,49)" fg:x="671" fg:w="2"/><text x="73.2641%" y="1039.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="73.4494%" y="933" width="0.4353%" height="15" fill="rgb(219,54,36)" fg:x="675" fg:w="4"/><text x="73.6994%" y="943.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (7 samples, 0.76%)</title><rect x="73.3406%" y="949" width="0.7617%" height="15" fill="rgb(227,133,34)" fg:x="674" fg:w="7"/><text x="73.5906%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (2 samples, 0.22%)</title><rect x="73.8847%" y="933" width="0.2176%" height="15" fill="rgb(247,227,15)" fg:x="679" fg:w="2"/><text x="74.1347%" y="943.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (4 samples, 0.44%)</title><rect x="74.3199%" y="821" width="0.4353%" height="15" fill="rgb(229,96,14)" fg:x="683" fg:w="4"/><text x="74.5699%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.22%)</title><rect x="74.7552%" y="789" width="0.2176%" height="15" fill="rgb(220,79,17)" fg:x="687" fg:w="2"/><text x="75.0052%" y="799.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.22%)</title><rect x="74.7552%" y="773" width="0.2176%" height="15" fill="rgb(205,131,53)" fg:x="687" fg:w="2"/><text x="75.0052%" y="783.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.11%)</title><rect x="74.8640%" y="757" width="0.1088%" height="15" fill="rgb(209,50,29)" fg:x="688" fg:w="1"/><text x="75.1140%" y="767.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (3 samples, 0.33%)</title><rect x="74.7552%" y="821" width="0.3264%" height="15" fill="rgb(245,86,46)" fg:x="687" fg:w="3"/><text x="75.0052%" y="831.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (3 samples, 0.33%)</title><rect x="74.7552%" y="805" width="0.3264%" height="15" fill="rgb(235,66,46)" fg:x="687" fg:w="3"/><text x="75.0052%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="74.9728%" y="789" width="0.1088%" height="15" fill="rgb(232,148,31)" fg:x="689" fg:w="1"/><text x="75.2228%" y="799.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="74.9728%" y="773" width="0.1088%" height="15" fill="rgb(217,149,8)" fg:x="689" fg:w="1"/><text x="75.2228%" y="783.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="74.9728%" y="757" width="0.1088%" height="15" fill="rgb(209,183,11)" fg:x="689" fg:w="1"/><text x="75.2228%" y="767.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (8 samples, 0.87%)</title><rect x="74.3199%" y="853" width="0.8705%" height="15" fill="rgb(208,55,20)" fg:x="683" fg:w="8"/><text x="74.5699%" y="863.50"></text></g><g><title>ahash::random_state::RandomState::new (8 samples, 0.87%)</title><rect x="74.3199%" y="837" width="0.8705%" height="15" fill="rgb(218,39,14)" fg:x="683" fg:w="8"/><text x="74.5699%" y="847.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.11%)</title><rect x="75.0816%" y="821" width="0.1088%" height="15" fill="rgb(216,169,33)" fg:x="690" fg:w="1"/><text x="75.3316%" y="831.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="75.0816%" y="805" width="0.1088%" height="15" fill="rgb(233,80,24)" fg:x="690" fg:w="1"/><text x="75.3316%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.22%)</title><rect x="75.2992%" y="661" width="0.2176%" height="15" fill="rgb(213,179,31)" fg:x="692" fg:w="2"/><text x="75.5492%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.22%)</title><rect x="75.2992%" y="645" width="0.2176%" height="15" fill="rgb(209,19,5)" fg:x="692" fg:w="2"/><text x="75.5492%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.33%)</title><rect x="75.2992%" y="693" width="0.3264%" height="15" fill="rgb(219,18,35)" fg:x="692" fg:w="3"/><text x="75.5492%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.33%)</title><rect x="75.2992%" y="677" width="0.3264%" height="15" fill="rgb(209,169,16)" fg:x="692" fg:w="3"/><text x="75.5492%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="75.5169%" y="661" width="0.1088%" height="15" fill="rgb(245,90,51)" fg:x="694" fg:w="1"/><text x="75.7669%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="75.5169%" y="645" width="0.1088%" height="15" fill="rgb(220,99,45)" fg:x="694" fg:w="1"/><text x="75.7669%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for char&gt;::hash (1 samples, 0.11%)</title><rect x="75.5169%" y="629" width="0.1088%" height="15" fill="rgb(249,89,25)" fg:x="694" fg:w="1"/><text x="75.7669%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.11%)</title><rect x="75.5169%" y="613" width="0.1088%" height="15" fill="rgb(239,193,0)" fg:x="694" fg:w="1"/><text x="75.7669%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="75.5169%" y="597" width="0.1088%" height="15" fill="rgb(231,126,1)" fg:x="694" fg:w="1"/><text x="75.7669%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.11%)</title><rect x="75.5169%" y="581" width="0.1088%" height="15" fill="rgb(243,166,3)" fg:x="694" fg:w="1"/><text x="75.7669%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (2 samples, 0.22%)</title><rect x="75.7345%" y="677" width="0.2176%" height="15" fill="rgb(223,22,34)" fg:x="696" fg:w="2"/><text x="75.9845%" y="687.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.11%)</title><rect x="75.8433%" y="661" width="0.1088%" height="15" fill="rgb(251,52,51)" fg:x="697" fg:w="1"/><text x="76.0933%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.87%)</title><rect x="75.1904%" y="805" width="0.8705%" height="15" fill="rgb(221,165,28)" fg:x="691" fg:w="8"/><text x="75.4404%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.87%)</title><rect x="75.1904%" y="789" width="0.8705%" height="15" fill="rgb(218,121,47)" fg:x="691" fg:w="8"/><text x="75.4404%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.87%)</title><rect x="75.1904%" y="773" width="0.8705%" height="15" fill="rgb(209,120,9)" fg:x="691" fg:w="8"/><text x="75.4404%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.87%)</title><rect x="75.1904%" y="757" width="0.8705%" height="15" fill="rgb(236,68,12)" fg:x="691" fg:w="8"/><text x="75.4404%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.87%)</title><rect x="75.1904%" y="741" width="0.8705%" height="15" fill="rgb(225,194,26)" fg:x="691" fg:w="8"/><text x="75.4404%" y="751.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (8 samples, 0.87%)</title><rect x="75.1904%" y="725" width="0.8705%" height="15" fill="rgb(231,84,39)" fg:x="691" fg:w="8"/><text x="75.4404%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.87%)</title><rect x="75.1904%" y="709" width="0.8705%" height="15" fill="rgb(210,11,45)" fg:x="691" fg:w="8"/><text x="75.4404%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.44%)</title><rect x="75.6257%" y="693" width="0.4353%" height="15" fill="rgb(224,54,52)" fg:x="695" fg:w="4"/><text x="75.8757%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (1 samples, 0.11%)</title><rect x="75.9521%" y="677" width="0.1088%" height="15" fill="rgb(238,102,14)" fg:x="698" fg:w="1"/><text x="76.2021%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.98%)</title><rect x="75.1904%" y="853" width="0.9793%" height="15" fill="rgb(243,160,52)" fg:x="691" fg:w="9"/><text x="75.4404%" y="863.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.98%)</title><rect x="75.1904%" y="837" width="0.9793%" height="15" fill="rgb(216,114,19)" fg:x="691" fg:w="9"/><text x="75.4404%" y="847.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.98%)</title><rect x="75.1904%" y="821" width="0.9793%" height="15" fill="rgb(244,166,37)" fg:x="691" fg:w="9"/><text x="75.4404%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="76.0609%" y="805" width="0.1088%" height="15" fill="rgb(246,29,44)" fg:x="699" fg:w="1"/><text x="76.3109%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="76.0609%" y="789" width="0.1088%" height="15" fill="rgb(215,56,53)" fg:x="699" fg:w="1"/><text x="76.3109%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="76.0609%" y="773" width="0.1088%" height="15" fill="rgb(217,60,2)" fg:x="699" fg:w="1"/><text x="76.3109%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="76.0609%" y="757" width="0.1088%" height="15" fill="rgb(207,26,24)" fg:x="699" fg:w="1"/><text x="76.3109%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="76.0609%" y="741" width="0.1088%" height="15" fill="rgb(252,210,15)" fg:x="699" fg:w="1"/><text x="76.3109%" y="751.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (20 samples, 2.18%)</title><rect x="74.1023%" y="901" width="2.1763%" height="15" fill="rgb(253,209,26)" fg:x="681" fg:w="20"/><text x="74.3523%" y="911.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 1.96%)</title><rect x="74.3199%" y="885" width="1.9587%" height="15" fill="rgb(238,170,14)" fg:x="683" fg:w="18"/><text x="74.5699%" y="895.50">c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 1.96%)</title><rect x="74.3199%" y="869" width="1.9587%" height="15" fill="rgb(216,178,15)" fg:x="683" fg:w="18"/><text x="74.5699%" y="879.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="76.1697%" y="853" width="0.1088%" height="15" fill="rgb(250,197,2)" fg:x="700" fg:w="1"/><text x="76.4197%" y="863.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (27 samples, 2.94%)</title><rect x="74.1023%" y="949" width="2.9380%" height="15" fill="rgb(212,70,42)" fg:x="681" fg:w="27"/><text x="74.3523%" y="959.50">&lt;c..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (27 samples, 2.94%)</title><rect x="74.1023%" y="933" width="2.9380%" height="15" fill="rgb(227,213,9)" fg:x="681" fg:w="27"/><text x="74.3523%" y="943.50">&lt;c..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (27 samples, 2.94%)</title><rect x="74.1023%" y="917" width="2.9380%" height="15" fill="rgb(245,99,25)" fg:x="681" fg:w="27"/><text x="74.3523%" y="927.50">&lt;c..</text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (7 samples, 0.76%)</title><rect x="76.2786%" y="901" width="0.7617%" height="15" fill="rgb(250,82,29)" fg:x="701" fg:w="7"/><text x="76.5286%" y="911.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.76%)</title><rect x="76.2786%" y="885" width="0.7617%" height="15" fill="rgb(241,226,54)" fg:x="701" fg:w="7"/><text x="76.5286%" y="895.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (39 samples, 4.24%)</title><rect x="73.2318%" y="997" width="4.2437%" height="15" fill="rgb(221,99,41)" fg:x="673" fg:w="39"/><text x="73.4818%" y="1007.50">&lt;chum..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (39 samples, 4.24%)</title><rect x="73.2318%" y="981" width="4.2437%" height="15" fill="rgb(213,90,21)" fg:x="673" fg:w="39"/><text x="73.4818%" y="991.50">&lt;chum..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (39 samples, 4.24%)</title><rect x="73.2318%" y="965" width="4.2437%" height="15" fill="rgb(205,208,24)" fg:x="673" fg:w="39"/><text x="73.4818%" y="975.50">&lt;chum..</text></g><g><title>[libc-2.31.so] (4 samples, 0.44%)</title><rect x="77.0403%" y="949" width="0.4353%" height="15" fill="rgb(246,31,12)" fg:x="708" fg:w="4"/><text x="77.2903%" y="959.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="77.4755%" y="997" width="0.1088%" height="15" fill="rgb(213,154,6)" fg:x="712" fg:w="1"/><text x="77.7255%" y="1007.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (41 samples, 4.46%)</title><rect x="73.2318%" y="1013" width="4.4614%" height="15" fill="rgb(222,163,29)" fg:x="673" fg:w="41"/><text x="73.4818%" y="1023.50">&lt;chum..</text></g><g><title>chumsky::error::merge_alts (1 samples, 0.11%)</title><rect x="77.5843%" y="997" width="0.1088%" height="15" fill="rgb(227,201,8)" fg:x="713" fg:w="1"/><text x="77.8343%" y="1007.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (42 samples, 4.57%)</title><rect x="73.2318%" y="1029" width="4.5702%" height="15" fill="rgb(233,9,32)" fg:x="673" fg:w="42"/><text x="73.4818%" y="1039.50">chums..</text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="77.6931%" y="1013" width="0.1088%" height="15" fill="rgb(217,54,24)" fg:x="714" fg:w="1"/><text x="77.9431%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (46 samples, 5.01%)</title><rect x="73.0141%" y="1061" width="5.0054%" height="15" fill="rgb(235,192,0)" fg:x="671" fg:w="46"/><text x="73.2641%" y="1071.50">&lt;chums..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (46 samples, 5.01%)</title><rect x="73.0141%" y="1045" width="5.0054%" height="15" fill="rgb(235,45,9)" fg:x="671" fg:w="46"/><text x="73.2641%" y="1055.50">&lt;chums..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (2 samples, 0.22%)</title><rect x="77.8020%" y="1029" width="0.2176%" height="15" fill="rgb(246,42,40)" fg:x="715" fg:w="2"/><text x="78.0520%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (2 samples, 0.22%)</title><rect x="77.8020%" y="1013" width="0.2176%" height="15" fill="rgb(248,111,24)" fg:x="715" fg:w="2"/><text x="78.0520%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.22%)</title><rect x="77.8020%" y="997" width="0.2176%" height="15" fill="rgb(249,65,22)" fg:x="715" fg:w="2"/><text x="78.0520%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.22%)</title><rect x="77.8020%" y="981" width="0.2176%" height="15" fill="rgb(238,111,51)" fg:x="715" fg:w="2"/><text x="78.0520%" y="991.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="78.3460%" y="1013" width="0.2176%" height="15" fill="rgb(250,118,22)" fg:x="720" fg:w="2"/><text x="78.5960%" y="1023.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::parse (7 samples, 0.76%)</title><rect x="78.1284%" y="1029" width="0.7617%" height="15" fill="rgb(234,84,26)" fg:x="718" fg:w="7"/><text x="78.3784%" y="1039.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (3 samples, 0.33%)</title><rect x="78.5637%" y="1013" width="0.3264%" height="15" fill="rgb(243,172,12)" fg:x="722" fg:w="3"/><text x="78.8137%" y="1023.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (3 samples, 0.33%)</title><rect x="78.5637%" y="997" width="0.3264%" height="15" fill="rgb(236,150,49)" fg:x="722" fg:w="3"/><text x="78.8137%" y="1007.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (3 samples, 0.33%)</title><rect x="78.5637%" y="981" width="0.3264%" height="15" fill="rgb(225,197,26)" fg:x="722" fg:w="3"/><text x="78.8137%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.11%)</title><rect x="78.7813%" y="965" width="0.1088%" height="15" fill="rgb(214,17,42)" fg:x="724" fg:w="1"/><text x="79.0313%" y="975.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (66 samples, 7.18%)</title><rect x="72.0348%" y="1269" width="7.1817%" height="15" fill="rgb(224,165,40)" fg:x="662" fg:w="66"/><text x="72.2848%" y="1279.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (66 samples, 7.18%)</title><rect x="72.0348%" y="1253" width="7.1817%" height="15" fill="rgb(246,100,4)" fg:x="662" fg:w="66"/><text x="72.2848%" y="1263.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (66 samples, 7.18%)</title><rect x="72.0348%" y="1237" width="7.1817%" height="15" fill="rgb(222,103,0)" fg:x="662" fg:w="66"/><text x="72.2848%" y="1247.50">&lt;chumsky::..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (61 samples, 6.64%)</title><rect x="72.5789%" y="1221" width="6.6376%" height="15" fill="rgb(227,189,26)" fg:x="667" fg:w="61"/><text x="72.8289%" y="1231.50">&lt;chumsky:..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (61 samples, 6.64%)</title><rect x="72.5789%" y="1205" width="6.6376%" height="15" fill="rgb(214,202,17)" fg:x="667" fg:w="61"/><text x="72.8289%" y="1215.50">&lt;chumsky:..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (61 samples, 6.64%)</title><rect x="72.5789%" y="1189" width="6.6376%" height="15" fill="rgb(229,111,3)" fg:x="667" fg:w="61"/><text x="72.8289%" y="1199.50">&lt;chumsky:..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (61 samples, 6.64%)</title><rect x="72.5789%" y="1173" width="6.6376%" height="15" fill="rgb(229,172,15)" fg:x="667" fg:w="61"/><text x="72.8289%" y="1183.50">&lt;chumsky:..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (61 samples, 6.64%)</title><rect x="72.5789%" y="1157" width="6.6376%" height="15" fill="rgb(230,224,35)" fg:x="667" fg:w="61"/><text x="72.8289%" y="1167.50">&lt;chumsky:..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (61 samples, 6.64%)</title><rect x="72.5789%" y="1141" width="6.6376%" height="15" fill="rgb(251,141,6)" fg:x="667" fg:w="61"/><text x="72.8289%" y="1151.50">&lt;chumsky:..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (59 samples, 6.42%)</title><rect x="72.7965%" y="1125" width="6.4200%" height="15" fill="rgb(225,208,6)" fg:x="669" fg:w="59"/><text x="73.0465%" y="1135.50">&lt;chumsky..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (59 samples, 6.42%)</title><rect x="72.7965%" y="1109" width="6.4200%" height="15" fill="rgb(246,181,16)" fg:x="669" fg:w="59"/><text x="73.0465%" y="1119.50">&lt;&amp;T as c..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (59 samples, 6.42%)</title><rect x="72.7965%" y="1093" width="6.4200%" height="15" fill="rgb(227,129,36)" fg:x="669" fg:w="59"/><text x="73.0465%" y="1103.50">&lt;&amp;T as c..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (59 samples, 6.42%)</title><rect x="72.7965%" y="1077" width="6.4200%" height="15" fill="rgb(248,117,24)" fg:x="669" fg:w="59"/><text x="73.0465%" y="1087.50">&lt;chumsky..</text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (11 samples, 1.20%)</title><rect x="78.0196%" y="1061" width="1.1970%" height="15" fill="rgb(214,185,35)" fg:x="717" fg:w="11"/><text x="78.2696%" y="1071.50"></text></g><g><title>&lt;chumsky::combinator::SeparatedBy&lt;A,B,U&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (11 samples, 1.20%)</title><rect x="78.0196%" y="1045" width="1.1970%" height="15" fill="rgb(236,150,34)" fg:x="717" fg:w="11"/><text x="78.2696%" y="1055.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="78.8901%" y="1029" width="0.3264%" height="15" fill="rgb(243,228,27)" fg:x="725" fg:w="3"/><text x="79.1401%" y="1039.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="79.2165%" y="1269" width="0.2176%" height="15" fill="rgb(245,77,44)" fg:x="728" fg:w="2"/><text x="79.4665%" y="1279.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="79.5430%" y="1253" width="0.2176%" height="15" fill="rgb(235,214,42)" fg:x="731" fg:w="2"/><text x="79.7930%" y="1263.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (73 samples, 7.94%)</title><rect x="72.0348%" y="1285" width="7.9434%" height="15" fill="rgb(221,74,3)" fg:x="662" fg:w="73"/><text x="72.2848%" y="1295.50">&lt;chumsky::c..</text></g><g><title>chumsky::error::merge_alts (5 samples, 0.54%)</title><rect x="79.4342%" y="1269" width="0.5441%" height="15" fill="rgb(206,121,29)" fg:x="730" fg:w="5"/><text x="79.6842%" y="1279.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (2 samples, 0.22%)</title><rect x="79.7606%" y="1253" width="0.2176%" height="15" fill="rgb(249,131,53)" fg:x="733" fg:w="2"/><text x="80.0106%" y="1263.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="79.8694%" y="1237" width="0.1088%" height="15" fill="rgb(236,170,29)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1247.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="79.8694%" y="1221" width="0.1088%" height="15" fill="rgb(247,96,15)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1231.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="79.8694%" y="1205" width="0.1088%" height="15" fill="rgb(211,210,7)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="79.8694%" y="1189" width="0.1088%" height="15" fill="rgb(240,88,50)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="79.8694%" y="1173" width="0.1088%" height="15" fill="rgb(209,229,26)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="79.8694%" y="1157" width="0.1088%" height="15" fill="rgb(210,68,23)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="79.8694%" y="1141" width="0.1088%" height="15" fill="rgb(229,180,13)" fg:x="734" fg:w="1"/><text x="80.1194%" y="1151.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="79.9782%" y="1285" width="0.1088%" height="15" fill="rgb(236,53,44)" fg:x="735" fg:w="1"/><text x="80.2282%" y="1295.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (623 samples, 67.79%)</title><rect x="12.4048%" y="1349" width="67.7911%" height="15" fill="rgb(244,214,29)" fg:x="114" fg:w="623"/><text x="12.6548%" y="1359.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (77 samples, 8.38%)</title><rect x="71.8172%" y="1333" width="8.3787%" height="15" fill="rgb(220,75,29)" fg:x="660" fg:w="77"/><text x="72.0672%" y="1343.50">&lt;chumsky::co..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (77 samples, 8.38%)</title><rect x="71.8172%" y="1317" width="8.3787%" height="15" fill="rgb(214,183,37)" fg:x="660" fg:w="77"/><text x="72.0672%" y="1327.50">&lt;chumsky::co..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (75 samples, 8.16%)</title><rect x="72.0348%" y="1301" width="8.1610%" height="15" fill="rgb(239,117,29)" fg:x="662" fg:w="75"/><text x="72.2848%" y="1311.50">chumsky::st..</text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="80.0871%" y="1285" width="0.1088%" height="15" fill="rgb(237,171,35)" fg:x="736" fg:w="1"/><text x="80.3371%" y="1295.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="80.3047%" y="1333" width="0.1088%" height="15" fill="rgb(229,178,53)" fg:x="738" fg:w="1"/><text x="80.5547%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="80.4135%" y="1301" width="0.1088%" height="15" fill="rgb(210,102,19)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="80.4135%" y="1285" width="0.1088%" height="15" fill="rgb(235,127,22)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;core::option::Option&lt;char&gt;,()&gt;&gt; (1 samples, 0.11%)</title><rect x="80.4135%" y="1269" width="0.1088%" height="15" fill="rgb(244,31,31)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (1 samples, 0.11%)</title><rect x="80.4135%" y="1253" width="0.1088%" height="15" fill="rgb(231,43,21)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="80.4135%" y="1237" width="0.1088%" height="15" fill="rgb(217,131,35)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="80.4135%" y="1221" width="0.1088%" height="15" fill="rgb(221,149,4)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="80.4135%" y="1205" width="0.1088%" height="15" fill="rgb(232,170,28)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1215.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="80.4135%" y="1189" width="0.1088%" height="15" fill="rgb(238,56,10)" fg:x="739" fg:w="1"/><text x="80.6635%" y="1199.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (3 samples, 0.33%)</title><rect x="80.4135%" y="1317" width="0.3264%" height="15" fill="rgb(235,196,14)" fg:x="739" fg:w="3"/><text x="80.6635%" y="1327.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (2 samples, 0.22%)</title><rect x="80.5223%" y="1301" width="0.2176%" height="15" fill="rgb(216,45,48)" fg:x="740" fg:w="2"/><text x="80.7723%" y="1311.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="80.5223%" y="1285" width="0.2176%" height="15" fill="rgb(238,213,17)" fg:x="740" fg:w="2"/><text x="80.7723%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.22%)</title><rect x="80.5223%" y="1269" width="0.2176%" height="15" fill="rgb(212,13,2)" fg:x="740" fg:w="2"/><text x="80.7723%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="80.5223%" y="1253" width="0.2176%" height="15" fill="rgb(240,114,20)" fg:x="740" fg:w="2"/><text x="80.7723%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="80.5223%" y="1237" width="0.2176%" height="15" fill="rgb(228,41,40)" fg:x="740" fg:w="2"/><text x="80.7723%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="80.5223%" y="1221" width="0.2176%" height="15" fill="rgb(244,132,35)" fg:x="740" fg:w="2"/><text x="80.7723%" y="1231.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (634 samples, 68.99%)</title><rect x="12.0783%" y="1397" width="68.9880%" height="15" fill="rgb(253,189,4)" fg:x="111" fg:w="634"/><text x="12.3283%" y="1407.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (634 samples, 68.99%)</title><rect x="12.0783%" y="1381" width="68.9880%" height="15" fill="rgb(224,37,19)" fg:x="111" fg:w="634"/><text x="12.3283%" y="1391.50">&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (634 samples, 68.99%)</title><rect x="12.0783%" y="1365" width="68.9880%" height="15" fill="rgb(235,223,18)" fg:x="111" fg:w="634"/><text x="12.3283%" y="1375.50">&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner</text></g><g><title>chumsky::error::merge_alts (8 samples, 0.87%)</title><rect x="80.1959%" y="1349" width="0.8705%" height="15" fill="rgb(235,163,25)" fg:x="737" fg:w="8"/><text x="80.4459%" y="1359.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (6 samples, 0.65%)</title><rect x="80.4135%" y="1333" width="0.6529%" height="15" fill="rgb(217,145,28)" fg:x="739" fg:w="6"/><text x="80.6635%" y="1343.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="80.7399%" y="1317" width="0.3264%" height="15" fill="rgb(223,223,32)" fg:x="742" fg:w="3"/><text x="80.9899%" y="1327.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="81.0664%" y="1397" width="0.1088%" height="15" fill="rgb(227,189,39)" fg:x="745" fg:w="1"/><text x="81.3164%" y="1407.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner::{{closure}} (2 samples, 0.22%)</title><rect x="81.1752%" y="1381" width="0.2176%" height="15" fill="rgb(248,10,22)" fg:x="746" fg:w="2"/><text x="81.4252%" y="1391.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (639 samples, 69.53%)</title><rect x="12.0783%" y="1429" width="69.5321%" height="15" fill="rgb(248,46,39)" fg:x="111" fg:w="639"/><text x="12.3283%" y="1439.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (639 samples, 69.53%)</title><rect x="12.0783%" y="1413" width="69.5321%" height="15" fill="rgb(248,113,48)" fg:x="111" fg:w="639"/><text x="12.3283%" y="1423.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner</text></g><g><title>core::result::Result&lt;T,E&gt;::map (4 samples, 0.44%)</title><rect x="81.1752%" y="1397" width="0.4353%" height="15" fill="rgb(245,16,25)" fg:x="746" fg:w="4"/><text x="81.4252%" y="1407.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="81.3928%" y="1381" width="0.2176%" height="15" fill="rgb(249,152,16)" fg:x="748" fg:w="2"/><text x="81.6428%" y="1391.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="81.8281%" y="949" width="0.1088%" height="15" fill="rgb(250,16,1)" fg:x="752" fg:w="1"/><text x="82.0781%" y="959.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="82.0457%" y="853" width="0.1088%" height="15" fill="rgb(249,138,3)" fg:x="754" fg:w="1"/><text x="82.2957%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.11%)</title><rect x="82.3721%" y="821" width="0.1088%" height="15" fill="rgb(227,71,41)" fg:x="757" fg:w="1"/><text x="82.6221%" y="831.50"></text></g><g><title>chumsky::error::SimpleLabel::merge (1 samples, 0.11%)</title><rect x="82.4810%" y="821" width="0.1088%" height="15" fill="rgb(209,184,23)" fg:x="758" fg:w="1"/><text x="82.7310%" y="831.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (4 samples, 0.44%)</title><rect x="82.2633%" y="837" width="0.4353%" height="15" fill="rgb(223,215,31)" fg:x="756" fg:w="4"/><text x="82.5133%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="82.5898%" y="821" width="0.1088%" height="15" fill="rgb(210,146,28)" fg:x="759" fg:w="1"/><text x="82.8398%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::IntoIter&lt;core::option::Option&lt;char&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="82.5898%" y="805" width="0.1088%" height="15" fill="rgb(209,183,41)" fg:x="759" fg:w="1"/><text x="82.8398%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;core::option::Option&lt;char&gt;,()&gt;&gt; (1 samples, 0.11%)</title><rect x="82.5898%" y="789" width="0.1088%" height="15" fill="rgb(209,224,45)" fg:x="759" fg:w="1"/><text x="82.8398%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(core::option::Option&lt;char&gt;,())&gt;&gt; (1 samples, 0.11%)</title><rect x="82.5898%" y="773" width="0.1088%" height="15" fill="rgb(224,209,51)" fg:x="759" fg:w="1"/><text x="82.8398%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="82.5898%" y="757" width="0.1088%" height="15" fill="rgb(223,17,39)" fg:x="759" fg:w="1"/><text x="82.8398%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="82.5898%" y="741" width="0.1088%" height="15" fill="rgb(234,204,37)" fg:x="759" fg:w="1"/><text x="82.8398%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="82.5898%" y="725" width="0.1088%" height="15" fill="rgb(236,120,5)" fg:x="759" fg:w="1"/><text x="82.8398%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="82.5898%" y="709" width="0.1088%" height="15" fill="rgb(248,97,27)" fg:x="759" fg:w="1"/><text x="82.8398%" y="719.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (6 samples, 0.65%)</title><rect x="82.1545%" y="853" width="0.6529%" height="15" fill="rgb(240,66,17)" fg:x="755" fg:w="6"/><text x="82.4045%" y="863.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="82.6986%" y="837" width="0.1088%" height="15" fill="rgb(210,79,3)" fg:x="760" fg:w="1"/><text x="82.9486%" y="847.50"></text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner::choose_between (8 samples, 0.87%)</title><rect x="82.0457%" y="869" width="0.8705%" height="15" fill="rgb(214,176,27)" fg:x="754" fg:w="8"/><text x="82.2957%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.11%)</title><rect x="82.8074%" y="853" width="0.1088%" height="15" fill="rgb(235,185,3)" fg:x="761" fg:w="1"/><text x="83.0574%" y="863.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.11%)</title><rect x="83.1338%" y="741" width="0.1088%" height="15" fill="rgb(227,24,12)" fg:x="764" fg:w="1"/><text x="83.3838%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.11%)</title><rect x="83.1338%" y="725" width="0.1088%" height="15" fill="rgb(252,169,48)" fg:x="764" fg:w="1"/><text x="83.3838%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.11%)</title><rect x="83.1338%" y="709" width="0.1088%" height="15" fill="rgb(212,65,1)" fg:x="764" fg:w="1"/><text x="83.3838%" y="719.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (4 samples, 0.44%)</title><rect x="83.0250%" y="773" width="0.4353%" height="15" fill="rgb(242,39,24)" fg:x="763" fg:w="4"/><text x="83.2750%" y="783.50"></text></g><g><title>ahash::random_state::RandomState::new (4 samples, 0.44%)</title><rect x="83.0250%" y="757" width="0.4353%" height="15" fill="rgb(249,32,23)" fg:x="763" fg:w="4"/><text x="83.2750%" y="767.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (2 samples, 0.22%)</title><rect x="83.2427%" y="741" width="0.2176%" height="15" fill="rgb(251,195,23)" fg:x="765" fg:w="2"/><text x="83.4927%" y="751.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.11%)</title><rect x="83.3515%" y="725" width="0.1088%" height="15" fill="rgb(236,174,8)" fg:x="766" fg:w="1"/><text x="83.6015%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.11%)</title><rect x="83.3515%" y="709" width="0.1088%" height="15" fill="rgb(220,197,8)" fg:x="766" fg:w="1"/><text x="83.6015%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.11%)</title><rect x="83.3515%" y="693" width="0.1088%" height="15" fill="rgb(240,108,37)" fg:x="766" fg:w="1"/><text x="83.6015%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.22%)</title><rect x="83.4603%" y="581" width="0.2176%" height="15" fill="rgb(232,176,24)" fg:x="767" fg:w="2"/><text x="83.7103%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.22%)</title><rect x="83.4603%" y="565" width="0.2176%" height="15" fill="rgb(243,35,29)" fg:x="767" fg:w="2"/><text x="83.7103%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.33%)</title><rect x="83.4603%" y="613" width="0.3264%" height="15" fill="rgb(210,37,18)" fg:x="767" fg:w="3"/><text x="83.7103%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.33%)</title><rect x="83.4603%" y="597" width="0.3264%" height="15" fill="rgb(224,184,40)" fg:x="767" fg:w="3"/><text x="83.7103%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.11%)</title><rect x="83.6779%" y="581" width="0.1088%" height="15" fill="rgb(236,39,29)" fg:x="769" fg:w="1"/><text x="83.9279%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.11%)</title><rect x="83.6779%" y="565" width="0.1088%" height="15" fill="rgb(232,48,39)" fg:x="769" fg:w="1"/><text x="83.9279%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.11%)</title><rect x="83.6779%" y="549" width="0.1088%" height="15" fill="rgb(236,34,42)" fg:x="769" fg:w="1"/><text x="83.9279%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.11%)</title><rect x="83.6779%" y="533" width="0.1088%" height="15" fill="rgb(243,106,37)" fg:x="769" fg:w="1"/><text x="83.9279%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.11%)</title><rect x="83.6779%" y="517" width="0.1088%" height="15" fill="rgb(218,96,6)" fg:x="769" fg:w="1"/><text x="83.9279%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.11%)</title><rect x="83.6779%" y="501" width="0.1088%" height="15" fill="rgb(235,130,12)" fg:x="769" fg:w="1"/><text x="83.9279%" y="511.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.11%)</title><rect x="83.6779%" y="485" width="0.1088%" height="15" fill="rgb(231,95,0)" fg:x="769" fg:w="1"/><text x="83.9279%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.54%)</title><rect x="83.4603%" y="725" width="0.5441%" height="15" fill="rgb(228,12,23)" fg:x="767" fg:w="5"/><text x="83.7103%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.54%)</title><rect x="83.4603%" y="709" width="0.5441%" height="15" fill="rgb(216,12,1)" fg:x="767" fg:w="5"/><text x="83.7103%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.54%)</title><rect x="83.4603%" y="693" width="0.5441%" height="15" fill="rgb(219,59,3)" fg:x="767" fg:w="5"/><text x="83.7103%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.54%)</title><rect x="83.4603%" y="677" width="0.5441%" height="15" fill="rgb(215,208,46)" fg:x="767" fg:w="5"/><text x="83.7103%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.54%)</title><rect x="83.4603%" y="661" width="0.5441%" height="15" fill="rgb(254,224,29)" fg:x="767" fg:w="5"/><text x="83.7103%" y="671.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (5 samples, 0.54%)</title><rect x="83.4603%" y="645" width="0.5441%" height="15" fill="rgb(232,14,29)" fg:x="767" fg:w="5"/><text x="83.7103%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.54%)</title><rect x="83.4603%" y="629" width="0.5441%" height="15" fill="rgb(208,45,52)" fg:x="767" fg:w="5"/><text x="83.7103%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.22%)</title><rect x="83.7867%" y="613" width="0.2176%" height="15" fill="rgb(234,191,28)" fg:x="770" fg:w="2"/><text x="84.0367%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.22%)</title><rect x="83.7867%" y="597" width="0.2176%" height="15" fill="rgb(244,67,43)" fg:x="770" fg:w="2"/><text x="84.0367%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.22%)</title><rect x="83.7867%" y="581" width="0.2176%" height="15" fill="rgb(236,189,24)" fg:x="770" fg:w="2"/><text x="84.0367%" y="591.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.65%)</title><rect x="83.4603%" y="773" width="0.6529%" height="15" fill="rgb(239,214,33)" fg:x="767" fg:w="6"/><text x="83.7103%" y="783.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (6 samples, 0.65%)</title><rect x="83.4603%" y="757" width="0.6529%" height="15" fill="rgb(226,176,41)" fg:x="767" fg:w="6"/><text x="83.7103%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (6 samples, 0.65%)</title><rect x="83.4603%" y="741" width="0.6529%" height="15" fill="rgb(248,47,8)" fg:x="767" fg:w="6"/><text x="83.7103%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.11%)</title><rect x="84.0044%" y="725" width="0.1088%" height="15" fill="rgb(218,81,44)" fg:x="772" fg:w="1"/><text x="84.2544%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="84.0044%" y="709" width="0.1088%" height="15" fill="rgb(213,98,6)" fg:x="772" fg:w="1"/><text x="84.2544%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="84.0044%" y="693" width="0.1088%" height="15" fill="rgb(222,85,22)" fg:x="772" fg:w="1"/><text x="84.2544%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="84.0044%" y="677" width="0.1088%" height="15" fill="rgb(239,46,39)" fg:x="772" fg:w="1"/><text x="84.2544%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="84.0044%" y="661" width="0.1088%" height="15" fill="rgb(237,12,29)" fg:x="772" fg:w="1"/><text x="84.2544%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.11%)</title><rect x="84.0044%" y="645" width="0.1088%" height="15" fill="rgb(214,77,8)" fg:x="772" fg:w="1"/><text x="84.2544%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.11%)</title><rect x="84.0044%" y="629" width="0.1088%" height="15" fill="rgb(217,168,37)" fg:x="772" fg:w="1"/><text x="84.2544%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.11%)</title><rect x="84.0044%" y="613" width="0.1088%" height="15" fill="rgb(221,217,23)" fg:x="772" fg:w="1"/><text x="84.2544%" y="623.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.11%)</title><rect x="84.0044%" y="597" width="0.1088%" height="15" fill="rgb(243,229,36)" fg:x="772" fg:w="1"/><text x="84.2544%" y="607.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="84.0044%" y="581" width="0.1088%" height="15" fill="rgb(251,163,40)" fg:x="772" fg:w="1"/><text x="84.2544%" y="591.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (12 samples, 1.31%)</title><rect x="83.0250%" y="821" width="1.3058%" height="15" fill="rgb(237,222,12)" fg:x="763" fg:w="12"/><text x="83.2750%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 1.31%)</title><rect x="83.0250%" y="805" width="1.3058%" height="15" fill="rgb(248,132,6)" fg:x="763" fg:w="12"/><text x="83.2750%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (12 samples, 1.31%)</title><rect x="83.0250%" y="789" width="1.3058%" height="15" fill="rgb(227,167,50)" fg:x="763" fg:w="12"/><text x="83.2750%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (2 samples, 0.22%)</title><rect x="84.1132%" y="773" width="0.2176%" height="15" fill="rgb(242,84,37)" fg:x="773" fg:w="2"/><text x="84.3632%" y="783.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::at (3 samples, 0.33%)</title><rect x="84.3308%" y="821" width="0.3264%" height="15" fill="rgb(212,4,50)" fg:x="775" fg:w="3"/><text x="84.5808%" y="831.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="84.3308%" y="805" width="0.3264%" height="15" fill="rgb(230,228,32)" fg:x="775" fg:w="3"/><text x="84.5808%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="84.6572%" y="725" width="0.3264%" height="15" fill="rgb(248,217,23)" fg:x="778" fg:w="3"/><text x="84.9072%" y="735.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="84.6572%" y="709" width="0.3264%" height="15" fill="rgb(238,197,32)" fg:x="778" fg:w="3"/><text x="84.9072%" y="719.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="84.6572%" y="693" width="0.3264%" height="15" fill="rgb(236,106,1)" fg:x="778" fg:w="3"/><text x="84.9072%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.33%)</title><rect x="84.6572%" y="677" width="0.3264%" height="15" fill="rgb(219,228,13)" fg:x="778" fg:w="3"/><text x="84.9072%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.22%)</title><rect x="84.7661%" y="661" width="0.2176%" height="15" fill="rgb(238,30,35)" fg:x="779" fg:w="2"/><text x="85.0161%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.11%)</title><rect x="84.8749%" y="645" width="0.1088%" height="15" fill="rgb(236,70,23)" fg:x="780" fg:w="1"/><text x="85.1249%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (5 samples, 0.54%)</title><rect x="84.6572%" y="773" width="0.5441%" height="15" fill="rgb(249,104,48)" fg:x="778" fg:w="5"/><text x="84.9072%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.54%)</title><rect x="84.6572%" y="757" width="0.5441%" height="15" fill="rgb(254,117,50)" fg:x="778" fg:w="5"/><text x="84.9072%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.54%)</title><rect x="84.6572%" y="741" width="0.5441%" height="15" fill="rgb(223,152,4)" fg:x="778" fg:w="5"/><text x="84.9072%" y="751.50"></text></g><g><title>core::ptr::write (2 samples, 0.22%)</title><rect x="84.9837%" y="725" width="0.2176%" height="15" fill="rgb(245,6,2)" fg:x="781" fg:w="2"/><text x="85.2337%" y="735.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (22 samples, 2.39%)</title><rect x="82.9162%" y="869" width="2.3939%" height="15" fill="rgb(249,150,24)" fg:x="762" fg:w="22"/><text x="83.1662%" y="879.50">&lt;c..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (22 samples, 2.39%)</title><rect x="82.9162%" y="853" width="2.3939%" height="15" fill="rgb(228,185,42)" fg:x="762" fg:w="22"/><text x="83.1662%" y="863.50">&lt;c..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (22 samples, 2.39%)</title><rect x="82.9162%" y="837" width="2.3939%" height="15" fill="rgb(226,39,33)" fg:x="762" fg:w="22"/><text x="83.1662%" y="847.50">&lt;c..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (6 samples, 0.65%)</title><rect x="84.6572%" y="821" width="0.6529%" height="15" fill="rgb(221,166,19)" fg:x="778" fg:w="6"/><text x="84.9072%" y="831.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (6 samples, 0.65%)</title><rect x="84.6572%" y="805" width="0.6529%" height="15" fill="rgb(209,109,2)" fg:x="778" fg:w="6"/><text x="84.9072%" y="815.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (6 samples, 0.65%)</title><rect x="84.6572%" y="789" width="0.6529%" height="15" fill="rgb(252,216,26)" fg:x="778" fg:w="6"/><text x="84.9072%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="85.2013%" y="773" width="0.1088%" height="15" fill="rgb(227,173,36)" fg:x="783" fg:w="1"/><text x="85.4513%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="85.2013%" y="757" width="0.1088%" height="15" fill="rgb(209,90,7)" fg:x="783" fg:w="1"/><text x="85.4513%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="85.2013%" y="741" width="0.1088%" height="15" fill="rgb(250,194,11)" fg:x="783" fg:w="1"/><text x="85.4513%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="85.2013%" y="725" width="0.1088%" height="15" fill="rgb(220,72,50)" fg:x="783" fg:w="1"/><text x="85.4513%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="85.2013%" y="709" width="0.1088%" height="15" fill="rgb(222,106,48)" fg:x="783" fg:w="1"/><text x="85.4513%" y="719.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="85.2013%" y="693" width="0.1088%" height="15" fill="rgb(216,220,45)" fg:x="783" fg:w="1"/><text x="85.4513%" y="703.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="85.2013%" y="677" width="0.1088%" height="15" fill="rgb(234,112,18)" fg:x="783" fg:w="1"/><text x="85.4513%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="85.2013%" y="661" width="0.1088%" height="15" fill="rgb(206,179,9)" fg:x="783" fg:w="1"/><text x="85.4513%" y="671.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (32 samples, 3.48%)</title><rect x="81.9369%" y="917" width="3.4820%" height="15" fill="rgb(215,115,40)" fg:x="753" fg:w="32"/><text x="82.1869%" y="927.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (32 samples, 3.48%)</title><rect x="81.9369%" y="901" width="3.4820%" height="15" fill="rgb(222,69,34)" fg:x="753" fg:w="32"/><text x="82.1869%" y="911.50">&lt;ch..</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (32 samples, 3.48%)</title><rect x="81.9369%" y="885" width="3.4820%" height="15" fill="rgb(209,161,10)" fg:x="753" fg:w="32"/><text x="82.1869%" y="895.50">&lt;ch..</text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="85.3101%" y="869" width="0.1088%" height="15" fill="rgb(217,6,38)" fg:x="784" fg:w="1"/><text x="85.5601%" y="879.50"></text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner_silent (36 samples, 3.92%)</title><rect x="81.7193%" y="1237" width="3.9173%" height="15" fill="rgb(229,229,48)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1247.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner (36 samples, 3.92%)</title><rect x="81.7193%" y="1221" width="3.9173%" height="15" fill="rgb(225,21,28)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1231.50">&lt;chu..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse (36 samples, 3.92%)</title><rect x="81.7193%" y="1205" width="3.9173%" height="15" fill="rgb(206,33,13)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1215.50">chum..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (36 samples, 3.92%)</title><rect x="81.7193%" y="1189" width="3.9173%" height="15" fill="rgb(242,178,17)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1199.50">chum..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::try_parse::{{closure}} (36 samples, 3.92%)</title><rect x="81.7193%" y="1173" width="3.9173%" height="15" fill="rgb(220,162,5)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1183.50">chum..</text></g><g><title>&lt;chumsky::combinator::OrNot&lt;A&gt; as chumsky::Parser&lt;I,core::option::Option&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (36 samples, 3.92%)</title><rect x="81.7193%" y="1157" width="3.9173%" height="15" fill="rgb(210,33,43)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1167.50">&lt;chu..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (36 samples, 3.92%)</title><rect x="81.7193%" y="1141" width="3.9173%" height="15" fill="rgb(216,116,54)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1151.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (36 samples, 3.92%)</title><rect x="81.7193%" y="1125" width="3.9173%" height="15" fill="rgb(249,92,24)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1135.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::To&lt;A,O,U&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (36 samples, 3.92%)</title><rect x="81.7193%" y="1109" width="3.9173%" height="15" fill="rgb(231,189,14)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1119.50">&lt;chu..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (36 samples, 3.92%)</title><rect x="81.7193%" y="1093" width="3.9173%" height="15" fill="rgb(230,8,41)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1103.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (36 samples, 3.92%)</title><rect x="81.7193%" y="1077" width="3.9173%" height="15" fill="rgb(249,7,27)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1087.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (36 samples, 3.92%)</title><rect x="81.7193%" y="1061" width="3.9173%" height="15" fill="rgb(232,86,5)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1071.50">&lt;chu..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (36 samples, 3.92%)</title><rect x="81.7193%" y="1045" width="3.9173%" height="15" fill="rgb(224,175,18)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1055.50">&lt;chu..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (36 samples, 3.92%)</title><rect x="81.7193%" y="1029" width="3.9173%" height="15" fill="rgb(220,129,12)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1039.50">&lt;&amp;T ..</text></g><g><title>&lt;&amp;T as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (36 samples, 3.92%)</title><rect x="81.7193%" y="1013" width="3.9173%" height="15" fill="rgb(210,19,36)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1023.50">&lt;&amp;T ..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (36 samples, 3.92%)</title><rect x="81.7193%" y="997" width="3.9173%" height="15" fill="rgb(219,96,14)" fg:x="751" fg:w="36"/><text x="81.9693%" y="1007.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (35 samples, 3.81%)</title><rect x="81.8281%" y="981" width="3.8085%" height="15" fill="rgb(249,106,1)" fg:x="752" fg:w="35"/><text x="82.0781%" y="991.50">&lt;chu..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (35 samples, 3.81%)</title><rect x="81.8281%" y="965" width="3.8085%" height="15" fill="rgb(249,155,20)" fg:x="752" fg:w="35"/><text x="82.0781%" y="975.50">&lt;chu..</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (34 samples, 3.70%)</title><rect x="81.9369%" y="949" width="3.6997%" height="15" fill="rgb(244,168,9)" fg:x="753" fg:w="34"/><text x="82.1869%" y="959.50">chum..</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (34 samples, 3.70%)</title><rect x="81.9369%" y="933" width="3.6997%" height="15" fill="rgb(216,23,50)" fg:x="753" fg:w="34"/><text x="82.1869%" y="943.50">&lt;chu..</text></g><g><title>[libc-2.31.so] (2 samples, 0.22%)</title><rect x="85.4189%" y="917" width="0.2176%" height="15" fill="rgb(224,219,20)" fg:x="785" fg:w="2"/><text x="85.6689%" y="927.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::expected_input_found (3 samples, 0.33%)</title><rect x="85.7454%" y="1205" width="0.3264%" height="15" fill="rgb(222,156,15)" fg:x="788" fg:w="3"/><text x="85.9954%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="85.9630%" y="1189" width="0.1088%" height="15" fill="rgb(231,97,17)" fg:x="790" fg:w="1"/><text x="86.2130%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="85.9630%" y="1173" width="0.1088%" height="15" fill="rgb(218,70,48)" fg:x="790" fg:w="1"/><text x="86.2130%" y="1183.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (1 samples, 0.11%)</title><rect x="85.9630%" y="1157" width="0.1088%" height="15" fill="rgb(212,196,52)" fg:x="790" fg:w="1"/><text x="86.2130%" y="1167.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (41 samples, 4.46%)</title><rect x="81.7193%" y="1253" width="4.4614%" height="15" fill="rgb(243,203,18)" fg:x="751" fg:w="41"/><text x="81.9693%" y="1263.50">&lt;chum..</text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner_silent (5 samples, 0.54%)</title><rect x="85.6366%" y="1237" width="0.5441%" height="15" fill="rgb(252,125,41)" fg:x="787" fg:w="5"/><text x="85.8866%" y="1247.50"></text></g><g><title>&lt;chumsky::primitive::Just&lt;I,C,E&gt; as chumsky::Parser&lt;I,C&gt;&gt;::parse_inner (5 samples, 0.54%)</title><rect x="85.6366%" y="1221" width="0.5441%" height="15" fill="rgb(223,180,33)" fg:x="787" fg:w="5"/><text x="85.8866%" y="1231.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::next (1 samples, 0.11%)</title><rect x="86.0718%" y="1205" width="0.1088%" height="15" fill="rgb(254,159,46)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1215.50"></text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::pull_until (1 samples, 0.11%)</title><rect x="86.0718%" y="1189" width="0.1088%" height="15" fill="rgb(254,38,10)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1199.50"></text></g><g><title>&lt;I as chumsky::stream::StreamExtend&lt;&lt;I as core::iter::traits::iterator::Iterator&gt;::Item&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="86.0718%" y="1173" width="0.1088%" height="15" fill="rgb(208,217,32)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.11%)</title><rect x="86.0718%" y="1157" width="0.1088%" height="15" fill="rgb(221,120,13)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="86.0718%" y="1141" width="0.1088%" height="15" fill="rgb(246,54,52)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.11%)</title><rect x="86.0718%" y="1125" width="0.1088%" height="15" fill="rgb(242,34,25)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.0718%" y="1109" width="0.1088%" height="15" fill="rgb(247,209,9)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1119.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.0718%" y="1093" width="0.1088%" height="15" fill="rgb(228,71,26)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1103.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.0718%" y="1077" width="0.1088%" height="15" fill="rgb(222,145,49)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.0718%" y="1061" width="0.1088%" height="15" fill="rgb(218,121,17)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="86.0718%" y="1045" width="0.1088%" height="15" fill="rgb(244,50,7)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.11%)</title><rect x="86.0718%" y="1029" width="0.1088%" height="15" fill="rgb(246,229,37)" fg:x="791" fg:w="1"/><text x="86.3218%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="86.5071%" y="1221" width="0.1088%" height="15" fill="rgb(225,18,5)" fg:x="795" fg:w="1"/><text x="86.7571%" y="1231.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (5 samples, 0.54%)</title><rect x="86.1806%" y="1253" width="0.5441%" height="15" fill="rgb(213,204,8)" fg:x="792" fg:w="5"/><text x="86.4306%" y="1263.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (4 samples, 0.44%)</title><rect x="86.2894%" y="1237" width="0.4353%" height="15" fill="rgb(238,103,6)" fg:x="793" fg:w="4"/><text x="86.5394%" y="1247.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="86.6159%" y="1221" width="0.1088%" height="15" fill="rgb(222,25,35)" fg:x="796" fg:w="1"/><text x="86.8659%" y="1231.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="86.6159%" y="1205" width="0.1088%" height="15" fill="rgb(213,203,35)" fg:x="796" fg:w="1"/><text x="86.8659%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="86.6159%" y="1189" width="0.1088%" height="15" fill="rgb(221,79,53)" fg:x="796" fg:w="1"/><text x="86.8659%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.11%)</title><rect x="86.6159%" y="1173" width="0.1088%" height="15" fill="rgb(243,200,35)" fg:x="796" fg:w="1"/><text x="86.8659%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.11%)</title><rect x="86.6159%" y="1157" width="0.1088%" height="15" fill="rgb(248,60,25)" fg:x="796" fg:w="1"/><text x="86.8659%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.11%)</title><rect x="86.6159%" y="1141" width="0.1088%" height="15" fill="rgb(227,53,46)" fg:x="796" fg:w="1"/><text x="86.8659%" y="1151.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (49 samples, 5.33%)</title><rect x="81.7193%" y="1349" width="5.3319%" height="15" fill="rgb(216,120,32)" fg:x="751" fg:w="49"/><text x="81.9693%" y="1359.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (49 samples, 5.33%)</title><rect x="81.7193%" y="1333" width="5.3319%" height="15" fill="rgb(220,134,1)" fg:x="751" fg:w="49"/><text x="81.9693%" y="1343.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (49 samples, 5.33%)</title><rect x="81.7193%" y="1317" width="5.3319%" height="15" fill="rgb(237,168,5)" fg:x="751" fg:w="49"/><text x="81.9693%" y="1327.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (49 samples, 5.33%)</title><rect x="81.7193%" y="1301" width="5.3319%" height="15" fill="rgb(231,100,33)" fg:x="751" fg:w="49"/><text x="81.9693%" y="1311.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (49 samples, 5.33%)</title><rect x="81.7193%" y="1285" width="5.3319%" height="15" fill="rgb(236,177,47)" fg:x="751" fg:w="49"/><text x="81.9693%" y="1295.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (49 samples, 5.33%)</title><rect x="81.7193%" y="1269" width="5.3319%" height="15" fill="rgb(235,7,49)" fg:x="751" fg:w="49"/><text x="81.9693%" y="1279.50">&lt;chumsk..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (3 samples, 0.33%)</title><rect x="86.7247%" y="1253" width="0.3264%" height="15" fill="rgb(232,119,22)" fg:x="797" fg:w="3"/><text x="86.9747%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;chumsky::error::Located&lt;char,chumsky::error::Simple&lt;char&gt;&gt;&gt;&gt; (3 samples, 0.33%)</title><rect x="86.7247%" y="1237" width="0.3264%" height="15" fill="rgb(254,73,53)" fg:x="797" fg:w="3"/><text x="86.9747%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.33%)</title><rect x="86.7247%" y="1221" width="0.3264%" height="15" fill="rgb(251,35,20)" fg:x="797" fg:w="3"/><text x="86.9747%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.33%)</title><rect x="86.7247%" y="1205" width="0.3264%" height="15" fill="rgb(241,119,20)" fg:x="797" fg:w="3"/><text x="86.9747%" y="1215.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (51 samples, 5.55%)</title><rect x="81.6104%" y="1397" width="5.5495%" height="15" fill="rgb(207,102,14)" fg:x="750" fg:w="51"/><text x="81.8604%" y="1407.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (51 samples, 5.55%)</title><rect x="81.6104%" y="1381" width="5.5495%" height="15" fill="rgb(248,201,50)" fg:x="750" fg:w="51"/><text x="81.8604%" y="1391.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (51 samples, 5.55%)</title><rect x="81.6104%" y="1365" width="5.5495%" height="15" fill="rgb(222,185,44)" fg:x="750" fg:w="51"/><text x="81.8604%" y="1375.50">&lt;chumsk..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="87.0511%" y="1349" width="0.1088%" height="15" fill="rgb(218,107,18)" fg:x="800" fg:w="1"/><text x="87.3011%" y="1359.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (691 samples, 75.19%)</title><rect x="12.0783%" y="1445" width="75.1904%" height="15" fill="rgb(237,177,39)" fg:x="111" fg:w="691"/><text x="12.3283%" y="1455.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (52 samples, 5.66%)</title><rect x="81.6104%" y="1429" width="5.6583%" height="15" fill="rgb(246,69,6)" fg:x="750" fg:w="52"/><text x="81.8604%" y="1439.50">&lt;chumsk..</text></g><g><title>&lt;chumsky::combinator::MapWithSpan&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (52 samples, 5.66%)</title><rect x="81.6104%" y="1413" width="5.6583%" height="15" fill="rgb(234,208,37)" fg:x="750" fg:w="52"/><text x="81.8604%" y="1423.50">&lt;chumsk..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.11%)</title><rect x="87.1600%" y="1397" width="0.1088%" height="15" fill="rgb(225,4,6)" fg:x="801" fg:w="1"/><text x="87.4100%" y="1407.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="87.2688%" y="1445" width="0.1088%" height="15" fill="rgb(233,45,0)" fg:x="802" fg:w="1"/><text x="87.5188%" y="1455.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (693 samples, 75.41%)</title><rect x="12.0783%" y="1493" width="75.4081%" height="15" fill="rgb(226,136,5)" fg:x="111" fg:w="693"/><text x="12.3283%" y="1503.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent (693 samples, 75.41%)</title><rect x="12.0783%" y="1477" width="75.4081%" height="15" fill="rgb(211,91,47)" fg:x="111" fg:w="693"/><text x="12.3283%" y="1487.50">&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner (693 samples, 75.41%)</title><rect x="12.0783%" y="1461" width="75.4081%" height="15" fill="rgb(242,88,51)" fg:x="111" fg:w="693"/><text x="12.3283%" y="1471.50">&lt;chumsky::combinator::Or&lt;A,B&gt; as chumsky::Parser&lt;I,O&gt;&gt;::parse_inner</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.11%)</title><rect x="87.3776%" y="1445" width="0.1088%" height="15" fill="rgb(230,91,28)" fg:x="803" fg:w="1"/><text x="87.6276%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.11%)</title><rect x="87.3776%" y="1429" width="0.1088%" height="15" fill="rgb(254,186,29)" fg:x="803" fg:w="1"/><text x="87.6276%" y="1439.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="87.4864%" y="1493" width="0.1088%" height="15" fill="rgb(238,6,4)" fg:x="804" fg:w="1"/><text x="87.7364%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="87.5952%" y="1493" width="0.1088%" height="15" fill="rgb(221,151,16)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1503.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="87.5952%" y="1477" width="0.1088%" height="15" fill="rgb(251,143,52)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="87.5952%" y="1461" width="0.1088%" height="15" fill="rgb(206,90,15)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="87.5952%" y="1445" width="0.1088%" height="15" fill="rgb(218,35,8)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.11%)</title><rect x="87.5952%" y="1429" width="0.1088%" height="15" fill="rgb(239,215,6)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1439.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.11%)</title><rect x="87.5952%" y="1413" width="0.1088%" height="15" fill="rgb(245,116,39)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1423.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.11%)</title><rect x="87.5952%" y="1397" width="0.1088%" height="15" fill="rgb(242,65,28)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1407.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.11%)</title><rect x="87.5952%" y="1381" width="0.1088%" height="15" fill="rgb(252,132,53)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1391.50"></text></g><g><title>_int_realloc (1 samples, 0.11%)</title><rect x="87.5952%" y="1365" width="0.1088%" height="15" fill="rgb(224,159,50)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1375.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="87.5952%" y="1349" width="0.1088%" height="15" fill="rgb(224,93,4)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1359.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="87.5952%" y="1333" width="0.1088%" height="15" fill="rgb(208,81,34)" fg:x="805" fg:w="1"/><text x="87.8452%" y="1343.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="87.8128%" y="1461" width="0.1088%" height="15" fill="rgb(233,92,54)" fg:x="807" fg:w="1"/><text x="88.0628%" y="1471.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="87.8128%" y="1445" width="0.1088%" height="15" fill="rgb(237,21,14)" fg:x="807" fg:w="1"/><text x="88.0628%" y="1455.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="87.8128%" y="1429" width="0.1088%" height="15" fill="rgb(249,128,51)" fg:x="807" fg:w="1"/><text x="88.0628%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="87.8128%" y="1413" width="0.1088%" height="15" fill="rgb(223,129,24)" fg:x="807" fg:w="1"/><text x="88.0628%" y="1423.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.33%)</title><rect x="87.9217%" y="1461" width="0.3264%" height="15" fill="rgb(231,168,25)" fg:x="808" fg:w="3"/><text x="88.1717%" y="1471.50"></text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}} (701 samples, 76.28%)</title><rect x="12.0783%" y="1509" width="76.2786%" height="15" fill="rgb(224,39,20)" fg:x="111" fg:w="701"/><text x="12.3283%" y="1519.50">&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner::{{closure}}</text></g><g><title>chumsky::error::merge_alts (6 samples, 0.65%)</title><rect x="87.7040%" y="1493" width="0.6529%" height="15" fill="rgb(225,152,53)" fg:x="806" fg:w="6"/><text x="87.9540%" y="1503.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (5 samples, 0.54%)</title><rect x="87.8128%" y="1477" width="0.5441%" height="15" fill="rgb(252,17,24)" fg:x="807" fg:w="5"/><text x="88.0628%" y="1487.50"></text></g><g><title>__GI___libc_free (1 samples, 0.11%)</title><rect x="88.2481%" y="1461" width="0.1088%" height="15" fill="rgb(250,114,30)" fg:x="811" fg:w="1"/><text x="88.4981%" y="1471.50"></text></g><g><title>prql_compiler::parser::parse (702 samples, 76.39%)</title><rect x="12.0783%" y="1781" width="76.3874%" height="15" fill="rgb(229,5,4)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1791.50">prql_compiler::parser::parse</text></g><g><title>chumsky::Parser::parse_recovery (702 samples, 76.39%)</title><rect x="12.0783%" y="1765" width="76.3874%" height="15" fill="rgb(225,176,49)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1775.50">chumsky::Parser::parse_recovery</text></g><g><title>chumsky::parse_recovery_inner (702 samples, 76.39%)</title><rect x="12.0783%" y="1749" width="76.3874%" height="15" fill="rgb(224,221,49)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1759.50">chumsky::parse_recovery_inner</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (702 samples, 76.39%)</title><rect x="12.0783%" y="1733" width="76.3874%" height="15" fill="rgb(253,169,27)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1743.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (702 samples, 76.39%)</title><rect x="12.0783%" y="1717" width="76.3874%" height="15" fill="rgb(211,206,16)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1727.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (702 samples, 76.39%)</title><rect x="12.0783%" y="1701" width="76.3874%" height="15" fill="rgb(244,87,35)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1711.50">&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (702 samples, 76.39%)</title><rect x="12.0783%" y="1685" width="76.3874%" height="15" fill="rgb(246,28,10)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1695.50">&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (702 samples, 76.39%)</title><rect x="12.0783%" y="1669" width="76.3874%" height="15" fill="rgb(229,12,44)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1679.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (702 samples, 76.39%)</title><rect x="12.0783%" y="1653" width="76.3874%" height="15" fill="rgb(210,145,37)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1663.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (702 samples, 76.39%)</title><rect x="12.0783%" y="1637" width="76.3874%" height="15" fill="rgb(227,112,52)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1647.50">&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (702 samples, 76.39%)</title><rect x="12.0783%" y="1621" width="76.3874%" height="15" fill="rgb(238,155,34)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1631.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (702 samples, 76.39%)</title><rect x="12.0783%" y="1605" width="76.3874%" height="15" fill="rgb(239,226,36)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1615.50">&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (702 samples, 76.39%)</title><rect x="12.0783%" y="1589" width="76.3874%" height="15" fill="rgb(230,16,23)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1599.50">&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner</text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (702 samples, 76.39%)</title><rect x="12.0783%" y="1573" width="76.3874%" height="15" fill="rgb(236,171,36)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1583.50">&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent (702 samples, 76.39%)</title><rect x="12.0783%" y="1557" width="76.3874%" height="15" fill="rgb(221,22,14)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1567.50">&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner_silent</text></g><g><title>&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner (702 samples, 76.39%)</title><rect x="12.0783%" y="1541" width="76.3874%" height="15" fill="rgb(242,43,11)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1551.50">&lt;chumsky::combinator::Repeated&lt;A&gt; as chumsky::Parser&lt;I,alloc::vec::Vec&lt;O&gt;&gt;&gt;::parse_inner</text></g><g><title>chumsky::stream::Stream&lt;I,S&gt;::attempt (702 samples, 76.39%)</title><rect x="12.0783%" y="1525" width="76.3874%" height="15" fill="rgb(232,69,23)" fg:x="111" fg:w="702"/><text x="12.3283%" y="1535.50">chumsky::stream::Stream&lt;I,S&gt;::attempt</text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="88.3569%" y="1509" width="0.1088%" height="15" fill="rgb(216,180,54)" fg:x="812" fg:w="1"/><text x="88.6069%" y="1519.50"></text></g><g><title>&lt;prqlc::cli::CommandIO as clap::derive::Args&gt;::augment_args (1 samples, 0.11%)</title><rect x="88.4657%" y="1717" width="0.1088%" height="15" fill="rgb(216,5,24)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1727.50"></text></g><g><title>clap::builder::arg::Arg::value_name (1 samples, 0.11%)</title><rect x="88.4657%" y="1701" width="0.1088%" height="15" fill="rgb(225,89,9)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1711.50"></text></g><g><title>clap::builder::arg::Arg::value_names (1 samples, 0.11%)</title><rect x="88.4657%" y="1685" width="0.1088%" height="15" fill="rgb(243,75,33)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1695.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.11%)</title><rect x="88.4657%" y="1669" width="0.1088%" height="15" fill="rgb(247,141,45)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1679.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="88.4657%" y="1653" width="0.1088%" height="15" fill="rgb(232,177,36)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1663.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="88.4657%" y="1637" width="0.1088%" height="15" fill="rgb(219,125,36)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1647.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.11%)</title><rect x="88.4657%" y="1621" width="0.1088%" height="15" fill="rgb(227,94,9)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="88.4657%" y="1605" width="0.1088%" height="15" fill="rgb(240,34,52)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="88.4657%" y="1589" width="0.1088%" height="15" fill="rgb(216,45,12)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="88.4657%" y="1573" width="0.1088%" height="15" fill="rgb(246,21,19)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="88.4657%" y="1557" width="0.1088%" height="15" fill="rgb(213,98,42)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="88.4657%" y="1541" width="0.1088%" height="15" fill="rgb(250,136,47)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="88.4657%" y="1525" width="0.1088%" height="15" fill="rgb(251,124,27)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="88.4657%" y="1509" width="0.1088%" height="15" fill="rgb(229,180,14)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1519.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="88.4657%" y="1493" width="0.1088%" height="15" fill="rgb(245,216,25)" fg:x="813" fg:w="1"/><text x="88.7157%" y="1503.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.11%)</title><rect x="88.5745%" y="1701" width="0.1088%" height="15" fill="rgb(251,43,5)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1711.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (1 samples, 0.11%)</title><rect x="88.5745%" y="1685" width="0.1088%" height="15" fill="rgb(250,128,24)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1695.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="88.5745%" y="1669" width="0.1088%" height="15" fill="rgb(217,117,27)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1679.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.11%)</title><rect x="88.5745%" y="1653" width="0.1088%" height="15" fill="rgb(245,147,4)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1663.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.11%)</title><rect x="88.5745%" y="1637" width="0.1088%" height="15" fill="rgb(242,201,35)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1647.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.11%)</title><rect x="88.5745%" y="1621" width="0.1088%" height="15" fill="rgb(218,181,1)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.11%)</title><rect x="88.5745%" y="1605" width="0.1088%" height="15" fill="rgb(222,6,29)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1615.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.11%)</title><rect x="88.5745%" y="1589" width="0.1088%" height="15" fill="rgb(208,186,3)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1599.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.11%)</title><rect x="88.5745%" y="1573" width="0.1088%" height="15" fill="rgb(216,36,26)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1583.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (1 samples, 0.11%)</title><rect x="88.5745%" y="1557" width="0.1088%" height="15" fill="rgb(248,201,23)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1567.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.11%)</title><rect x="88.5745%" y="1541" width="0.1088%" height="15" fill="rgb(251,170,31)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.11%)</title><rect x="88.5745%" y="1525" width="0.1088%" height="15" fill="rgb(207,110,25)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1535.50"></text></g><g><title>&lt;prqlc::watch::WatchCommand as clap::derive::Args&gt;::augment_args::DEFAULT_VALUE::{{closure}} (1 samples, 0.11%)</title><rect x="88.5745%" y="1509" width="0.1088%" height="15" fill="rgb(250,54,15)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1519.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.11%)</title><rect x="88.5745%" y="1493" width="0.1088%" height="15" fill="rgb(227,68,33)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="88.5745%" y="1477" width="0.1088%" height="15" fill="rgb(238,34,41)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1487.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.11%)</title><rect x="88.5745%" y="1461" width="0.1088%" height="15" fill="rgb(220,11,15)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1471.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.11%)</title><rect x="88.5745%" y="1445" width="0.1088%" height="15" fill="rgb(246,111,35)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.11%)</title><rect x="88.5745%" y="1429" width="0.1088%" height="15" fill="rgb(209,88,53)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.11%)</title><rect x="88.5745%" y="1413" width="0.1088%" height="15" fill="rgb(231,185,47)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="88.5745%" y="1397" width="0.1088%" height="15" fill="rgb(233,154,1)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="88.5745%" y="1381" width="0.1088%" height="15" fill="rgb(225,15,46)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.11%)</title><rect x="88.5745%" y="1365" width="0.1088%" height="15" fill="rgb(211,135,41)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1375.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="88.5745%" y="1349" width="0.1088%" height="15" fill="rgb(208,54,0)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1359.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="88.5745%" y="1333" width="0.1088%" height="15" fill="rgb(244,136,14)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1343.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="88.5745%" y="1317" width="0.1088%" height="15" fill="rgb(241,56,14)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1327.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="88.5745%" y="1301" width="0.1088%" height="15" fill="rgb(205,80,24)" fg:x="814" fg:w="1"/><text x="88.8245%" y="1311.50"></text></g><g><title>clap::derive::Parser::parse (3 samples, 0.33%)</title><rect x="88.4657%" y="1765" width="0.3264%" height="15" fill="rgb(220,57,4)" fg:x="813" fg:w="3"/><text x="88.7157%" y="1775.50"></text></g><g><title>&lt;prqlc::cli::Cli as clap::derive::CommandFactory&gt;::command (3 samples, 0.33%)</title><rect x="88.4657%" y="1749" width="0.3264%" height="15" fill="rgb(226,193,50)" fg:x="813" fg:w="3"/><text x="88.7157%" y="1759.50"></text></g><g><title>&lt;prqlc::cli::Cli as clap::derive::Subcommand&gt;::augment_subcommands (3 samples, 0.33%)</title><rect x="88.4657%" y="1733" width="0.3264%" height="15" fill="rgb(231,168,22)" fg:x="813" fg:w="3"/><text x="88.7157%" y="1743.50"></text></g><g><title>&lt;prqlc::watch::WatchCommand as clap::derive::Args&gt;::augment_args (2 samples, 0.22%)</title><rect x="88.5745%" y="1717" width="0.2176%" height="15" fill="rgb(254,215,14)" fg:x="814" fg:w="2"/><text x="88.8245%" y="1727.50"></text></g><g><title>clap::builder::arg::Arg::required (1 samples, 0.11%)</title><rect x="88.6834%" y="1701" width="0.1088%" height="15" fill="rgb(211,115,16)" fg:x="815" fg:w="1"/><text x="88.9334%" y="1711.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="88.6834%" y="1685" width="0.1088%" height="15" fill="rgb(236,210,16)" fg:x="815" fg:w="1"/><text x="88.9334%" y="1695.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.11%)</title><rect x="88.7922%" y="1701" width="0.1088%" height="15" fill="rgb(221,94,12)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1711.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.11%)</title><rect x="88.7922%" y="1685" width="0.1088%" height="15" fill="rgb(235,218,49)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1695.50"></text></g><g><title>prql_compiler::semantic::resolve (1 samples, 0.11%)</title><rect x="88.7922%" y="1669" width="0.1088%" height="15" fill="rgb(217,114,14)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1679.50"></text></g><g><title>prql_compiler::semantic::load_std_lib (1 samples, 0.11%)</title><rect x="88.7922%" y="1653" width="0.1088%" height="15" fill="rgb(216,145,22)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1663.50"></text></g><g><title>prql_compiler::parser::parse (1 samples, 0.11%)</title><rect x="88.7922%" y="1637" width="0.1088%" height="15" fill="rgb(217,112,39)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1647.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;(prql_compiler::parser::lexer::Token,core::ops::range::Range&lt;usize&gt;)&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="88.7922%" y="1621" width="0.1088%" height="15" fill="rgb(225,85,32)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1631.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(prql_compiler::parser::lexer::Token,core::ops::range::Range&lt;usize&gt;)&gt;&gt; (1 samples, 0.11%)</title><rect x="88.7922%" y="1605" width="0.1088%" height="15" fill="rgb(245,209,47)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(prql_compiler::parser::lexer::Token,core::ops::range::Range&lt;usize&gt;)&gt;&gt; (1 samples, 0.11%)</title><rect x="88.7922%" y="1589" width="0.1088%" height="15" fill="rgb(218,220,15)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1599.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="88.7922%" y="1573" width="0.1088%" height="15" fill="rgb(222,202,31)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1583.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="88.7922%" y="1557" width="0.1088%" height="15" fill="rgb(243,203,4)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1567.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="88.7922%" y="1541" width="0.1088%" height="15" fill="rgb(237,92,17)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1551.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="88.7922%" y="1525" width="0.1088%" height="15" fill="rgb(231,119,7)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1535.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="88.7922%" y="1509" width="0.1088%" height="15" fill="rgb(237,82,41)" fg:x="816" fg:w="1"/><text x="89.0422%" y="1519.50"></text></g><g><title>[unknown] (817 samples, 88.90%)</title><rect x="0.1088%" y="1797" width="88.9010%" height="15" fill="rgb(226,81,48)" fg:x="1" fg:w="817"/><text x="0.3588%" y="1807.50">[unknown]</text></g><g><title>prqlc::cli::main (5 samples, 0.54%)</title><rect x="88.4657%" y="1781" width="0.5441%" height="15" fill="rgb(234,70,51)" fg:x="813" fg:w="5"/><text x="88.7157%" y="1791.50"></text></g><g><title>prqlc::cli::Cli::run (2 samples, 0.22%)</title><rect x="88.7922%" y="1765" width="0.2176%" height="15" fill="rgb(251,86,4)" fg:x="816" fg:w="2"/><text x="89.0422%" y="1775.50"></text></g><g><title>prqlc::cli::Cli::run_io_command (2 samples, 0.22%)</title><rect x="88.7922%" y="1749" width="0.2176%" height="15" fill="rgb(244,144,28)" fg:x="816" fg:w="2"/><text x="89.0422%" y="1759.50"></text></g><g><title>prqlc::cli::Cli::execute (2 samples, 0.22%)</title><rect x="88.7922%" y="1733" width="0.2176%" height="15" fill="rgb(232,161,39)" fg:x="816" fg:w="2"/><text x="89.0422%" y="1743.50"></text></g><g><title>prql_compiler::compile (2 samples, 0.22%)</title><rect x="88.7922%" y="1717" width="0.2176%" height="15" fill="rgb(247,34,51)" fg:x="816" fg:w="2"/><text x="89.0422%" y="1727.50"></text></g><g><title>prql_compiler::parser::parse (1 samples, 0.11%)</title><rect x="88.9010%" y="1701" width="0.1088%" height="15" fill="rgb(225,132,2)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1711.50"></text></g><g><title>chumsky::Parser::parse_recovery (1 samples, 0.11%)</title><rect x="88.9010%" y="1685" width="0.1088%" height="15" fill="rgb(209,159,44)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1695.50"></text></g><g><title>chumsky::parse_recovery_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1669" width="0.1088%" height="15" fill="rgb(251,214,1)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1679.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1653" width="0.1088%" height="15" fill="rgb(247,84,47)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1663.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="88.9010%" y="1637" width="0.1088%" height="15" fill="rgb(240,111,43)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1647.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="88.9010%" y="1621" width="0.1088%" height="15" fill="rgb(215,214,35)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1631.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1605" width="0.1088%" height="15" fill="rgb(248,207,23)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1615.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="88.9010%" y="1589" width="0.1088%" height="15" fill="rgb(214,186,4)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1599.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="88.9010%" y="1573" width="0.1088%" height="15" fill="rgb(220,133,22)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1583.50"></text></g><g><title>&lt;chumsky::combinator::Map&lt;A,F,O&gt; as chumsky::Parser&lt;I,U&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1557" width="0.1088%" height="15" fill="rgb(239,134,19)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1567.50"></text></g><g><title>&lt;chumsky::debug::Silent as chumsky::debug::Debugger&gt;::invoke (1 samples, 0.11%)</title><rect x="88.9010%" y="1541" width="0.1088%" height="15" fill="rgb(250,140,9)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1551.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner_silent (1 samples, 0.11%)</title><rect x="88.9010%" y="1525" width="0.1088%" height="15" fill="rgb(225,59,14)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1535.50"></text></g><g><title>&lt;chumsky::combinator::Then&lt;A,B&gt; as chumsky::Parser&lt;I,(O,U)&gt;&gt;::parse_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1509" width="0.1088%" height="15" fill="rgb(214,152,51)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1519.50"></text></g><g><title>chumsky::error::merge_alts (1 samples, 0.11%)</title><rect x="88.9010%" y="1493" width="0.1088%" height="15" fill="rgb(251,227,43)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1503.50"></text></g><g><title>chumsky::error::Located&lt;I,E&gt;::max (1 samples, 0.11%)</title><rect x="88.9010%" y="1477" width="0.1088%" height="15" fill="rgb(241,96,17)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1487.50"></text></g><g><title>&lt;chumsky::error::Simple&lt;I,S&gt; as chumsky::error::Error&lt;I&gt;&gt;::merge (1 samples, 0.11%)</title><rect x="88.9010%" y="1461" width="0.1088%" height="15" fill="rgb(234,198,43)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1471.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.11%)</title><rect x="88.9010%" y="1445" width="0.1088%" height="15" fill="rgb(220,108,29)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1455.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="88.9010%" y="1429" width="0.1088%" height="15" fill="rgb(226,163,33)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.11%)</title><rect x="88.9010%" y="1413" width="0.1088%" height="15" fill="rgb(205,194,45)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.11%)</title><rect x="88.9010%" y="1397" width="0.1088%" height="15" fill="rgb(206,143,44)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.11%)</title><rect x="88.9010%" y="1381" width="0.1088%" height="15" fill="rgb(236,136,36)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1391.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.11%)</title><rect x="88.9010%" y="1365" width="0.1088%" height="15" fill="rgb(249,172,42)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1349" width="0.1088%" height="15" fill="rgb(216,139,23)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.11%)</title><rect x="88.9010%" y="1333" width="0.1088%" height="15" fill="rgb(207,166,20)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.11%)</title><rect x="88.9010%" y="1317" width="0.1088%" height="15" fill="rgb(210,209,22)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.11%)</title><rect x="88.9010%" y="1301" width="0.1088%" height="15" fill="rgb(232,118,20)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1311.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.11%)</title><rect x="88.9010%" y="1285" width="0.1088%" height="15" fill="rgb(238,113,42)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1295.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.11%)</title><rect x="88.9010%" y="1269" width="0.1088%" height="15" fill="rgb(231,42,5)" fg:x="817" fg:w="1"/><text x="89.1510%" y="1279.50"></text></g><g><title>_dl_start_user (1 samples, 0.11%)</title><rect x="89.0098%" y="1797" width="0.1088%" height="15" fill="rgb(243,166,24)" fg:x="818" fg:w="1"/><text x="89.2598%" y="1807.50"></text></g><g><title>_dl_init (1 samples, 0.11%)</title><rect x="89.0098%" y="1781" width="0.1088%" height="15" fill="rgb(237,226,12)" fg:x="818" fg:w="1"/><text x="89.2598%" y="1791.50"></text></g><g><title>call_init.part.0 (1 samples, 0.11%)</title><rect x="89.0098%" y="1765" width="0.1088%" height="15" fill="rgb(229,133,24)" fg:x="818" fg:w="1"/><text x="89.2598%" y="1775.50"></text></g><g><title>check_stdfiles_vtables (1 samples, 0.11%)</title><rect x="89.0098%" y="1749" width="0.1088%" height="15" fill="rgb(238,33,43)" fg:x="818" fg:w="1"/><text x="89.2598%" y="1759.50"></text></g><g><title>_init (1 samples, 0.11%)</title><rect x="89.1186%" y="1797" width="0.1088%" height="15" fill="rgb(227,59,38)" fg:x="819" fg:w="1"/><text x="89.3686%" y="1807.50"></text></g><g><title>__pthread_initialize_minimal_internal (1 samples, 0.11%)</title><rect x="89.1186%" y="1781" width="0.1088%" height="15" fill="rgb(230,97,0)" fg:x="819" fg:w="1"/><text x="89.3686%" y="1791.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.11%)</title><rect x="89.1186%" y="1765" width="0.1088%" height="15" fill="rgb(250,173,50)" fg:x="819" fg:w="1"/><text x="89.3686%" y="1775.50"></text></g><g><title>_dl_fixup (1 samples, 0.11%)</title><rect x="89.1186%" y="1749" width="0.1088%" height="15" fill="rgb(240,15,50)" fg:x="819" fg:w="1"/><text x="89.3686%" y="1759.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.11%)</title><rect x="89.1186%" y="1733" width="0.1088%" height="15" fill="rgb(221,93,22)" fg:x="819" fg:w="1"/><text x="89.3686%" y="1743.50"></text></g><g><title>do_lookup_x (1 samples, 0.11%)</title><rect x="89.1186%" y="1717" width="0.1088%" height="15" fill="rgb(245,180,53)" fg:x="819" fg:w="1"/><text x="89.3686%" y="1727.50"></text></g><g><title>[ld-2.31.so] (5 samples, 0.54%)</title><rect x="89.2274%" y="1781" width="0.5441%" height="15" fill="rgb(231,88,51)" fg:x="820" fg:w="5"/><text x="89.4774%" y="1791.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="89.6627%" y="1765" width="0.1088%" height="15" fill="rgb(240,58,21)" fg:x="824" fg:w="1"/><text x="89.9127%" y="1775.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="89.7715%" y="1781" width="0.1088%" height="15" fill="rgb(237,21,10)" fg:x="825" fg:w="1"/><text x="90.0215%" y="1791.50"></text></g><g><title>__GI___cxa_atexit (1 samples, 0.11%)</title><rect x="89.8803%" y="1765" width="0.1088%" height="15" fill="rgb(218,43,11)" fg:x="826" fg:w="1"/><text x="90.1303%" y="1775.50"></text></g><g><title>__new_exitfn (1 samples, 0.11%)</title><rect x="89.8803%" y="1749" width="0.1088%" height="15" fill="rgb(218,221,29)" fg:x="826" fg:w="1"/><text x="90.1303%" y="1759.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.11%)</title><rect x="89.9891%" y="1685" width="0.1088%" height="15" fill="rgb(214,118,42)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1695.50"></text></g><g><title>std::rt::cleanup (1 samples, 0.11%)</title><rect x="89.9891%" y="1669" width="0.1088%" height="15" fill="rgb(251,200,26)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1679.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.11%)</title><rect x="89.9891%" y="1653" width="0.1088%" height="15" fill="rgb(237,101,39)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1663.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.11%)</title><rect x="89.9891%" y="1637" width="0.1088%" height="15" fill="rgb(251,117,11)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1647.50"></text></g><g><title>std::sync::once::Once::call_once::{{closure}} (1 samples, 0.11%)</title><rect x="89.9891%" y="1621" width="0.1088%" height="15" fill="rgb(216,223,23)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1631.50"></text></g><g><title>std::rt::cleanup::{{closure}} (1 samples, 0.11%)</title><rect x="89.9891%" y="1605" width="0.1088%" height="15" fill="rgb(251,54,12)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1615.50"></text></g><g><title>std::sys::unix::cleanup (1 samples, 0.11%)</title><rect x="89.9891%" y="1589" width="0.1088%" height="15" fill="rgb(254,176,54)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1599.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::cleanup (1 samples, 0.11%)</title><rect x="89.9891%" y="1573" width="0.1088%" height="15" fill="rgb(210,32,8)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1583.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.11%)</title><rect x="89.9891%" y="1557" width="0.1088%" height="15" fill="rgb(235,52,38)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1567.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.11%)</title><rect x="89.9891%" y="1541" width="0.1088%" height="15" fill="rgb(231,4,44)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1551.50"></text></g><g><title>__GI___sysconf (1 samples, 0.11%)</title><rect x="89.9891%" y="1525" width="0.1088%" height="15" fill="rgb(249,2,32)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1535.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.11%)</title><rect x="89.9891%" y="1509" width="0.1088%" height="15" fill="rgb(224,65,26)" fg:x="827" fg:w="1"/><text x="90.2391%" y="1519.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="90.0979%" y="1493" width="0.1088%" height="15" fill="rgb(250,73,40)" fg:x="828" fg:w="1"/><text x="90.3479%" y="1503.50"></text></g><g><title>clap::builder::command::Command::about (1 samples, 0.11%)</title><rect x="90.2067%" y="1493" width="0.1088%" height="15" fill="rgb(253,177,16)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1503.50"></text></g><g><title>&lt;I as clap::builder::resettable::IntoResettable&lt;clap::builder::styled_str::StyledStr&gt;&gt;::into_resettable (1 samples, 0.11%)</title><rect x="90.2067%" y="1477" width="0.1088%" height="15" fill="rgb(217,32,34)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1487.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="90.2067%" y="1461" width="0.1088%" height="15" fill="rgb(212,7,10)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1471.50"></text></g><g><title>&lt;clap::builder::styled_str::StyledStr as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.11%)</title><rect x="90.2067%" y="1445" width="0.1088%" height="15" fill="rgb(245,89,8)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1455.50"></text></g><g><title>clap::builder::styled_str::StyledStr::none (1 samples, 0.11%)</title><rect x="90.2067%" y="1429" width="0.1088%" height="15" fill="rgb(237,16,53)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1439.50"></text></g><g><title>clap::builder::styled_str::StyledStr::stylize_ (1 samples, 0.11%)</title><rect x="90.2067%" y="1413" width="0.1088%" height="15" fill="rgb(250,204,30)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1423.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="90.2067%" y="1397" width="0.1088%" height="15" fill="rgb(208,77,27)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1407.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="90.2067%" y="1381" width="0.1088%" height="15" fill="rgb(250,204,28)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1391.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="90.2067%" y="1365" width="0.1088%" height="15" fill="rgb(244,63,21)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1375.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="90.2067%" y="1349" width="0.1088%" height="15" fill="rgb(236,85,44)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1359.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="90.2067%" y="1333" width="0.1088%" height="15" fill="rgb(215,98,4)" fg:x="829" fg:w="1"/><text x="90.4567%" y="1343.50"></text></g><g><title>&lt;prqlc::cli::Cli as clap::derive::Subcommand&gt;::augment_subcommands (3 samples, 0.33%)</title><rect x="90.0979%" y="1509" width="0.3264%" height="15" fill="rgb(235,38,11)" fg:x="828" fg:w="3"/><text x="90.3479%" y="1519.50"></text></g><g><title>clap::builder::command::Command::subcommand (1 samples, 0.11%)</title><rect x="90.3156%" y="1493" width="0.1088%" height="15" fill="rgb(254,186,25)" fg:x="830" fg:w="1"/><text x="90.5656%" y="1503.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="90.3156%" y="1477" width="0.1088%" height="15" fill="rgb(225,55,31)" fg:x="830" fg:w="1"/><text x="90.5656%" y="1487.50"></text></g><g><title>&lt;prqlc::cli::Cli as clap::derive::CommandFactory&gt;::command (4 samples, 0.44%)</title><rect x="90.0979%" y="1525" width="0.4353%" height="15" fill="rgb(211,15,21)" fg:x="828" fg:w="4"/><text x="90.3479%" y="1535.50"></text></g><g><title>clap::builder::command::Command::arg_required_else_help (1 samples, 0.11%)</title><rect x="90.4244%" y="1509" width="0.1088%" height="15" fill="rgb(215,187,41)" fg:x="831" fg:w="1"/><text x="90.6744%" y="1519.50"></text></g><g><title>clap::builder::command::Command::setting (1 samples, 0.11%)</title><rect x="90.4244%" y="1493" width="0.1088%" height="15" fill="rgb(248,69,32)" fg:x="831" fg:w="1"/><text x="90.6744%" y="1503.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="90.4244%" y="1477" width="0.1088%" height="15" fill="rgb(252,102,52)" fg:x="831" fg:w="1"/><text x="90.6744%" y="1487.50"></text></g><g><title>&lt;clap::builder::app_settings::AppFlags as core::convert::From&lt;clap::builder::app_settings::AppSettings&gt;&gt;::from (1 samples, 0.11%)</title><rect x="90.4244%" y="1461" width="0.1088%" height="15" fill="rgb(253,140,32)" fg:x="831" fg:w="1"/><text x="90.6744%" y="1471.50"></text></g><g><title>&lt;prqlc::cli::Cli as clap::derive::FromArgMatches&gt;::from_arg_matches_mut (1 samples, 0.11%)</title><rect x="90.5332%" y="1525" width="0.1088%" height="15" fill="rgb(216,56,42)" fg:x="832" fg:w="1"/><text x="90.7832%" y="1535.50"></text></g><g><title>clap::parser::matches::arg_matches::ArgMatches::contains_id (1 samples, 0.11%)</title><rect x="90.5332%" y="1509" width="0.1088%" height="15" fill="rgb(216,184,14)" fg:x="832" fg:w="1"/><text x="90.7832%" y="1519.50"></text></g><g><title>clap::parser::matches::arg_matches::ArgMatches::try_contains_id (1 samples, 0.11%)</title><rect x="90.5332%" y="1493" width="0.1088%" height="15" fill="rgb(237,187,27)" fg:x="832" fg:w="1"/><text x="90.7832%" y="1503.50"></text></g><g><title>clap::util::flat_map::FlatMap&lt;K,V&gt;::contains_key (1 samples, 0.11%)</title><rect x="90.5332%" y="1477" width="0.1088%" height="15" fill="rgb(219,65,3)" fg:x="832" fg:w="1"/><text x="90.7832%" y="1487.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.11%)</title><rect x="90.5332%" y="1461" width="0.1088%" height="15" fill="rgb(245,83,25)" fg:x="832" fg:w="1"/><text x="90.7832%" y="1471.50"></text></g><g><title>clap::builder::command::Command::_build_self (1 samples, 0.11%)</title><rect x="90.6420%" y="1461" width="0.1088%" height="15" fill="rgb(214,205,45)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1471.50"></text></g><g><title>clap::builder::command::Command::_check_help_and_version (1 samples, 0.11%)</title><rect x="90.6420%" y="1445" width="0.1088%" height="15" fill="rgb(241,20,18)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1455.50"></text></g><g><title>clap::builder::arg::Arg::help (1 samples, 0.11%)</title><rect x="90.6420%" y="1429" width="0.1088%" height="15" fill="rgb(232,163,23)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1439.50"></text></g><g><title>&lt;I as clap::builder::resettable::IntoResettable&lt;clap::builder::styled_str::StyledStr&gt;&gt;::into_resettable (1 samples, 0.11%)</title><rect x="90.6420%" y="1413" width="0.1088%" height="15" fill="rgb(214,5,46)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1423.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.11%)</title><rect x="90.6420%" y="1397" width="0.1088%" height="15" fill="rgb(229,78,17)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1407.50"></text></g><g><title>&lt;clap::builder::styled_str::StyledStr as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.11%)</title><rect x="90.6420%" y="1381" width="0.1088%" height="15" fill="rgb(248,89,10)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1391.50"></text></g><g><title>clap::builder::styled_str::StyledStr::none (1 samples, 0.11%)</title><rect x="90.6420%" y="1365" width="0.1088%" height="15" fill="rgb(248,54,15)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1375.50"></text></g><g><title>clap::builder::styled_str::StyledStr::stylize_ (1 samples, 0.11%)</title><rect x="90.6420%" y="1349" width="0.1088%" height="15" fill="rgb(223,116,6)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.11%)</title><rect x="90.6420%" y="1333" width="0.1088%" height="15" fill="rgb(205,125,38)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="90.6420%" y="1317" width="0.1088%" height="15" fill="rgb(251,78,38)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="90.6420%" y="1301" width="0.1088%" height="15" fill="rgb(253,78,28)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="90.6420%" y="1285" width="0.1088%" height="15" fill="rgb(209,120,3)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1295.50"></text></g><g><title>__rdl_alloc (1 samples, 0.11%)</title><rect x="90.6420%" y="1269" width="0.1088%" height="15" fill="rgb(238,229,9)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1279.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.11%)</title><rect x="90.6420%" y="1253" width="0.1088%" height="15" fill="rgb(253,159,18)" fg:x="833" fg:w="1"/><text x="90.8920%" y="1263.50"></text></g><g><title>clap::parser::arg_matcher::ArgMatcher::propagate_globals (1 samples, 0.11%)</title><rect x="90.7508%" y="1461" width="0.1088%" height="15" fill="rgb(244,42,34)" fg:x="834" fg:w="1"/><text x="91.0008%" y="1471.50"></text></g><g><title>clap::parser::arg_matcher::ArgMatcher::fill_in_global_values (1 samples, 0.11%)</title><rect x="90.7508%" y="1445" width="0.1088%" height="15" fill="rgb(224,8,7)" fg:x="834" fg:w="1"/><text x="91.0008%" y="1455.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.11%)</title><rect x="90.8596%" y="1445" width="0.1088%" height="15" fill="rgb(210,201,45)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.11%)</title><rect x="90.8596%" y="1429" width="0.1088%" height="15" fill="rgb(252,185,21)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.11%)</title><rect x="90.8596%" y="1413" width="0.1088%" height="15" fill="rgb(223,131,1)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1423.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.11%)</title><rect x="90.8596%" y="1397" width="0.1088%" height="15" fill="rgb(245,141,16)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1407.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.11%)</title><rect x="90.8596%" y="1381" width="0.1088%" height="15" fill="rgb(229,55,45)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1391.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.11%)</title><rect x="90.8596%" y="1365" width="0.1088%" height="15" fill="rgb(208,92,15)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1375.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="90.8596%" y="1349" width="0.1088%" height="15" fill="rgb(234,185,47)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="90.8596%" y="1333" width="0.1088%" height="15" fill="rgb(253,104,50)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="90.8596%" y="1317" width="0.1088%" height="15" fill="rgb(205,70,7)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="90.8596%" y="1301" width="0.1088%" height="15" fill="rgb(240,178,43)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="90.8596%" y="1285" width="0.1088%" height="15" fill="rgb(214,112,2)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="90.8596%" y="1269" width="0.1088%" height="15" fill="rgb(206,46,17)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1279.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="90.8596%" y="1253" width="0.1088%" height="15" fill="rgb(225,220,16)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1263.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="90.8596%" y="1237" width="0.1088%" height="15" fill="rgb(238,65,40)" fg:x="835" fg:w="1"/><text x="91.1096%" y="1247.50"></text></g><g><title>clap::builder::command::Command::_build_subcommand (1 samples, 0.11%)</title><rect x="90.9684%" y="1429" width="0.1088%" height="15" fill="rgb(230,151,21)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1439.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.11%)</title><rect x="90.9684%" y="1413" width="0.1088%" height="15" fill="rgb(218,58,49)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.11%)</title><rect x="90.9684%" y="1397" width="0.1088%" height="15" fill="rgb(219,179,14)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1407.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1 samples, 0.11%)</title><rect x="90.9684%" y="1381" width="0.1088%" height="15" fill="rgb(223,72,1)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1391.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.11%)</title><rect x="90.9684%" y="1365" width="0.1088%" height="15" fill="rgb(238,126,10)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1375.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.11%)</title><rect x="90.9684%" y="1349" width="0.1088%" height="15" fill="rgb(224,206,38)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1359.50"></text></g><g><title>core::fmt::write (1 samples, 0.11%)</title><rect x="90.9684%" y="1333" width="0.1088%" height="15" fill="rgb(212,201,54)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1343.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.11%)</title><rect x="90.9684%" y="1317" width="0.1088%" height="15" fill="rgb(218,154,48)" fg:x="836" fg:w="1"/><text x="91.2184%" y="1327.50"></text></g><g><title>clap::parser::parser::Parser::add_defaults (1 samples, 0.11%)</title><rect x="91.0773%" y="1413" width="0.1088%" height="15" fill="rgb(232,93,24)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1423.50"></text></g><g><title>clap::parser::parser::Parser::add_default_value (1 samples, 0.11%)</title><rect x="91.0773%" y="1397" width="0.1088%" height="15" fill="rgb(245,30,21)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1407.50"></text></g><g><title>clap::parser::parser::Parser::react (1 samples, 0.11%)</title><rect x="91.0773%" y="1381" width="0.1088%" height="15" fill="rgb(242,148,29)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1391.50"></text></g><g><title>clap::parser::parser::Parser::push_arg_values (1 samples, 0.11%)</title><rect x="91.0773%" y="1365" width="0.1088%" height="15" fill="rgb(244,153,54)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1375.50"></text></g><g><title>clap::builder::value_parser::ValueParser::parse_ref (1 samples, 0.11%)</title><rect x="91.0773%" y="1349" width="0.1088%" height="15" fill="rgb(252,87,22)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1359.50"></text></g><g><title>&lt;P as clap::builder::value_parser::AnyValueParser&gt;::parse_ref (1 samples, 0.11%)</title><rect x="91.0773%" y="1333" width="0.1088%" height="15" fill="rgb(210,51,29)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1343.50"></text></g><g><title>&lt;clio::clapers::OsStrParser&lt;T&gt; as clap::builder::value_parser::TypedValueParser&gt;::parse_ref (1 samples, 0.11%)</title><rect x="91.0773%" y="1317" width="0.1088%" height="15" fill="rgb(242,136,47)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1327.50"></text></g><g><title>&lt;clio::output::Output as core::convert::TryFrom&lt;&amp;std::ffi::os_str::OsStr&gt;&gt;::try_from (1 samples, 0.11%)</title><rect x="91.0773%" y="1301" width="0.1088%" height="15" fill="rgb(238,68,4)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1311.50"></text></g><g><title>clio::output::Output::new (1 samples, 0.11%)</title><rect x="91.0773%" y="1285" width="0.1088%" height="15" fill="rgb(242,161,30)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1295.50"></text></g><g><title>clio::output::SizedOutput::without_len (1 samples, 0.11%)</title><rect x="91.0773%" y="1269" width="0.1088%" height="15" fill="rgb(218,58,44)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1279.50"></text></g><g><title>clio::output::SizedOutput::maybe_with_len (1 samples, 0.11%)</title><rect x="91.0773%" y="1253" width="0.1088%" height="15" fill="rgb(252,125,32)" fg:x="837" fg:w="1"/><text x="91.3273%" y="1263.50"></text></g><g><title>clap::derive::Parser::parse (11 samples, 1.20%)</title><rect x="90.0979%" y="1541" width="1.1970%" height="15" fill="rgb(219,178,0)" fg:x="828" fg:w="11"/><text x="90.3479%" y="1551.50"></text></g><g><title>clap::builder::command::Command::get_matches (6 samples, 0.65%)</title><rect x="90.6420%" y="1525" width="0.6529%" height="15" fill="rgb(213,152,7)" fg:x="833" fg:w="6"/><text x="90.8920%" y="1535.50"></text></g><g><title>clap::builder::command::Command::get_matches_from (6 samples, 0.65%)</title><rect x="90.6420%" y="1509" width="0.6529%" height="15" fill="rgb(249,109,34)" fg:x="833" fg:w="6"/><text x="90.8920%" y="1519.50"></text></g><g><title>clap::builder::command::Command::try_get_matches_from_mut (6 samples, 0.65%)</title><rect x="90.6420%" y="1493" width="0.6529%" height="15" fill="rgb(232,96,21)" fg:x="833" fg:w="6"/><text x="90.8920%" y="1503.50"></text></g><g><title>clap::builder::command::Command::_do_parse (6 samples, 0.65%)</title><rect x="90.6420%" y="1477" width="0.6529%" height="15" fill="rgb(228,27,39)" fg:x="833" fg:w="6"/><text x="90.8920%" y="1487.50"></text></g><g><title>clap::parser::parser::Parser::get_matches_with (4 samples, 0.44%)</title><rect x="90.8596%" y="1461" width="0.4353%" height="15" fill="rgb(211,182,52)" fg:x="835" fg:w="4"/><text x="91.1096%" y="1471.50"></text></g><g><title>clap::parser::parser::Parser::parse_subcommand (3 samples, 0.33%)</title><rect x="90.9684%" y="1445" width="0.3264%" height="15" fill="rgb(234,178,38)" fg:x="836" fg:w="3"/><text x="91.2184%" y="1455.50"></text></g><g><title>clap::parser::parser::Parser::get_matches_with (2 samples, 0.22%)</title><rect x="91.0773%" y="1429" width="0.2176%" height="15" fill="rgb(221,111,3)" fg:x="837" fg:w="2"/><text x="91.3273%" y="1439.50"></text></g><g><title>clap::parser::parser::Parser::resolve_pending (1 samples, 0.11%)</title><rect x="91.1861%" y="1413" width="0.1088%" height="15" fill="rgb(228,175,21)" fg:x="838" fg:w="1"/><text x="91.4361%" y="1423.50"></text></g><g><title>clap::parser::parser::Parser::react (1 samples, 0.11%)</title><rect x="91.1861%" y="1397" width="0.1088%" height="15" fill="rgb(228,174,43)" fg:x="838" fg:w="1"/><text x="91.4361%" y="1407.50"></text></g><g><title>clap::parser::parser::Parser::push_arg_values (1 samples, 0.11%)</title><rect x="91.1861%" y="1381" width="0.1088%" height="15" fill="rgb(211,191,0)" fg:x="838" fg:w="1"/><text x="91.4361%" y="1391.50"></text></g><g><title>clap::builder::value_parser::ValueParser::parse_ref (1 samples, 0.11%)</title><rect x="91.1861%" y="1365" width="0.1088%" height="15" fill="rgb(253,117,3)" fg:x="838" fg:w="1"/><text x="91.4361%" y="1375.50"></text></g><g><title>&lt;P as clap::builder::value_parser::AnyValueParser&gt;::parse_ref (1 samples, 0.11%)</title><rect x="91.1861%" y="1349" width="0.1088%" height="15" fill="rgb(241,127,19)" fg:x="838" fg:w="1"/><text x="91.4361%" y="1359.50"></text></g><g><title>&lt;clio::clapers::OsStrParser&lt;T&gt; as clap::builder::value_parser::TypedValueParser&gt;::parse_ref (1 samples, 0.11%)</title><rect x="91.1861%" y="1333" width="0.1088%" height="15" fill="rgb(218,103,12)" fg:x="838" fg:w="1"/><text x="91.4361%" y="1343.50"></text></g><g><title>color_eyre::install (1 samples, 0.11%)</title><rect x="91.2949%" y="1541" width="0.1088%" height="15" fill="rgb(236,214,43)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1551.50"></text></g><g><title>color_eyre::config::HookBuilder::install (1 samples, 0.11%)</title><rect x="91.2949%" y="1525" width="0.1088%" height="15" fill="rgb(244,144,19)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1535.50"></text></g><g><title>color_eyre::config::HookBuilder::into_hooks (1 samples, 0.11%)</title><rect x="91.2949%" y="1509" width="0.1088%" height="15" fill="rgb(246,188,10)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1519.50"></text></g><g><title>color_spantrace::set_theme (1 samples, 0.11%)</title><rect x="91.2949%" y="1493" width="0.1088%" height="15" fill="rgb(212,193,33)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1503.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::set (1 samples, 0.11%)</title><rect x="91.2949%" y="1477" width="0.1088%" height="15" fill="rgb(241,51,29)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1487.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::try_insert (1 samples, 0.11%)</title><rect x="91.2949%" y="1461" width="0.1088%" height="15" fill="rgb(211,58,19)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1471.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.11%)</title><rect x="91.2949%" y="1445" width="0.1088%" height="15" fill="rgb(229,111,26)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1455.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.11%)</title><rect x="91.2949%" y="1429" width="0.1088%" height="15" fill="rgb(213,115,40)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1439.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.11%)</title><rect x="91.2949%" y="1413" width="0.1088%" height="15" fill="rgb(209,56,44)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1423.50"></text></g><g><title>once_cell::imp::initialize_or_wait (1 samples, 0.11%)</title><rect x="91.2949%" y="1397" width="0.1088%" height="15" fill="rgb(230,108,32)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::Guard&gt; (1 samples, 0.11%)</title><rect x="91.2949%" y="1381" width="0.1088%" height="15" fill="rgb(216,165,31)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1391.50"></text></g><g><title>&lt;once_cell::imp::Guard as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="91.2949%" y="1365" width="0.1088%" height="15" fill="rgb(218,122,21)" fg:x="839" fg:w="1"/><text x="91.5449%" y="1375.50"></text></g><g><title>env_logger::Builder::from_default_env (1 samples, 0.11%)</title><rect x="91.4037%" y="1541" width="0.1088%" height="15" fill="rgb(223,224,47)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1551.50"></text></g><g><title>env_logger::Builder::from_env (1 samples, 0.11%)</title><rect x="91.4037%" y="1525" width="0.1088%" height="15" fill="rgb(238,102,44)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1535.50"></text></g><g><title>env_logger::Builder::new (1 samples, 0.11%)</title><rect x="91.4037%" y="1509" width="0.1088%" height="15" fill="rgb(236,46,40)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1519.50"></text></g><g><title>&lt;env_logger::Builder as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="91.4037%" y="1493" width="0.1088%" height="15" fill="rgb(247,202,50)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1503.50"></text></g><g><title>&lt;env_logger::filter::Builder as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="91.4037%" y="1477" width="0.1088%" height="15" fill="rgb(209,99,20)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1487.50"></text></g><g><title>env_logger::filter::Builder::new (1 samples, 0.11%)</title><rect x="91.4037%" y="1461" width="0.1088%" height="15" fill="rgb(252,27,34)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1471.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V&gt;::new (1 samples, 0.11%)</title><rect x="91.4037%" y="1445" width="0.1088%" height="15" fill="rgb(215,206,23)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1455.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="91.4037%" y="1429" width="0.1088%" height="15" fill="rgb(212,135,36)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.11%)</title><rect x="91.4037%" y="1413" width="0.1088%" height="15" fill="rgb(240,189,1)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1423.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.11%)</title><rect x="91.4037%" y="1397" width="0.1088%" height="15" fill="rgb(242,56,20)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.11%)</title><rect x="91.4037%" y="1381" width="0.1088%" height="15" fill="rgb(247,132,33)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.11%)</title><rect x="91.4037%" y="1365" width="0.1088%" height="15" fill="rgb(208,149,11)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1375.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.11%)</title><rect x="91.4037%" y="1349" width="0.1088%" height="15" fill="rgb(211,33,11)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1359.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.11%)</title><rect x="91.4037%" y="1333" width="0.1088%" height="15" fill="rgb(221,29,38)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1343.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit::{{closure}} (1 samples, 0.11%)</title><rect x="91.4037%" y="1317" width="0.1088%" height="15" fill="rgb(206,182,49)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1327.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__init (1 samples, 0.11%)</title><rect x="91.4037%" y="1301" width="0.1088%" height="15" fill="rgb(216,140,1)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1311.50"></text></g><g><title>std::sys::unix::rand::hashmap_random_keys (1 samples, 0.11%)</title><rect x="91.4037%" y="1285" width="0.1088%" height="15" fill="rgb(232,57,40)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1295.50"></text></g><g><title>std::sys::unix::rand::imp::fill_bytes (1 samples, 0.11%)</title><rect x="91.4037%" y="1269" width="0.1088%" height="15" fill="rgb(224,186,18)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1279.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom_fill_bytes (1 samples, 0.11%)</title><rect x="91.4037%" y="1253" width="0.1088%" height="15" fill="rgb(215,121,11)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1263.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom (1 samples, 0.11%)</title><rect x="91.4037%" y="1237" width="0.1088%" height="15" fill="rgb(245,147,10)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1247.50"></text></g><g><title>std::sys::unix::rand::imp::getrandom::getrandom (1 samples, 0.11%)</title><rect x="91.4037%" y="1221" width="0.1088%" height="15" fill="rgb(238,153,13)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1231.50"></text></g><g><title>__getrandom (1 samples, 0.11%)</title><rect x="91.4037%" y="1205" width="0.1088%" height="15" fill="rgb(233,108,0)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="91.4037%" y="1189" width="0.1088%" height="15" fill="rgb(212,157,17)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="91.4037%" y="1173" width="0.1088%" height="15" fill="rgb(225,213,38)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="91.4037%" y="1157" width="0.1088%" height="15" fill="rgb(248,16,11)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="91.4037%" y="1141" width="0.1088%" height="15" fill="rgb(241,33,4)" fg:x="840" fg:w="1"/><text x="91.6537%" y="1151.50"></text></g><g><title>env_logger::Builder::init (1 samples, 0.11%)</title><rect x="91.5125%" y="1541" width="0.1088%" height="15" fill="rgb(222,26,43)" fg:x="841" fg:w="1"/><text x="91.7625%" y="1551.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.11%)</title><rect x="91.5125%" y="1525" width="0.1088%" height="15" fill="rgb(243,29,36)" fg:x="841" fg:w="1"/><text x="91.7625%" y="1535.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.11%)</title><rect x="91.6213%" y="1477" width="0.1088%" height="15" fill="rgb(241,9,27)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1487.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.11%)</title><rect x="91.6213%" y="1461" width="0.1088%" height="15" fill="rgb(205,117,26)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1471.50"></text></g><g><title>prql_compiler::semantic::resolve (1 samples, 0.11%)</title><rect x="91.6213%" y="1445" width="0.1088%" height="15" fill="rgb(209,80,39)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1455.50"></text></g><g><title>prql_compiler::semantic::lowering::lower_ast_to_ir (1 samples, 0.11%)</title><rect x="91.6213%" y="1429" width="0.1088%" height="15" fill="rgb(239,155,6)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (1 samples, 0.11%)</title><rect x="91.6213%" y="1413" width="0.1088%" height="15" fill="rgb(212,104,12)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1423.50"></text></g><g><title>prql_compiler::semantic::lowering::lower_ast_to_ir::{{closure}} (1 samples, 0.11%)</title><rect x="91.6213%" y="1397" width="0.1088%" height="15" fill="rgb(234,204,3)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1407.50"></text></g><g><title>prql_compiler::error::Error::new_simple (1 samples, 0.11%)</title><rect x="91.6213%" y="1381" width="0.1088%" height="15" fill="rgb(251,218,7)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1391.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.11%)</title><rect x="91.6213%" y="1365" width="0.1088%" height="15" fill="rgb(221,81,32)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1375.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.11%)</title><rect x="91.6213%" y="1349" width="0.1088%" height="15" fill="rgb(214,152,26)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1359.50"></text></g><g><title>prql_compiler::semantic::lowering::TableExtractor::extract_from_namespace (1 samples, 0.11%)</title><rect x="91.6213%" y="1333" width="0.1088%" height="15" fill="rgb(223,22,3)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.11%)</title><rect x="91.6213%" y="1317" width="0.1088%" height="15" fill="rgb(207,174,7)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.11%)</title><rect x="91.6213%" y="1301" width="0.1088%" height="15" fill="rgb(224,19,52)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="91.6213%" y="1285" width="0.1088%" height="15" fill="rgb(228,24,14)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.11%)</title><rect x="91.6213%" y="1269" width="0.1088%" height="15" fill="rgb(230,153,43)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="91.6213%" y="1253" width="0.1088%" height="15" fill="rgb(231,106,12)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="91.6213%" y="1237" width="0.1088%" height="15" fill="rgb(215,92,2)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="91.6213%" y="1221" width="0.1088%" height="15" fill="rgb(249,143,25)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.11%)</title><rect x="91.6213%" y="1205" width="0.1088%" height="15" fill="rgb(252,7,35)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.11%)</title><rect x="91.6213%" y="1189" width="0.1088%" height="15" fill="rgb(216,69,40)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.11%)</title><rect x="91.6213%" y="1173" width="0.1088%" height="15" fill="rgb(240,36,33)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1183.50"></text></g><g><title>prql_compiler::semantic::module::Module::new (1 samples, 0.11%)</title><rect x="91.6213%" y="1157" width="0.1088%" height="15" fill="rgb(231,128,14)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="91.6213%" y="1141" width="0.1088%" height="15" fill="rgb(245,143,14)" fg:x="842" fg:w="1"/><text x="91.8713%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;(prql_compiler::parser::lexer::Token,core::ops::range::Range&lt;usize&gt;)&gt;&gt;&gt; (1 samples, 0.11%)</title><rect x="91.7301%" y="1461" width="0.1088%" height="15" fill="rgb(222,130,28)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(prql_compiler::parser::lexer::Token,core::ops::range::Range&lt;usize&gt;)&gt;&gt; (1 samples, 0.11%)</title><rect x="91.7301%" y="1445" width="0.1088%" height="15" fill="rgb(212,10,48)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(prql_compiler::parser::lexer::Token,core::ops::range::Range&lt;usize&gt;)&gt;&gt; (1 samples, 0.11%)</title><rect x="91.7301%" y="1429" width="0.1088%" height="15" fill="rgb(254,118,45)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1439.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.11%)</title><rect x="91.7301%" y="1413" width="0.1088%" height="15" fill="rgb(228,6,45)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1423.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.11%)</title><rect x="91.7301%" y="1397" width="0.1088%" height="15" fill="rgb(241,18,35)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1407.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.11%)</title><rect x="91.7301%" y="1381" width="0.1088%" height="15" fill="rgb(227,214,53)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1391.50"></text></g><g><title>_int_free (1 samples, 0.11%)</title><rect x="91.7301%" y="1365" width="0.1088%" height="15" fill="rgb(224,107,51)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1375.50"></text></g><g><title>malloc_consolidate (1 samples, 0.11%)</title><rect x="91.7301%" y="1349" width="0.1088%" height="15" fill="rgb(248,60,28)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1359.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.11%)</title><rect x="91.7301%" y="1333" width="0.1088%" height="15" fill="rgb(249,101,23)" fg:x="843" fg:w="1"/><text x="91.9801%" y="1343.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 1.85%)</title><rect x="90.0979%" y="1669" width="1.8498%" height="15" fill="rgb(228,51,19)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1679.50">s..</text></g><g><title>std::panicking::try (17 samples, 1.85%)</title><rect x="90.0979%" y="1653" width="1.8498%" height="15" fill="rgb(213,20,6)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1663.50">s..</text></g><g><title>std::panicking::try::do_call (17 samples, 1.85%)</title><rect x="90.0979%" y="1637" width="1.8498%" height="15" fill="rgb(212,124,10)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1647.50">s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (17 samples, 1.85%)</title><rect x="90.0979%" y="1621" width="1.8498%" height="15" fill="rgb(248,3,40)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1631.50">c..</text></g><g><title>std::rt::lang_start::{{closure}} (17 samples, 1.85%)</title><rect x="90.0979%" y="1605" width="1.8498%" height="15" fill="rgb(223,178,23)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1615.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 1.85%)</title><rect x="90.0979%" y="1589" width="1.8498%" height="15" fill="rgb(240,132,45)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1599.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 1.85%)</title><rect x="90.0979%" y="1573" width="1.8498%" height="15" fill="rgb(245,164,36)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1583.50">c..</text></g><g><title>prqlc::cli::main (17 samples, 1.85%)</title><rect x="90.0979%" y="1557" width="1.8498%" height="15" fill="rgb(231,188,53)" fg:x="828" fg:w="17"/><text x="90.3479%" y="1567.50">p..</text></g><g><title>prqlc::cli::Cli::run (3 samples, 0.33%)</title><rect x="91.6213%" y="1541" width="0.3264%" height="15" fill="rgb(237,198,39)" fg:x="842" fg:w="3"/><text x="91.8713%" y="1551.50"></text></g><g><title>prqlc::cli::Cli::run_io_command (3 samples, 0.33%)</title><rect x="91.6213%" y="1525" width="0.3264%" height="15" fill="rgb(223,120,35)" fg:x="842" fg:w="3"/><text x="91.8713%" y="1535.50"></text></g><g><title>prqlc::cli::Cli::execute (3 samples, 0.33%)</title><rect x="91.6213%" y="1509" width="0.3264%" height="15" fill="rgb(253,107,49)" fg:x="842" fg:w="3"/><text x="91.8713%" y="1519.50"></text></g><g><title>prql_compiler::compile (3 samples, 0.33%)</title><rect x="91.6213%" y="1493" width="0.3264%" height="15" fill="rgb(216,44,31)" fg:x="842" fg:w="3"/><text x="91.8713%" y="1503.50"></text></g><g><title>prql_compiler::parser::parse (2 samples, 0.22%)</title><rect x="91.7301%" y="1477" width="0.2176%" height="15" fill="rgb(253,87,21)" fg:x="843" fg:w="2"/><text x="91.9801%" y="1487.50"></text></g><g><title>prql_compiler::parser::lexer::lexer (1 samples, 0.11%)</title><rect x="91.8390%" y="1461" width="0.1088%" height="15" fill="rgb(226,18,2)" fg:x="844" fg:w="1"/><text x="92.0890%" y="1471.50"></text></g><g><title>chumsky::Parser::then_ignore (1 samples, 0.11%)</title><rect x="91.8390%" y="1445" width="0.1088%" height="15" fill="rgb(216,8,46)" fg:x="844" fg:w="1"/><text x="92.0890%" y="1455.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="91.8390%" y="1429" width="0.1088%" height="15" fill="rgb(226,140,39)" fg:x="844" fg:w="1"/><text x="92.0890%" y="1439.50"></text></g><g><title>alloc::ffi::c_str::CString::new (1 samples, 0.11%)</title><rect x="91.9478%" y="1653" width="0.1088%" height="15" fill="rgb(221,194,54)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1663.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.11%)</title><rect x="91.9478%" y="1637" width="0.1088%" height="15" fill="rgb(213,92,11)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1647.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.11%)</title><rect x="91.9478%" y="1621" width="0.1088%" height="15" fill="rgb(229,162,46)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1631.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.11%)</title><rect x="91.9478%" y="1605" width="0.1088%" height="15" fill="rgb(214,111,36)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1615.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="91.9478%" y="1589" width="0.1088%" height="15" fill="rgb(207,6,21)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.11%)</title><rect x="91.9478%" y="1573" width="0.1088%" height="15" fill="rgb(213,127,38)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.11%)</title><rect x="91.9478%" y="1557" width="0.1088%" height="15" fill="rgb(238,118,32)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1567.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.11%)</title><rect x="91.9478%" y="1541" width="0.1088%" height="15" fill="rgb(240,139,39)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1551.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.11%)</title><rect x="91.9478%" y="1525" width="0.1088%" height="15" fill="rgb(235,10,37)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1535.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.11%)</title><rect x="91.9478%" y="1509" width="0.1088%" height="15" fill="rgb(249,171,38)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1519.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.11%)</title><rect x="91.9478%" y="1493" width="0.1088%" height="15" fill="rgb(242,144,32)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1503.50"></text></g><g><title>_int_malloc (1 samples, 0.11%)</title><rect x="91.9478%" y="1477" width="0.1088%" height="15" fill="rgb(217,117,21)" fg:x="845" fg:w="1"/><text x="92.1978%" y="1487.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="92.0566%" y="1573" width="0.1088%" height="15" fill="rgb(249,87,1)" fg:x="846" fg:w="1"/><text x="92.3066%" y="1583.50"></text></g><g><title>_IO_new_fopen (8 samples, 0.87%)</title><rect x="92.0566%" y="1589" width="0.8705%" height="15" fill="rgb(248,196,48)" fg:x="846" fg:w="8"/><text x="92.3066%" y="1599.50"></text></g><g><title>malloc_hook_ini (7 samples, 0.76%)</title><rect x="92.1654%" y="1573" width="0.7617%" height="15" fill="rgb(251,206,33)" fg:x="847" fg:w="7"/><text x="92.4154%" y="1583.50"></text></g><g><title>ptmalloc_init.part.0 (6 samples, 0.65%)</title><rect x="92.2742%" y="1557" width="0.6529%" height="15" fill="rgb(232,141,28)" fg:x="848" fg:w="6"/><text x="92.5242%" y="1567.50"></text></g><g><title>__GI__dl_addr (6 samples, 0.65%)</title><rect x="92.2742%" y="1541" width="0.6529%" height="15" fill="rgb(209,167,14)" fg:x="848" fg:w="6"/><text x="92.5242%" y="1551.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.11%)</title><rect x="92.9271%" y="1573" width="0.1088%" height="15" fill="rgb(225,11,50)" fg:x="854" fg:w="1"/><text x="93.1771%" y="1583.50"></text></g><g><title>_IO_no_init (1 samples, 0.11%)</title><rect x="93.0359%" y="1573" width="0.1088%" height="15" fill="rgb(209,50,20)" fg:x="855" fg:w="1"/><text x="93.2859%" y="1583.50"></text></g><g><title>__libc_start_main (32 samples, 3.48%)</title><rect x="89.8803%" y="1781" width="3.4820%" height="15" fill="rgb(212,17,46)" fg:x="826" fg:w="32"/><text x="90.1303%" y="1791.50">__l..</text></g><g><title>main (31 samples, 3.37%)</title><rect x="89.9891%" y="1765" width="3.3732%" height="15" fill="rgb(216,101,39)" fg:x="827" fg:w="31"/><text x="90.2391%" y="1775.50">main</text></g><g><title>std::rt::lang_start_internal (31 samples, 3.37%)</title><rect x="89.9891%" y="1749" width="3.3732%" height="15" fill="rgb(212,228,48)" fg:x="827" fg:w="31"/><text x="90.2391%" y="1759.50">std..</text></g><g><title>std::panic::catch_unwind (31 samples, 3.37%)</title><rect x="89.9891%" y="1733" width="3.3732%" height="15" fill="rgb(250,6,50)" fg:x="827" fg:w="31"/><text x="90.2391%" y="1743.50">std..</text></g><g><title>std::panicking::try (31 samples, 3.37%)</title><rect x="89.9891%" y="1717" width="3.3732%" height="15" fill="rgb(250,160,48)" fg:x="827" fg:w="31"/><text x="90.2391%" y="1727.50">std..</text></g><g><title>std::panicking::try::do_call (31 samples, 3.37%)</title><rect x="89.9891%" y="1701" width="3.3732%" height="15" fill="rgb(244,216,33)" fg:x="827" fg:w="31"/><text x="90.2391%" y="1711.50">std..</text></g><g><title>std::rt::lang_start_internal::{{closure}} (30 samples, 3.26%)</title><rect x="90.0979%" y="1685" width="3.2644%" height="15" fill="rgb(207,157,5)" fg:x="828" fg:w="30"/><text x="90.3479%" y="1695.50">std..</text></g><g><title>std::rt::init (13 samples, 1.41%)</title><rect x="91.9478%" y="1669" width="1.4146%" height="15" fill="rgb(228,199,8)" fg:x="845" fg:w="13"/><text x="92.1978%" y="1679.50"></text></g><g><title>std::sys::unix::thread::guard::init (12 samples, 1.31%)</title><rect x="92.0566%" y="1653" width="1.3058%" height="15" fill="rgb(227,80,20)" fg:x="846" fg:w="12"/><text x="92.3066%" y="1663.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (12 samples, 1.31%)</title><rect x="92.0566%" y="1637" width="1.3058%" height="15" fill="rgb(222,9,33)" fg:x="846" fg:w="12"/><text x="92.3066%" y="1647.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (12 samples, 1.31%)</title><rect x="92.0566%" y="1621" width="1.3058%" height="15" fill="rgb(239,44,28)" fg:x="846" fg:w="12"/><text x="92.3066%" y="1631.50"></text></g><g><title>pthread_getattr_np (12 samples, 1.31%)</title><rect x="92.0566%" y="1605" width="1.3058%" height="15" fill="rgb(249,187,43)" fg:x="846" fg:w="12"/><text x="92.3066%" y="1615.50"></text></g><g><title>__GI___isoc99_sscanf (4 samples, 0.44%)</title><rect x="92.9271%" y="1589" width="0.4353%" height="15" fill="rgb(216,141,28)" fg:x="854" fg:w="4"/><text x="93.1771%" y="1599.50"></text></g><g><title>__vfscanf_internal (2 samples, 0.22%)</title><rect x="93.1447%" y="1573" width="0.2176%" height="15" fill="rgb(230,154,53)" fg:x="856" fg:w="2"/><text x="93.3947%" y="1583.50"></text></g><g><title>__GI_____strtoull_l_internal (1 samples, 0.11%)</title><rect x="93.2535%" y="1557" width="0.1088%" height="15" fill="rgb(227,82,4)" fg:x="857" fg:w="1"/><text x="93.5035%" y="1567.50"></text></g><g><title>_dl_add_to_slotinfo (1 samples, 0.11%)</title><rect x="94.5593%" y="1733" width="0.1088%" height="15" fill="rgb(220,107,16)" fg:x="869" fg:w="1"/><text x="94.8093%" y="1743.50"></text></g><g><title>_dl_load_cache_lookup (2 samples, 0.22%)</title><rect x="94.6681%" y="1669" width="0.2176%" height="15" fill="rgb(207,187,2)" fg:x="870" fg:w="2"/><text x="94.9181%" y="1679.50"></text></g><g><title>strcmp (1 samples, 0.11%)</title><rect x="94.7769%" y="1653" width="0.1088%" height="15" fill="rgb(210,162,52)" fg:x="871" fg:w="1"/><text x="95.0269%" y="1663.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.11%)</title><rect x="94.8857%" y="1669" width="0.1088%" height="15" fill="rgb(217,216,49)" fg:x="872" fg:w="1"/><text x="95.1357%" y="1679.50"></text></g><g><title>_dl_setup_hash (1 samples, 0.11%)</title><rect x="94.8857%" y="1653" width="0.1088%" height="15" fill="rgb(218,146,49)" fg:x="872" fg:w="1"/><text x="95.1357%" y="1663.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="94.8857%" y="1637" width="0.1088%" height="15" fill="rgb(216,55,40)" fg:x="872" fg:w="1"/><text x="95.1357%" y="1647.50"></text></g><g><title>_dl_map_object_deps (4 samples, 0.44%)</title><rect x="94.6681%" y="1733" width="0.4353%" height="15" fill="rgb(208,196,21)" fg:x="870" fg:w="4"/><text x="94.9181%" y="1743.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.44%)</title><rect x="94.6681%" y="1717" width="0.4353%" height="15" fill="rgb(242,117,42)" fg:x="870" fg:w="4"/><text x="94.9181%" y="1727.50"></text></g><g><title>openaux (4 samples, 0.44%)</title><rect x="94.6681%" y="1701" width="0.4353%" height="15" fill="rgb(210,11,23)" fg:x="870" fg:w="4"/><text x="94.9181%" y="1711.50"></text></g><g><title>_dl_map_object (4 samples, 0.44%)</title><rect x="94.6681%" y="1685" width="0.4353%" height="15" fill="rgb(217,110,2)" fg:x="870" fg:w="4"/><text x="94.9181%" y="1695.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.11%)</title><rect x="94.9946%" y="1669" width="0.1088%" height="15" fill="rgb(229,77,54)" fg:x="873" fg:w="1"/><text x="95.2446%" y="1679.50"></text></g><g><title>_dl_receive_error (3 samples, 0.33%)</title><rect x="95.1034%" y="1733" width="0.3264%" height="15" fill="rgb(218,53,16)" fg:x="874" fg:w="3"/><text x="95.3534%" y="1743.50"></text></g><g><title>version_check_doit (3 samples, 0.33%)</title><rect x="95.1034%" y="1717" width="0.3264%" height="15" fill="rgb(215,38,13)" fg:x="874" fg:w="3"/><text x="95.3534%" y="1727.50"></text></g><g><title>_dl_check_all_versions (3 samples, 0.33%)</title><rect x="95.1034%" y="1701" width="0.3264%" height="15" fill="rgb(235,42,18)" fg:x="874" fg:w="3"/><text x="95.3534%" y="1711.50"></text></g><g><title>_dl_check_map_versions (3 samples, 0.33%)</title><rect x="95.1034%" y="1685" width="0.3264%" height="15" fill="rgb(219,66,54)" fg:x="874" fg:w="3"/><text x="95.3534%" y="1695.50"></text></g><g><title>malloc (1 samples, 0.11%)</title><rect x="95.3210%" y="1669" width="0.1088%" height="15" fill="rgb(222,205,4)" fg:x="876" fg:w="1"/><text x="95.5710%" y="1679.50"></text></g><g><title>[unknown] (6 samples, 0.65%)</title><rect x="96.5180%" y="1717" width="0.6529%" height="15" fill="rgb(227,213,46)" fg:x="887" fg:w="6"/><text x="96.7680%" y="1727.50"></text></g><g><title>__cos_ifunc (1 samples, 0.11%)</title><rect x="97.1708%" y="1717" width="0.1088%" height="15" fill="rgb(250,145,42)" fg:x="893" fg:w="1"/><text x="97.4208%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.1708%" y="1701" width="0.1088%" height="15" fill="rgb(219,15,2)" fg:x="893" fg:w="1"/><text x="97.4208%" y="1711.50"></text></g><g><title>__mprotect (1 samples, 0.11%)</title><rect x="97.2797%" y="1717" width="0.1088%" height="15" fill="rgb(231,181,52)" fg:x="894" fg:w="1"/><text x="97.5297%" y="1727.50"></text></g><g><title>[unknown] (1 samples, 0.11%)</title><rect x="97.2797%" y="1701" width="0.1088%" height="15" fill="rgb(235,1,42)" fg:x="894" fg:w="1"/><text x="97.5297%" y="1711.50"></text></g><g><title>_dl_lookup_symbol_x (9 samples, 0.98%)</title><rect x="97.3885%" y="1717" width="0.9793%" height="15" fill="rgb(249,88,27)" fg:x="895" fg:w="9"/><text x="97.6385%" y="1727.50"></text></g><g><title>do_lookup_x (7 samples, 0.76%)</title><rect x="97.6061%" y="1701" width="0.7617%" height="15" fill="rgb(235,145,16)" fg:x="897" fg:w="7"/><text x="97.8561%" y="1711.50"></text></g><g><title>check_match (4 samples, 0.44%)</title><rect x="97.9325%" y="1685" width="0.4353%" height="15" fill="rgb(237,114,19)" fg:x="900" fg:w="4"/><text x="98.1825%" y="1695.50"></text></g><g><title>strcmp (4 samples, 0.44%)</title><rect x="97.9325%" y="1669" width="0.4353%" height="15" fill="rgb(238,51,50)" fg:x="900" fg:w="4"/><text x="98.1825%" y="1679.50"></text></g><g><title>[ld-2.31.so] (36 samples, 3.92%)</title><rect x="94.5593%" y="1765" width="3.9173%" height="15" fill="rgb(205,194,25)" fg:x="869" fg:w="36"/><text x="94.8093%" y="1775.50">[ld-..</text></g><g><title>[ld-2.31.so] (36 samples, 3.92%)</title><rect x="94.5593%" y="1749" width="3.9173%" height="15" fill="rgb(215,203,17)" fg:x="869" fg:w="36"/><text x="94.8093%" y="1759.50">[ld-..</text></g><g><title>_dl_relocate_object (28 samples, 3.05%)</title><rect x="95.4298%" y="1733" width="3.0468%" height="15" fill="rgb(233,112,49)" fg:x="877" fg:w="28"/><text x="95.6798%" y="1743.50">_dl..</text></g><g><title>strlen_ifunc (1 samples, 0.11%)</title><rect x="98.3678%" y="1717" width="0.1088%" height="15" fill="rgb(241,130,26)" fg:x="904" fg:w="1"/><text x="98.6178%" y="1727.50"></text></g><g><title>[unknown] (3 samples, 0.33%)</title><rect x="98.4766%" y="1765" width="0.3264%" height="15" fill="rgb(252,223,19)" fg:x="905" fg:w="3"/><text x="98.7266%" y="1775.50"></text></g><g><title>[unknown] (2 samples, 0.22%)</title><rect x="99.2383%" y="1749" width="0.2176%" height="15" fill="rgb(211,95,25)" fg:x="912" fg:w="2"/><text x="99.4883%" y="1759.50"></text></g><g><title>all (919 samples, 100%)</title><rect x="0.0000%" y="1829" width="100.0000%" height="15" fill="rgb(251,182,27)" fg:x="0" fg:w="919"/><text x="0.2500%" y="1839.50"></text></g><g><title>prqlc (919 samples, 100.00%)</title><rect x="0.0000%" y="1813" width="100.0000%" height="15" fill="rgb(238,24,4)" fg:x="0" fg:w="919"/><text x="0.2500%" y="1823.50">prqlc</text></g><g><title>_start (99 samples, 10.77%)</title><rect x="89.2274%" y="1797" width="10.7726%" height="15" fill="rgb(224,220,25)" fg:x="820" fg:w="99"/><text x="89.4774%" y="1807.50">_start</text></g><g><title>_dl_start (61 samples, 6.64%)</title><rect x="93.3624%" y="1781" width="6.6376%" height="15" fill="rgb(239,133,26)" fg:x="858" fg:w="61"/><text x="93.6124%" y="1791.50">_dl_start</text></g><g><title>_dl_sysdep_start (11 samples, 1.20%)</title><rect x="98.8030%" y="1765" width="1.1970%" height="15" fill="rgb(211,94,48)" fg:x="908" fg:w="11"/><text x="99.0530%" y="1775.50"></text></g><g><title>__GI___tunables_init (5 samples, 0.54%)</title><rect x="99.4559%" y="1749" width="0.5441%" height="15" fill="rgb(239,87,6)" fg:x="914" fg:w="5"/><text x="99.7059%" y="1759.50"></text></g></svg></svg>
