from c=people
join ca=cars [ca.person==c.id]
filter ca.name=='Bugatti'
select c.name
---
Tony Stark

###

from cars
filter (id | in 4..5)
sort [-name]
select name
---
Toyota
Lamborghini

###

from people
join cars [cars.person==people.id]
group [people.name](
    aggregate [
        c = count,
    ]
)
sort c
---
Wade Wilson,1
Bruce Wayne,2
Tony Stark,3

###

from cars
select [person]
group cars.* (take 1)
sort cars.person
---
0
1
2

###

let car_count = (
    from cars
    aggregate a = count
)

from car_count
filter a > 0
select a
---
6

###

from people
join cars [cars.person==people.id]
group [people.id, people.name] (aggregate price = (sum cars.price))
select ![people.id]
sort people.name
---
Bruce Wayne,150000
Tony Stark,1100000
Wade Wilson,10000

###

from cars
sort price
select p = case [
    price == null => 'priceless',
    price < 40000 => 'cheap',
    true => 'expensive'
]
take 3
---
cheap,10000
expensive,60000
expensive,90000

###

from Upper
select id
---
999

###

func distinct rel -> (from t = _param.rel | group [t.*] (take 1))

from_text format:json '{ "columns": ["a"], "data": [[1], [2], [2], [3]] }'
distinct
remove (from_text format:json '{ "columns": ["a"], "data": [[1], [2]] }')
---
3

###

from cars
sort price
select price
take 2..4
---
60000
90000
200000

###

from_text format:json '[{"n": 1 }]'
select n = n - 2
loop (
    filter n<4
    select n = n+1
)
select n = n * 2
---
-2
0
2
4
6
8
