[book]
authors = ["aljazerzen"]
description = "Modern language for transforming data — a simpler and more powerful SQL"
language = "en"
multilingual = false
src = "src"
title = "PRQL Language Reference (draft)"

[output.html]
additional-css = ["comparison-table.css"]
additional-js = ["highlight-prql.js"]
git-repository-url = "https://github.com/prql/prql"

[preprocessor.trunk]
# Hacky — build the prql-web app with trunk, and sync the path into the src path
# so that they get placed into the `dist` path. Then we exit with an error,
# because that tells mdbook that we can't process the text book of the book.
# https://rust-lang.github.io/mdBook/for_developers/preprocessors.html
#
# An alternative would be to have a `task` / `make` script that did this, but
# this increases the overhead for getting started, and the additional layers
# mean we can't directly use things like `trunk serve`.
#
# Note that we use `-c` and not `-a` or `-t` in rsync, since if we copy
# modification times, then it'll run in an endless loop when running `trunk
# serve`.
#
# If there's a better way of doing this (including one that works on Windows,
# and doesn't swallow actual errors), we should change.
command = "sh -c 'cd $(git rev-parse --show-toplevel)/prql-web && trunk build --public-url=dist && rsync -cvri dist ../reference/src/ && echo \"Copied!\" && exit 1'"

# Hack to install the current version of the `prql` preprocessor; similar
# limitations as the `trunk` preprocessor.
[preprocessor.install-prql]
before = ["prql"]
command = "sh -c 'cd $(git rev-parse --show-toplevel)/reference/mdbook-prql/ && cargo install --locked --path . && exit 1'"

[preprocessor.prql]

# Other preprocessors which looks cool:
# https://github.com/tommilligan/mdbook-admonish
# [preprocessor.toc]
