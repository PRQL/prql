---
source: src/parser.rs
assertion_line: 233
expression: "parse(parse_to_pest_tree(r#\"\nfrom employees\nfilter country = \"USA\"                           # Each line transforms the previous result.\nderive [                                         # This adds columns / variables.\n  gross_salary: salary + payroll_tax,\n  gross_cost:   gross_salary + benefits_cost     # Variables can use other variables.\n]\nfilter gross_cost > 0\naggregate by:[title, country] [                  # `by` are the columns to group by.\n    average salary,                              # These are aggregation calcs run on each group.\n    sum     salary,\n    average gross_salary,\n    sum     gross_salary,\n    average gross_cost,\n    sum_gross_cost: sum gross_cost,\n    count: count,\n]\nsort sum_gross_cost\nfilter count > 200\ntake 20\n    \"#.trim(),\n                         Rule::pipeline).unwrap()).unwrap()"

---
- Pipeline:
    - From:
        - Ident: employees
    - Filter:
        - Ident: country
        - Raw: "="
        - String: "\"USA\""
    - Derive:
        - lvalue: gross_salary
          rvalue:
            - Ident: salary
            - Raw: +
            - Ident: payroll_tax
        - lvalue: gross_cost
          rvalue:
            - Ident: gross_salary
            - Raw: +
            - Ident: benefits_cost
    - Filter:
        - Ident: gross_cost
        - Raw: ">"
        - Raw: "0"
    - Aggregate:
        by:
          - List:
              - Ident: title
              - Ident: country
        calcs:
          - List:
              - Items:
                  - Ident: average
                  - Ident: salary
              - Items:
                  - Ident: sum
                  - Ident: salary
              - Items:
                  - Ident: average
                  - Ident: gross_salary
              - Items:
                  - Ident: sum
                  - Ident: gross_salary
              - Items:
                  - Ident: average
                  - Ident: gross_cost
              - Assign:
                  lvalue: sum_gross_cost
                  rvalue:
                    - Ident: sum
                    - Ident: gross_cost
              - Assign:
                  lvalue: count
                  rvalue:
                    - Ident: count
    - Sort:
        - Ident: sum_gross_cost
    - Filter:
        - Ident: count
        - Raw: ">"
        - Raw: "200"
    - Take: 20

