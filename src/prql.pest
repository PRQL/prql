WHITESPACE = _{ " " }
// TODO: these comments seem to be intra-line comments, so we need to change how
// we handle this.
// Need to exclude # in strings (and maybe confirm whether this the syntax we want)
COMMENT = _{ "#" ~ ANY }


query = _{ SOI ~ NEWLINE* ~ pipeline ~ (NEWLINE ~ pipeline )* ~ NEWLINE* ~ EOI }


pipe = { NEWLINE | "|" }
pipeline = { transform ~ (pipe ~ transform)* }
inline_pipeline = { "(" ~ pipeline ~ ")" }

transform = { WHITESPACE* ~ function ~ expr }

ident = { ( ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "." | "_" )* ) | string }
// TODO: escapes


// https://pest.rs/book/examples/rust/literals.html
string = { "\"" ~ (ASCII_ALPHANUMERIC)* ~ "\"" }
// string = { "\"" ~ (raw_string | escape)* ~ "\"" }
// raw_string = { (!("\\" | "\"") ~ ASCII_ALPHANUMERIC)+ }

// quoted_string = { "\"" ~ (ASCII_ALPHANUMERIC | " " | "." | "_" | "-" | "\\"  )* ~ "\"" }

// TODO: rename (but `expr` is taken â€” we mean a single "unit")
idents = { ( ident | operator )+ }

expr = _{ list | idents | ident |  pipeline | inline_pipeline }

operator = { "=" | "==" | "!=" | ">" | "<" | ">=" | "<=" | "+" | "-" | "*" | "/" | "%" }

// Functions
// Currently just writing the inbuilt functions
function = _{ from | select | filter | aggregate | sort  }
select    = { "select" }
from    = { "from" }
filter    = { "filter" }
aggregate = { "aggregate" }
sort      = { "sort" }

list = { "[" ~ ( expr ~ ("," ~ expr)* ) ~ ","? ~ "]" }


