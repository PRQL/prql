WHITESPACE = _{ " " }
// Need to exclude # in strings (and maybe confirm whether this the syntax we want)
COMMENT = { "#" ~ (!NEWLINE ~ ANY) * }

query = _{ SOI ~ NEWLINE* ~ pipeline ~ (NEWLINE ~ pipeline )* ~ NEWLINE* ~ EOI }

pipe = { NEWLINE | "|" }
pipeline = { transform ~ (pipe ~ transform)* }
inline_pipeline = { "(" ~ pipeline ~ ")" }

// `ident` is the function name
transform = { WHITESPACE* ~ ident ~ expr }

ident = @{ ( ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "." | "_" )* ) }


// TODO: escapes
// https://pest.rs/book/examples/rust/literals.html
string = { "\"" ~ (ASCII_ALPHANUMERIC)* ~ "\"" }
// string = { "\"" ~ (raw_string | escape)* ~ "\"" }
// raw_string = { (!("\\" | "\"") ~ ASCII_ALPHANUMERIC)+ }
// quoted_string = { "\"" ~ (ASCII_ALPHANUMERIC | " " | "." | "_" | "-" | "\\"  )* ~ "\"" }
number = { (ASCII_DIGIT | ".")+ }
operator = @{ "=" | "==" | "!=" | ">" | "<" | ">=" | "<=" | "+" | "-" | "*" | "/" | "%" }

term = _{ ( ident | operator | number | string ) }
terms = !{ (term)+ }

expr = _{ ( list | assign | named_arg | terms | inline_pipeline )+ }

// Whitespace required after `:`.
assign = ${ ident ~ ":" ~ (WHITESPACE)+ ~ expr }
// No whitestace allowed between these, unlike assign.
named_arg = ${ ident ~ ":" ~ expr }

list = !{ "[" ~ NEWLINE? ~ ( expr ~ ("," ~ NEWLINE? ~ expr)* ) ~ ","? ~ NEWLINE? ~ "]" }

