name: cargo-test
description: Runs cargo test & cargo lint for a given platform & target.

inputs:
  target:
    description: "Target triple, like `wasm32-unknown-unknown"
    required: false
  target_option:
    description: "--target={target}"
    required: false

runs:
  using: composite
  steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v2
    - name: 🔗 Setup toolchain
      # If we don't get a value, then skip; we're using the default value.
      if: ${{ inputs.target }}
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: ${{ inputs.target }}
        toolchain: stable
        override: true
        default: true
    - name: 💰 Cache
      uses: Swatinem/rust-cache@v1
      with:
        # Without inputs.target, it seems to select linux x64 in the wasm32
        # tests, though in the docs it says it uses the target as the key?
        key: ${{ inputs.target }}
    - uses: jetli/wasm-bindgen-action@v0.1.0
      if: ${{ inputs.target == 'wasm32-unknown-unknown' }}
      # Ignoring until https://github.com/prql/prql/pull/741 is resolved
    # - name: 📎 Clippy
    #   uses: actions-rs/cargo@v1
    #   with:
    #     command: clippy
    #     # Note that `--all-targets` doesn't refer to targets like `wasm32-unknown-unknown`.
    #     args: --all-targets --workspace ${{ inputs.target_option }} -- -D warnings
    - name: ⌨️ Fmt
      uses: actions-rs/cargo@v1
      if: ${{ inputs.target != 'wasm32-unknown-unknown' }}
      with:
        command: fmt
        args: --all --check
    - name: 📋 Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: ${{ inputs.target_option }}
