name: Test Rust
description: Runs cargo test & cargo lint for a given platform & target.

inputs:
  target_option:
    description:
      "Target triple with prefix, like `--target=wasm32-unknown-unknown`"
    required: false

runs:
  using: composite
  steps:
    - name: 💰 Cache
      uses: Swatinem/rust-cache@v2
      with:
        # Without inputs.target, it seems to select linux x64 in the wasm32
        # tests, though in the docs it says it uses the target as the key?
        key: ${{ inputs.target_option }}
        save-if: ${{ github.ref == 'refs/heads/main' }}
    - uses: jetli/wasm-bindgen-action@v0.2.0
      if: inputs.target_option == '--target=wasm32-unknown-unknown'
    - name: 📎 Clippy
      uses: richb-hanover/cargo@v1.1.0
      with:
        command: clippy
        # Note that `--all-targets` doesn't refer to targets like
        # `wasm32-unknown-unknown`; it refers to lib / bin / tests etc.
        args: --all-targets ${{ inputs.target_option }} -- -D warnings
    - name: ⌨️ Fmt
      uses: richb-hanover/cargo@v1.1.0
      with:
        command: fmt
        args: --all --check
      # We split up the test compilation as recommended in
      # https://matklad.github.io/2021/09/04/fast-rust-builds.html
    - name: 🏭 Compile
      uses: richb-hanover/cargo@v1.1.0
      with:
        command: test
        args: ${{ inputs.target_option }} --no-run --locked
    - uses: baptiste0928/cargo-install@next
      with:
        crate: cargo-insta
    # Only check unreferenced snapshots on the default target tests (maybe
    # there's a nicer approach where we can parameterize one step rather than
    # have two different ones; feel free to simplify)
    - name: 📋 Test
      uses: richb-hanover/cargo@v1.1.0
      if: inputs.target_option != '--target=wasm32-unknown-unknown'
      with:
        command: insta
        args: test --unreferenced=auto ${{ inputs.target_option }}
    - name: 📋 Test
      uses: richb-hanover/cargo@v1.1.0
      if: inputs.target_option == '--target=wasm32-unknown-unknown'
      with:
        command: insta
        args: test ${{ inputs.target_option }}
