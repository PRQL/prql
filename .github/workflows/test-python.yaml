name: test-python

on:
  workflow_call:
    inputs:
      oss:
        type: string
        default: '["ubuntu-24.04"]'
  workflow_dispatch:
    inputs:
      oss:
        type: string
        default: '["ubuntu-24.04"]'

# We need consistent env vars across all workflows for the cache to work
env:
  CARGO_TERM_COLOR: always
  CLICOLOR_FORCE: 1
  RUSTFLAGS: "-C debuginfo=0"
  RUSTDOCFLAGS: "-Dwarnings"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ${{ fromJSON(inputs.oss) }}
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v4
      - name: Build wheel
        uses: ./.github/actions/build-python
        with:
          target: ${{ matrix.os == 'ubuntu-24.04' && 'x86_64' || '' }}
          package: prqlc-python
          profile: dev
      - uses: actions/download-artifact@v5
        with:
          # `*` covers all targets (we could make this explicit...)
          pattern: prqlc-python-${{ runner.os }}-*-dev
          path: target/python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install nox
        run: uv tool install nox
        shell: bash
      - name: Cache uv and Nox
        uses: actions/cache@v4
        with:
          path: |
            .nox
            ~/.cache/uv
          key:
            nox-uv-${{ hashFiles('prqlc/bindings/prqlc-python/pyproject.toml')
            }}
      - name: Run tests and typing
        shell: bash
        run: |
          export UV_SYSTEM_PYTHON=1
          nox -s tests typing -f prqlc/bindings/prqlc-python/noxfile.py
