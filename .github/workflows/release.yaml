name: release
on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  brew-dispatcher:
    name: Release on homebrew-prql
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.HOMEBREW_PRQL_TOKEN}}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'prql',
              repo: 'homebrew-prql',
              workflow_id: 'update.yaml',
              ref: 'main',
              inputs: {
              version: '${{ github.ref }}',
              URL: 'https://github.com/PRQL/prql/archive/${{ github.ref }}.tar.gz'
              }
            })

  build-deb-package:
    # TODO: currently this doesn't publish it as an artifact; would be a welcome contribution
    # to add that (and eventually as a release asset)
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - name: ðŸ‘· Build prql-compiler
        run: cargo build --release
      - name: Copy files into .deb package
        run: |
          mkdir -p .debpkg/usr/bin
          cp target/release/prqlc .debpkg/usr/bin/prqlc
          chmod +x .debpkg/usr/bin/prqlc
      - name: ðŸ“¦ Build .deb package
        uses: jiro4989/build-deb-action@v2
        with:
          package: prqlc
          package_root: .debpkg
          maintainer: The PRQL Project
          version: ${{ github.ref_type == 'tag' && github.ref_name || 0 }}
          desc: >
            prqlc is the CLI for the PRQL compiler. It compiles PRQL to SQL, and
            offers various diagnostics.

            PRQL is a modern language for transforming data â€” a simple,
            powerful, pipelined SQL replacement.

  build-rpm-package:
    # TODO: This doesn't publish the rpm yet, that would be a welcome follow-up (even as a CI artifact)
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - name: ðŸ‘· Build prqlc
        run: cargo build --bin prqlc --release
      - name: Copy files into .rpm package
        run: |
          mkdir -p .rpmpkg/usr/bin
          cp target/release/prqlc .rpmpkg/usr/bin/prqlc
          chmod +x .rpmpkg/usr/bin/prqlc
      - name: ðŸ“¦ Build .rpm package
        uses: jiro4989/build-rpm-action@v2
        with:
          summary: CLI for PRQL, a modern language for transforming data
          package: prqlc
          package_root: .rpmpkg
          maintainer: The PRQL Project
          vendor: The PRQL Project
          version: ${{ github.ref_type == 'tag' && github.ref_name || 0 }}
          desc: >
            prqlc is the CLI for the PRQL compiler. It compiles PRQL to SQL, and
            offers various diagnostics.

            PRQL is a modern language for transforming data â€” a simple,
            powerful, pipelined SQL replacement.
          license: Apache-2.0

  build-and-publish-snap:
    runs-on: ubuntu-latest

    # Skip running workflow on forks
    if: github.repository_owner == 'prql'

    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - name: Move Snap to project root directory
        run: cp -r packages/snap/ .
      - name: ðŸ“¦ Build Snap
        id: build
        uses: snapcore/action-build@v1
      - name: ðŸ†™ Publish Snap
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS:
            ${{ secrets.SNAPCRAFT_STORE_CREDENTIALS }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: edge

  build-python-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/build-prql-python

  publish-prql-python:
    runs-on: ubuntu-latest
    needs: [build-python-wheels]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

  publish-prql-js:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: baptiste0928/cargo-install@v2
        with:
          crate: wasm-pack

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Publish package on npm
        run: npm publish
        working-directory: bindings/prql-js/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-to-cargo:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-release
      - uses: richb-hanover/cargo@v1.1.0
        with:
          command: release
          args: publish --no-confirm -x
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  build-prql-lib:
    strategy:
      matrix:
        include:
          - os: macos-latest
            directory: darwin-x86-64
            target: x86_64-apple-darwin
            suffix: ".dylib"
          - os: macos-latest
            directory: darwin-aarch64
            target: aarch64-apple-darwin
            suffix: ".dylib"
          - os: ubuntu-latest
            directory: linux-x86-64
            target: x86_64-unknown-linux-gnu
            suffix: ".so"
          - os: windows-latest
            directory: win32-x86-64
            target: x86_64-pc-windows-msvc
            suffix: ".dll"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install targets
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build
        uses: richb-hanover/cargo@v1.1.0
        with:
          command: build
          args: --target=${{ matrix.target }} --release -p prql-lib
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.directory }}
          path:
            target/${{ matrix.target }}/release/*prql_lib${{ matrix.suffix }}
          if-no-files-found: error

  publish-prql-java:
    needs:
      - build-prql-lib
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install JDK 8 and Maven
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 8
          cache: "maven"
      - uses: actions/download-artifact@v3
        with:
          path: bindings/prql-java/src/main/resources
      - name: Release Maven package
        uses: samuelmeuli/action-maven-publish@v1
        with:
          directory: bindings/prql-java
          maven_profiles: release
          maven_args:
            -Drevision=0.6.1 -q --batch-mode --show-version --strict-checksums
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          nexus_username: ${{ secrets.SONATYPE_USER }}
          nexus_password: ${{ secrets.SONATYPE_PASSWD }}

  push-web-branch:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - run: git push origin HEAD:web --force

  push-devcontainer-base-image:
    uses: ./.github/workflows/devcontainer.yaml
