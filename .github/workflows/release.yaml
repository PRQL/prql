name: release
on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  brew-dispatcher:
    name: Release on homebrew-prql
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.HOMEBREW_PRQL_TOKEN}}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'prql',
              repo: 'homebrew-prql',
              workflow_id: 'update.yaml',
              ref: 'main',
              inputs: {
              version: '${{ github.ref }}',
              URL: 'https://github.com/PRQL/prql/archive/${{ github.ref }}.tar.gz'
              }
            })

  build-deb-package:
    # TODO: currently this doesn't publish it as an artifact; would be a welcome contribution
    # to add that (and eventually as a release asset)
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - name: ðŸ‘· Build prql-compiler
        run: cargo build --release
      - name: Copy files into .deb package
        run: |
          mkdir -p .debpkg/usr/bin
          cp target/release/prqlc .debpkg/usr/bin/prqlc
          chmod +x .debpkg/usr/bin/prqlc
      - name: ðŸ“¦ Build .deb package
        uses: jiro4989/build-deb-action@v2
        with:
          package: prqlc
          package_root: .debpkg
          maintainer: The PRQL Project
          version: "${{ github.ref }}"
          desc:
            prqlc is the CLI for PRQL, a modern language for transforming data

  build-and-publish-snap:
    runs-on: ubuntu-latest

    # Skip running workflow on forks
    if: github.repository_owner == 'prql'

    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - name: ðŸ“¦ Build Snap
        uses: snapcore/action-build@v1
      - name: ðŸ†™ Publish Snap
        uses: snapcore/action-publish@v1
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
        with:
          snap: ${{ steps.build.outputs.snap }}
          release: edge

  build-python-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/build-prql-python

  publish-prql-python:
    runs-on: ubuntu-latest
    needs: [build-python-wheels]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

  publish-prql-js:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/build-prql-js
      - name: Publish package on npm
        run: npm publish
        working-directory: prql-js/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-to-cargo:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: baptiste0928/cargo-install@next
        with:
          crate: cargo-release
      - uses: richb-hanover/cargo@v1.1.0
        with:
          command: release
          args: publish --no-confirm -x
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Requires another pass: https://github.com/PRQL/prql/issues/850
  # publish-prql-java:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Install Java and Maven
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: 8
  #     - name: Release Maven package
  #       uses: samuelmeuli/action-maven-publish@v1
  #       with:
  #         gpg_private_key: ${{ secrets.gpg_private_key }}
  #         gpg_passphrase: ${{ secrets.gpg_passphrase }}
  #         nexus_username: ${{ secrets.nexus_username }}
  #         nexus_password: ${{ secrets.nexus_password }}
  #         directory: prql-java/java/

  push-web-branch:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - run: git push origin HEAD:web --force
