name: release
on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  brew-dispatcher:
    name: Release on homebrew-prql
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.HOMEBREW_PRQL_TOKEN}}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'prql',
              repo: 'homebrew-prql',
              workflow_id: 'update.yaml',
              ref: 'main',
              inputs: {
              version: '${{ github.ref }}',
              URL: 'https://github.com/prql/prql/archive/${{ github.ref }}.tar.gz'
              }
            })

  build-python-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: ./.github/actions/build-wheel

  publish-prql-python:
    runs-on: ubuntu-latest
    needs: [build-python-wheels]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

  publish-prql-js:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - name: Make dist folder
        run: mkdir dist

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"

      - name: Run wasm-pack for node
        run: wasm-pack build --target nodejs --release --out-dir dist/node
        working-directory: prql-js/
      - name: Run wasm-pack for web
        run: wasm-pack build --target no-modules --release --out-dir dist/web
        working-directory: prql-js/
      - name: Run wasm-pack for bundler
        run: wasm-pack build --target bundler --release --out-dir dist/bundler
        working-directory: prql-js/

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Run prql tests for node
        run: npm i && npm run test
        working-directory: prql-js/tests/

      - name: Publish package on npm
        run: npm publish
        working-directory: prql-js/
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Possibly we roll this into a more complete approach, possibly with cargo-release.
  publish-prql-compiler:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v3
      - uses: actions-rs/cargo@v1
        with:
          command: publish
          args: -p prql-compiler
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  # Requires another pass: https://github.com/prql/prql/issues/850
  # publish-prql-java:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Install Java and Maven
  #       uses: actions/setup-java@v3
  #       with:
  #         java-version: 8
  #     - name: Release Maven package
  #       uses: samuelmeuli/action-maven-publish@v1
  #       with:
  #         gpg_private_key: ${{ secrets.gpg_private_key }}
  #         gpg_passphrase: ${{ secrets.gpg_passphrase }}
  #         nexus_username: ${{ secrets.nexus_username }}
  #         nexus_password: ${{ secrets.nexus_password }}
  #         directory: prql-java/java/
