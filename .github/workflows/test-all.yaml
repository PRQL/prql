# All tests â€” run this only on merges to main or where a specific label is set.

name: test-all

on:
  push:
    branches:
      - main
  # Called by pull-request when specifically requested
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Only run ubuntu on pull-requests, since it's fastest. Run Mac & Windows only
  # on `main` or a `run-full-tests` label.
  test:
    strategy:
      matrix:
        target: ["", "wasm32-unknown-unknown"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    uses: ./.github/actions/cargo-test
    with:
      os: ${{ matrix.os }}

      target: ${{ matrix.target }}
  test-book:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ”— Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          # https://github.com/actions-rs/toolchain/issues/126
          toolchain: stable
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: jetli/trunk-action@v0.1.0
      - uses: peaceiris/actions-mdbook@v1
      - name: ðŸ”¨ Build
        run: mdbook build
        working-directory: reference/
  # Currently duplicative with `test-book`, since that needs to build this
  # target too. But `test-book` can't raise an error when building `prql-web`,
  # unfortunately, because of how mdbook preprocessors work.
  test-web:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ”— Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          # https://github.com/actions-rs/toolchain/issues/126
          toolchain: stable
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: jetli/trunk-action@v0.1.0
      - name: ðŸ”¨ Build
        run: trunk build
        working-directory: prql-web/
  code-cov:
    runs-on: ubuntu-latest
    # Currently this runs `cargo clean` which makes the run taking 4 min. TODO:
    # see whether `skip_clean` is reliable and then add this job to every
    # commit.
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          # TODO: move this exclude to a config file.
          args: "--workspace --exclude prql-python -- --test-threads 1"
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
