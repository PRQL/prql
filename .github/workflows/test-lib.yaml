name: test-lib

on:
  workflow_call:
  workflow_dispatch:

jobs:
  test-lib:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v4
      - run: ./.github/workflows/scripts/set_version.sh
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ env.version }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
          shared-key: lib
      - name: Build
        uses: richb-hanover/cargo@v1.1.0
        with:
          command: build
          # Currently requires a release build; would be useful to allow a debug build.
          args: --release -p prql-lib
      - name: Run basic C example
        working-directory: bindings/prql-lib/examples/minimal-c
        run: make run
      - name: Run basic C++ example
        working-directory: bindings/prql-lib/examples/minimal-cpp
        run: make run
  test-zig:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v4
      - run: ./.github/workflows/scripts/set_version.sh
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ env.version }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
          shared-key: lib
      - name: Build
        uses: richb-hanover/cargo@v1.1.0
        with:
          command: build
          # Currently requires a release build; would be useful to allow a debug build.
          args: --release -p prql-lib
      - name: ðŸ”§ Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          cache: false
      - name: ðŸ§ª Build and test Zig example
        working-directory: bindings/prql-lib/examples/minimal-zig
        run: |
          mkdir c
          cp ../../libprql_lib.h c/
          cp ../../../../target/*/libprql_lib.* c/
          zig build test
