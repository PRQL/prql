name: test-rust

on:
  # Currently we only run this as `workflow_call`, since `pull-request` always calls it.
  workflow_call:
    inputs:
      os:
        type: string
      target_option:
        type: string
        default: ""

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    runs-on: ${{ inputs.os }}
    steps:
      - name: 📂 Checkout code
        uses: actions/checkout@v3
      - uses: baptiste0928/cargo-install@v2
        with:
          crate: wasm-bindgen-cli
        if: inputs.target_option == '--target=wasm32-unknown-unknown'
      - uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-insta
      - name: 💰 Cache
        uses: Swatinem/rust-cache@v2
        with:
          # Based on https://github.com/PRQL/prql/issues/1985, attempting to
          # reset the cache. If necessary, we could do this on each release and
          # have this update automatically (there's no variable that contains
          # the current version unfortunately, though).
          key: 0.6.0-${{ inputs.target_option }}
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: 📎 Clippy
        uses: richb-hanover/cargo@v1.1.0
        with:
          command: clippy
          # Note that `--all-targets` doesn't refer to targets like
          # `wasm32-unknown-unknown`; it refers to lib / bin / tests etc.
          args: --all-targets ${{ inputs.target_option }} -- -D warnings
      - name: ⌨️ Fmt
        uses: richb-hanover/cargo@v1.1.0
        with:
          command: fmt
          args: --all --check
        # We split up the test compilation as recommended in
        # https://matklad.github.io/2021/09/04/fast-rust-builds.html
      - name: 🏭 Compile
        uses: richb-hanover/cargo@v1.1.0
        with:
          command: test
          args: ${{ inputs.target_option }} --no-run --locked
      - name: Run docker compose
        run: docker compose up -d
        working-directory: ./prql-compiler/tests/integration
        if: ${{ inputs.os == 'ubuntu-latest' }}
      - name: Wait for database
        uses: ifaxity/wait-on-action@v1
        with:
          resource: "tcp:5432 tcp:3306 tcp:1433"
          timeout: 60000
        if: ${{ inputs.os == 'ubuntu-latest' }}
      # Only check unreferenced snapshots on the default target tests on ubuntu
      #
      # (Maybe there's a nicer approach where we can parameterize one step
      # rather than have two different ones? We welcome a change to simplify
      # this.)
      - name: 📋 Test default
        uses: richb-hanover/cargo@v1.1.0
        if:
          ${{ (inputs.target_option != '--target=wasm32-unknown-unknown' &&
          runner.os == 'Linux') }}
        with:
          command: insta
          args:
            test --unreferenced=auto ${{ inputs.target_option }} ${{ inputs.os
            == 'ubuntu-latest' && '--features=test-external-dbs' || '' }}
      - name: 📋 Test wasm
        uses: richb-hanover/cargo@v1.1.0
        if:
          ${{ ! (inputs.target_option != '--target=wasm32-unknown-unknown' &&
          runner.os == 'Linux') }}
        with:
          command: insta
          args: test ${{ inputs.target_option }}
