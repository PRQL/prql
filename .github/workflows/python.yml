# Currently this is separate from the `pull-request.yaml`, but could be
# integrated eventually.
#
# TODO: Cache doesn't seem to work. So we only run on PRs when files in the
# `prql-python` path change.
name: prql-python

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize, labeled]
    branches:
      - main
    paths:
      - "prql-python/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # TODO: would there be a way of integrating these into a single matrix job?
  # Note that the commands are slightly different atm.
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: messense/maturin-action@v1
        with:
          manylinux: auto
          command: build
          args: --release -o dist -m prql-python/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist -m prql-python/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: messense/maturin-action@v1
        with:
          command: build
          args: --release --no-sdist -o dist --universal2 -m prql-python/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [macos, windows, linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
