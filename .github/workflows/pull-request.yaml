# Jobs that run on every pull-request, regardless of its contents.
name: pull-request

on:
  pull_request:
    # Add `labeled`, so we can trigger a new run by adding a `pr-test-all`
    # label, which we then use to trigger a `test-all` run.
    types: [opened, reopened, synchronize, labeled]
  # While most of these tests are covered by `test-all`, we need to build the
  # cache on `main`, so we run them there too.
  push:
    branches:
      - main

concurrency:
  # This seems to require a custom suffix; I _think_ because this calls
  # `test-all`, which calls `test-python`, and if `test-python` runs too, then
  # we have two workflows with the same concurrency group, which GitHub calls a
  # deadlock. Here's an example:
  # https://github.com/PRQL/prql/actions/runs/3945798229. By adding
  # `-pull-request` here, the job that runs under `test-all` (called from here)
  # will have the suffix, and so won't deadlock. But I'm not certain, and it
  # doesn't seem possible to inspect these values to understand the true cause.
  group: ${{ github.workflow }}-${{ github.ref }}-pull-request
  cancel-in-progress: true

jobs:
  test-rust:
    strategy:
      matrix:
        # We use a matrix here to mirror `test-all`, so they share a cache.
        os: [ubuntu-latest]
        target_option: ["", "--target=wasm32-unknown-unknown"]
    uses: ./.github/workflows/test-rust.yaml
    with:
      os: ${{ matrix.os }}
      target_option: ${{ matrix.target_option }}

  # Run Mac & Windows & bindings' other tests on a `pr-test-all` label or a `!`
  # (meaning a breaking change) in the PR title. (We also run on other
  # conditions defined in `test-all.yaml`; the conditions defined here aren't
  # possible to use as conditions for running a workflow, only a job, so we use
  # this approach.)
  test-all:
    uses: ./.github/workflows/test-all.yaml
    if:
      contains(github.event.pull_request.labels.*.name, 'pr-test-all') ||
      contains(github.event.pull_request.title, '!')

  publish-web:
    uses: ./.github/workflows/publish-web.yaml
    if: contains(github.event.pull_request.labels.*.name, 'pr-publish-web')

  nightly:
    uses: ./.github/workflows/nightly.yaml
    if: contains(github.event.pull_request.labels.*.name, 'pr-nightly')

  check-links:
    # Another option is https://github.com/lycheeverse/lychee, but it was
    # weirdly difficult to exclude a directory, and I managed to get
    # rate-limited by GH because of it scanning node_modules.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          config-file: .github/.markdown-link-check.json
          base-branch: main
          # We also run without this in the nightly workflow (maybe there's a
          # better way of organizing these so we DRY)
          check-modified-files-only: "yes"

  check-ok-to-merge:
    # This doesn't run anything, but offers a task for us to tell GitHub
    # everything in this workflow has passed and, unlike including each task in
    # the branch's GitHub required tests, will pass when a task is skipped.
    #
    # Note that this _doesn't_ cover other workflows, such as `test-js.yaml`.
    # (and is strictly inferior to a GitHub feature that would just say "don't
    # allow merging on any failing test"). We could change that by moving the
    # triggers for those into this workflow, and using an external action to
    # assess whether the paths have changed. That would move us closer to a
    # world where all tasks are defined in a single workflow, and we use
    # job-level criteria to decide what to run. But it's quite a change, I
    # (@max-sixty) have probably done too much devops already, and it's possible
    # that GitHub release something to enable path triggers within workflows
    # natively.
    #
    # Check out `test-all.yaml` for more ideas on organizing these.
    if: always()
    needs:
      - test-rust
      - test-all
      - publish-web
      - nightly
      - check-links
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          # We don't include `check-links`, since occasionally we'll want to merge
          # something which temporarily fails that, such as if we're changing the
          # location of a file in this repo which is linked to.
          allowed-failures: check-links
          allowed-skips: test-all, publish-web, nightly
          jobs: ${{ toJSON(needs) }}
