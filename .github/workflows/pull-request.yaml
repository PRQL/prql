# Fast tests only. We should try and keep this under one minute.

# See https://github.com/prql/prql/issues/37 for some TODOs

name: pull-request

on:
  pull_request:
    # Add `labeled`, so we can trigger a new run by adding a `ci-run-all-tests`
    # label, which we then use to trigger a `test-all` run.
    types: [opened, reopened, synchronize, labeled]
  # While most of these tests are covered by `test-all`, we need to build the cache.
  push:
    branches:
      - main

concurrency:
  # This adds `job` to the key so when running full tests, we don't cancel the
  # overlapping jobs, since GH relies on them passing before allowing a PR to
  # pass.
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.job }}
  cancel-in-progress: true

jobs:
  # Only run ubuntu on pull-requests, since it's fastest.
  cargo-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # TODO: I'm sure there's a better way of doing this, where `target_option` derives from `target`?
          - target:
          - target: "wasm32-unknown-unknown"
            target_option: "--target=wasm32-unknown-unknown"
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ“‹ Test workspace
        uses: ./.github/actions/cargo-test
        with:
          target: ${{ matrix.target }}
          target_option: ${{ matrix.target_option }}

  test-book:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ”— Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          # https://github.com/actions-rs/toolchain/issues/126
          toolchain: stable
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: jetli/trunk-action@v0.1.0
      - uses: peaceiris/actions-mdbook@v1
      - name: ðŸ”¨ Build
        run: mdbook build
        working-directory: reference/

  # Somewhat duplicative with `test-book`, since that needs to build this
  # target too. But `test-book` can't raise an error when building `prql-web`,
  # unfortunately, because of how mdbook preprocessors work.
  test-web:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“‚ Checkout code
        uses: actions/checkout@v2
      - name: ðŸ”— Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: wasm32-unknown-unknown
          # https://github.com/actions-rs/toolchain/issues/126
          toolchain: stable
      - name: ðŸ’° Cache
        uses: Swatinem/rust-cache@v1
      - uses: jetli/trunk-action@v0.1.0
      - name: ðŸ”¨ Build
        run: trunk build
        working-directory: prql-web/

  # Run Mac & Windows & other tests on `main` or a `ci-run-all-tests` label.
  test-all:
    uses: ./.github/workflows/test-all.yaml
    if: contains(github.event.pull_request.labels.*.name, 'ci-run-all-tests')
