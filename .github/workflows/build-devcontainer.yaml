name: build-devcontainer

on:
  workflow_call:
    inputs:
      push:
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      push:
        type: boolean
        default: false

env:
  IMAGE_NAME: ghcr.io/prql/prql-devcontainer-base

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            platform_name: amd64
            runner: ubuntu-24.04
          - platform: linux/arm64
            platform_name: arm64
            runner: ubuntu-24.04-arm
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 240
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3

      - name: Prep build args
        run:
          echo "cargo_crates=$(yq -r '.vars.cargo_crates' Taskfile.yaml)" >>
          "$GITHUB_ENV"

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        timeout-minutes: 240
        with:
          context: .devcontainer/base-image
          build-args: cargo_crates=${{ env.cargo_crates }}
          platforms: ${{ matrix.platform }}
          outputs:
            type=image,name=${{ env.IMAGE_NAME
            }},push-by-digest=true,name-canonical=true,push=${{ inputs.push }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}

      - name: Export digest
        if: inputs.push
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        if: inputs.push
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform_name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    if: inputs.push
    needs: build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Validate digests
        run: |
          digest_count=$(find /tmp/digests -type f | wc -l)
          if [ "$digest_count" -ne 2 ]; then
            echo "Error: Expected 2 digests (amd64 + arm64), found $digest_count"
            ls -la /tmp/digests
            exit 1
          fi

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: type=raw,latest

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          tags=$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")
          digests=$(printf '${{ env.IMAGE_NAME }}@sha256:%s ' *)
          # shellcheck disable=SC2086
          docker buildx imagetools create $tags $digests

      - name: Verify multi-platform manifest
        run: |
          docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          platforms=$(docker buildx imagetools inspect ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} --raw | \
            jq -r '.manifests[].platform | "\(.os)/\(.architecture)"' | sort)
          expected="linux/amd64
          linux/arm64"
          if [ "$platforms" != "$expected" ]; then
            echo "Error: Expected platforms not found"
            echo "Expected: $expected"
            echo "Found: $platforms"
            exit 1
          fi
          echo "âœ“ Multi-platform manifest verified: amd64 + arm64"
