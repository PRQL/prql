# Range: 10..20

10..20

==>

Query(Statements(PipelineStatement(Pipeline(RangeExpression))))

# Comment

1 # Hello

==>

Query(Statements(PipelineStatement(Pipeline(Integer))),Comment)

# Docblock

#! Hello
1

==>

Query(Docblock,Statements(PipelineStatement(Pipeline(Integer))))

# Variable declaration

let foo = (1)

==>

Query(Statements(VariableDeclaration(NestedPipeline(Pipeline(Integer)))))

# Function declaration

let my_func = arg1 -> arg1

==>

Query(Statements(VariableDeclaration(Lambda(LambdaParam,Ident))))

# Function declaration with two args

let my_func = arg1 arg2 -> arg1 + arg2

==>

Query(Statements(VariableDeclaration(Lambda(LambdaParam,LambdaParam,BinaryExpression(Ident,ArithOp,Ident)))))

# Simple pipeline

from foo | select bar

==>

Query(Statements(PipelineStatement(Pipeline(CallExpression(Ident,Ident),CallExpression(Ident,Ident)))))
