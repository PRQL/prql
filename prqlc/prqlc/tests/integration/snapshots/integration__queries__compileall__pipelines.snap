---
source: prqlc/prqlc/tests/integration/queries.rs
expression: "# sqlite:skip (Only works on Sqlite implementations which have the extension\n# installed\n# https://stackoverflow.com/questions/24037982/how-to-use-regexp-in-sqlite)\n\nfrom tracks\n\nfilter (name ~= \"Love\")\nfilter ((milliseconds / 1000 / 60) | in 3..4)\nsort track_id\ntake 1..15\nselect {name, composer}\n"
input_file: prqlc/prqlc/tests/integration/queries/pipelines.prql
---
--- generic
+++ clickhouse
@@ -1,20 +1,20 @@
 WITH table_0 AS (
   SELECT
     name,
     composer,
     track_id
   FROM
     tracks
   WHERE
-    REGEXP(name, 'Love')
-    AND milliseconds / 1000 / 60 BETWEEN 3 AND 4
+    match(name, 'Love')
+    AND ((milliseconds / 1000) / 60) BETWEEN 3 AND 4
   ORDER BY
     track_id
   LIMIT
     15
 )
 SELECT
   name,
   composer
 FROM
   table_0

--- generic
+++ duckdb
@@ -1,20 +1,20 @@
 WITH table_0 AS (
   SELECT
     name,
     composer,
     track_id
   FROM
     tracks
   WHERE
-    REGEXP(name, 'Love')
-    AND milliseconds / 1000 / 60 BETWEEN 3 AND 4
+    REGEXP_MATCHES(name, 'Love')
+    AND ((milliseconds / 1000) / 60) BETWEEN 3 AND 4
   ORDER BY
     track_id
   LIMIT
     15
 )
 SELECT
   name,
   composer
 FROM
   table_0


--- generic
+++ glaredb
@@ -1,20 +1,20 @@
 WITH table_0 AS (
   SELECT
     name,
     composer,
     track_id
   FROM
     tracks
   WHERE
-    REGEXP(name, 'Love')
-    AND milliseconds / 1000 / 60 BETWEEN 3 AND 4
+    name ~ 'Love'
+    AND ((milliseconds * 1.0 / 1000) * 1.0 / 60) BETWEEN 3 AND 4
   ORDER BY
     track_id
   LIMIT
     15
 )
 SELECT
   name,
   composer
 FROM
   table_0

--- generic
+++ mysql
@@ -1,20 +1,20 @@
 WITH table_0 AS (
   SELECT
     name,
     composer,
     track_id
   FROM
     tracks
   WHERE
-    REGEXP(name, 'Love')
-    AND milliseconds / 1000 / 60 BETWEEN 3 AND 4
+    REGEXP_LIKE(name, 'Love', 'c')
+    AND ((milliseconds / 1000) / 60) BETWEEN 3 AND 4
   ORDER BY
     track_id
   LIMIT
     15
 )
 SELECT
   name,
   composer
 FROM
   table_0

--- generic
+++ postgres
@@ -1,20 +1,20 @@
 WITH table_0 AS (
   SELECT
     name,
     composer,
     track_id
   FROM
     tracks
   WHERE
-    REGEXP(name, 'Love')
-    AND milliseconds / 1000 / 60 BETWEEN 3 AND 4
+    name ~ 'Love'
+    AND ((milliseconds * 1.0 / 1000) * 1.0 / 60) BETWEEN 3 AND 4
   ORDER BY
     track_id
   LIMIT
     15
 )
 SELECT
   name,
   composer
 FROM
   table_0
