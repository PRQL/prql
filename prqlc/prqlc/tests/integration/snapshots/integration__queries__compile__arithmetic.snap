---
source: prqlc/prqlc/tests/integration/queries.rs
expression: "# mssql:test\nfrom [\n    { id = 1, x_int =  13, x_float =  13.0, k_int =  5, k_float =  5.0 },\n    { id = 2, x_int = -13, x_float = -13.0, k_int =  5, k_float =  5.0 },\n    { id = 3, x_int =  13, x_float =  13.0, k_int = -5, k_float = -5.0 },\n    { id = 4, x_int = -13, x_float = -13.0, k_int = -5, k_float = -5.0 },\n]\nselect {\n    id,\n\n    f_ii = (x_int / k_int | as REAL),\n    f_if = (x_int / k_float | as REAL),\n    f_fi = (x_float / k_int | as REAL),\n    f_ff = (x_float / k_float | as REAL),\n\n    q_ii = (x_int // k_int | as REAL),\n    q_if = (x_int // k_float | as REAL),\n    q_fi = (x_float // k_int | as REAL),\n    q_ff = (x_float // k_float | as REAL),\n\n    r_ii = (x_int % k_int | as REAL),\n    r_if = (x_int % k_float | as REAL),\n    r_fi = (x_float % k_int | as REAL),\n    r_ff = (x_float % k_float | as REAL),\n\n    x_ii = (q_ii * k_int + r_ii | math.round 0 | as REAL),\n    x_if = (q_if * k_float + r_if | math.round 0 | as REAL),\n    x_fi = (q_fi * k_int + r_fi | math.round 0 | as REAL),\n    x_ff = (q_ff * k_float + r_ff | math.round 0 | as REAL),\n}\nsort id\n"
input_file: prqlc/prqlc/tests/integration/queries/arithmetic.prql
---
WITH table_0 AS (
  SELECT
    1 AS id,
    13 AS x_int,
    13.0 AS x_float,
    5 AS k_int,
    5.0 AS k_float
  UNION
  ALL
  SELECT
    2 AS id,
    -13 AS x_int,
    -13.0 AS x_float,
    5 AS k_int,
    5.0 AS k_float
  UNION
  ALL
  SELECT
    3 AS id,
    13 AS x_int,
    13.0 AS x_float,
    -5 AS k_int,
    -5.0 AS k_float
  UNION
  ALL
  SELECT
    4 AS id,
    -13 AS x_int,
    -13.0 AS x_float,
    -5 AS k_int,
    -5.0 AS k_float
)
SELECT
  id,
  CAST(x_int / k_int AS REAL) AS f_ii,
  CAST(x_int / k_float AS REAL) AS f_if,
  CAST(x_float / k_int AS REAL) AS f_fi,
  CAST(x_float / k_float AS REAL) AS f_ff,
  CAST(
    FLOOR(ABS(x_int / k_int)) * SIGN(x_int) * SIGN(k_int) AS REAL
  ) AS q_ii,
  CAST(
    FLOOR(ABS(x_int / k_float)) * SIGN(x_int) * SIGN(k_float) AS REAL
  ) AS q_if,
  CAST(
    FLOOR(ABS(x_float / k_int)) * SIGN(x_float) * SIGN(k_int) AS REAL
  ) AS q_fi,
  CAST(
    FLOOR(ABS(x_float / k_float)) * SIGN(x_float) * SIGN(k_float) AS REAL
  ) AS q_ff,
  CAST(x_int % k_int AS REAL) AS r_ii,
  CAST(x_int % k_float AS REAL) AS r_if,
  CAST(x_float % k_int AS REAL) AS r_fi,
  CAST(x_float % k_float AS REAL) AS r_ff,
  CAST(
    ROUND(
      CAST(
        FLOOR(ABS(x_int / k_int)) * SIGN(x_int) * SIGN(k_int) AS REAL
      ) * k_int + CAST(x_int % k_int AS REAL),
      0
    ) AS REAL
  ) AS x_ii,
  CAST(
    ROUND(
      CAST(
        FLOOR(ABS(x_int / k_float)) * SIGN(x_int) * SIGN(k_float) AS REAL
      ) * k_float + CAST(x_int % k_float AS REAL),
      0
    ) AS REAL
  ) AS x_if,
  CAST(
    ROUND(
      CAST(
        FLOOR(ABS(x_float / k_int)) * SIGN(x_float) * SIGN(k_int) AS REAL
      ) * k_int + CAST(x_float % k_int AS REAL),
      0
    ) AS REAL
  ) AS x_fi,
  CAST(
    ROUND(
      CAST(
        FLOOR(ABS(x_float / k_float)) * SIGN(x_float) * SIGN(k_float) AS REAL
      ) * k_float + CAST(x_float % k_float AS REAL),
      0
    ) AS REAL
  ) AS x_ff
FROM
  table_0
ORDER BY
  id
