---
source: prqlc/prqlc/tests/integration/queries.rs
expression: tokens
input_file: prqlc/prqlc/tests/integration/queries/pipelines.prql
---
TokenVec(
    [
        0..76: Comment(" sqlite:skip (Only works on Sqlite implementations which have the extension"),
        76..77: NewLine,
        77..88: Comment(" installed"),
        88..89: NewLine,
        89..164: Comment(" https://stackoverflow.com/questions/24037982/how-to-use-regexp-in-sqlite)"),
        164..165: NewLine,
        165..166: NewLine,
        166..170: Ident("from"),
        171..177: Ident("tracks"),
        177..178: NewLine,
        178..179: NewLine,
        179..185: Ident("filter"),
        186..187: Control('('),
        187..191: Ident("name"),
        192..194: RegexSearch,
        195..201: Literal(String("Love")),
        201..202: Control(')'),
        202..203: NewLine,
        203..209: Ident("filter"),
        210..211: Control('('),
        211..212: Control('('),
        212..224: Ident("milliseconds"),
        225..226: Control('/'),
        227..231: Literal(Integer(1000)),
        232..233: Control('/'),
        234..236: Literal(Integer(60)),
        236..237: Control(')'),
        238..239: Control('|'),
        240..242: Ident("in"),
        243..244: Literal(Integer(3)),
        244..246: Range { bind_left: true, bind_right: true },
        246..247: Literal(Integer(4)),
        247..248: Control(')'),
        248..249: NewLine,
        249..253: Ident("sort"),
        254..262: Ident("track_id"),
        262..263: NewLine,
        263..267: Ident("take"),
        268..269: Literal(Integer(1)),
        269..271: Range { bind_left: true, bind_right: true },
        271..273: Literal(Integer(15)),
        273..274: NewLine,
        274..280: Ident("select"),
        281..282: Control('{'),
        282..286: Ident("name"),
        286..287: Control(','),
        288..296: Ident("composer"),
        296..297: Control('}'),
        297..298: NewLine,
    ],
)
