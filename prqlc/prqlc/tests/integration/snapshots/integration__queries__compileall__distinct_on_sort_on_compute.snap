---
source: prqlc/prqlc/tests/integration/queries.rs
expression: "from invoices\nderive code = case [customer_id < 10 => billing_postal_code, true => null]\ngroup {customer_id, billing_city, billing_country} (\n  sort {-this.code}\n  take 1\n)\nfilter (customer_id | in [4])\ngroup {billing_country} (aggregate {total = math.round 2 (sum total)})\n"
input_file: prqlc/prqlc/tests/integration/queries/distinct_on_sort_on_compute.prql
---
--- generic
+++ clickhouse
@@ -1,39 +1,27 @@
-WITH table_1 AS (
+WITH table_0 AS (
   SELECT
-    billing_country,
+    DISTINCT ON (customer_id, billing_city, billing_country) billing_country,
     total,
     customer_id,
     billing_city,
     CASE
       WHEN customer_id < 10 THEN billing_postal_code
       ELSE NULL
-    END AS _expr_1,
-    billing_postal_code
+    END AS _expr_0
   FROM
     invoices
-),
-table_0 AS (
-  SELECT
+  ORDER BY
+    customer_id,
+    billing_city,
     billing_country,
-    total,
-    customer_id,
-    ROW_NUMBER() OVER (
-      PARTITION BY customer_id,
-      billing_city,
-      billing_country
-      ORDER BY
-        _expr_1 DESC
-    ) AS _expr_0
-  FROM
-    table_1
+    _expr_0 DESC
 )
 SELECT
   billing_country,
   ROUND(COALESCE(SUM(total), 0), 2) AS total
 FROM
   table_0
 WHERE
-  _expr_0 <= 1
-  AND customer_id IN (4)
+  customer_id IN (4)
 GROUP BY
   billing_country

--- generic
+++ duckdb
@@ -1,39 +1,27 @@
-WITH table_1 AS (
+WITH table_0 AS (
   SELECT
-    billing_country,
+    DISTINCT ON (customer_id, billing_city, billing_country) billing_country,
     total,
     customer_id,
     billing_city,
     CASE
       WHEN customer_id < 10 THEN billing_postal_code
       ELSE NULL
-    END AS _expr_1,
-    billing_postal_code
+    END AS _expr_0
   FROM
     invoices
-),
-table_0 AS (
-  SELECT
+  ORDER BY
+    customer_id,
+    billing_city,
     billing_country,
-    total,
-    customer_id,
-    ROW_NUMBER() OVER (
-      PARTITION BY customer_id,
-      billing_city,
-      billing_country
-      ORDER BY
-        _expr_1 DESC
-    ) AS _expr_0
-  FROM
-    table_1
+    _expr_0 DESC
 )
 SELECT
   billing_country,
   ROUND(COALESCE(SUM(total), 0), 2) AS total
 FROM
   table_0
 WHERE
-  _expr_0 <= 1
-  AND customer_id IN (4)
+  customer_id IN (4)
 GROUP BY
   billing_country


--- generic
+++ glaredb
@@ -22,18 +22,18 @@
       billing_city,
       billing_country
       ORDER BY
         _expr_1 DESC
     ) AS _expr_0
   FROM
     table_1
 )
 SELECT
   billing_country,
-  ROUND(COALESCE(SUM(total), 0), 2) AS total
+  ROUND((COALESCE(SUM(total), 0))::numeric, 2) AS total
 FROM
   table_0
 WHERE
   _expr_0 <= 1
   AND customer_id IN (4)
 GROUP BY
   billing_country


--- generic
+++ postgres
@@ -1,39 +1,27 @@
-WITH table_1 AS (
+WITH table_0 AS (
   SELECT
-    billing_country,
+    DISTINCT ON (customer_id, billing_city, billing_country) billing_country,
     total,
     customer_id,
     billing_city,
     CASE
       WHEN customer_id < 10 THEN billing_postal_code
       ELSE NULL
-    END AS _expr_1,
-    billing_postal_code
+    END AS _expr_0
   FROM
     invoices
-),
-table_0 AS (
-  SELECT
+  ORDER BY
+    customer_id,
+    billing_city,
     billing_country,
-    total,
-    customer_id,
-    ROW_NUMBER() OVER (
-      PARTITION BY customer_id,
-      billing_city,
-      billing_country
-      ORDER BY
-        _expr_1 DESC
-    ) AS _expr_0
-  FROM
-    table_1
+    _expr_0 DESC
 )
 SELECT
   billing_country,
-  ROUND(COALESCE(SUM(total), 0), 2) AS total
+  ROUND((COALESCE(SUM(total), 0))::numeric, 2) AS total
 FROM
   table_0
 WHERE
-  _expr_0 <= 1
-  AND customer_id IN (4)
+  customer_id IN (4)
 GROUP BY
   billing_country
